{"version":3,"sources":["components/layout/Header.jsx","context/auth/authContext.js","constants/index.js","components/layout/Menu.jsx","components/dashboard/BreadCrumbs-component.jsx","components/dashboard/ContentHeader-component.jsx","context/book/bookContext.js","utils/GlobalFilter.js","utils/SearchTableDashboardNew.jsx","components/common/TextFieldGroup.jsx","components/common/SelectListGroup.jsx","components/common/FileUpload.component.jsx","components/common/MultiSelectDatePicker.jsx","components/common/SingleDate-component.jsx","context/alert/alertContext.jsx","components/modal/AddBookModal.Component.jsx","components/dashboard/TableDashboard-component.jsx","components/layout/Content.jsx","components/layout/Footer.jsx","utils/setAuthToken.js","components/auth/Login-component.jsx","components/book/BookSummary-Top.jsx","utils/SearchTableNew.component.jsx","components/common/TextAreaFieldGroup.jsx","context/metadata/metadataContext.js","components/book/book-sections/BookPart1Modal.component.jsx","context/types.js","components/book/book-sections/BookPart2Modal.component.jsx","components/book/BookMetadataTable.jsx","components/book/book-sections/AnnexureModal.component.jsx","components/book/AnnexureSummary.component.jsx","utils/Breadcrumbs.jsx","components/sideNav/SideNav.jsx","components/book/BookIndex.jsx","utils/metadataModals/MetadataSectionModal.component.jsx","utils/metadataModals/metadataModalsUtils.js","components/metadata/metadatasections/MetadataSpeakersCard.component.jsx","components/modal/AddMemberModal.jsx","components/metadata/metadatasections/MetadataParticiapantsCard.component.jsx","components/modal/AddDebateTitleModal.jsx","components/metadata/metadatasections/MetadataDebateTitleCard.component.jsx","components/modal/AddPortfolio.component.jsx","components/metadata/metadatasections/MetadataPortfoliosCard.component.jsx","components/modal/AddIssues.component.jsx","components/metadata/metadatasections/MetadataIssuesCard.component.jsx","components/modal/AddTags.Component.jsx","components/metadata/metadatasections/MetadataTagsCard.jsx","components/metadata/MetadataIndex.componenet.jsx","components/modal/AddUsersAdminModal.jsx","context/admin/adminContext.js","components/Admin/AddUsers/AddUser.jsx","utils/admin/admindataModalsUtils.js","components/Admin/UserLogs/UserLogs--component.jsx","components/Admin/AdminLandingPage.jsx","components/routing/PrivateRoute.js","components/routing/CheckLogin.jsx","context/book/bookReducer.js","context/book/BookState.js","context/auth/authReducer.js","context/auth/AuthState.js","context/alert/alertReducer.jsx","context/alert/AlertState.jsx","context/metadata/metadataReducer.js","context/metadata/MetadataState.js","context/admin/adminReducer.js","context/admin/AdminState.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","data-widget","href","role","type","placeholder","aria-label","data-toggle","src","alt","data-slide","authContext","createContext","getStatusBadge","status","classes","getBindedBadge","binding","getTableActionItems","bookid","to","styleDashBoardCard","margin","marginBottom","modalHeaderBackColour","customer","backgroundColor","bookStateObject","department","bookId","assembly_number","session_number","volume_number","part_number","numofpages","place_session","year_book","dates_session","binding_status","book_returned_date","Date","metadata_given_date","metadata_start_date","metadata_end_date","remarksBook","status_metadata_book","status_of_books","uploadfilePath","metadataStateObject","_id","struct_id","book_id","section_type","start_page","end_page","debate_title_subject","debate_subject_eng","debate_subject_kan","issues_section","tags_array","debate_section_date","question_number","questioner_name","minister_name","minister_portfolio","annexure","debate_participants","path_pdf","modified_user","last_modified_time","getStatusBookSummaryTop","setInputfieldToNull","id_array","console","info","map","id","document","getElementById","setAttribute","changeDateToString","stateObject","dateArray","instanceDateObject","date","undefined","newDate","Menu","useContext","AuthContext","logout","isAuthenticated","user","useEffect","setuserState","useState","userState","Object","keys","length","name","data-accordion","style","display","admin_status","class","onClick","BreadCrumbsDashboard","ContentHeader","bookContext","GlobalFilter","filter","setFilter","metadata","value","setValue","onChange","useAsyncDebounce","marginLeft","marginTop","for","aria-describedby","width","height","float","autocomplete","e","target","SearchTableNewDashboard","tableHeaderName","CUSTOMER","columns_table","table_data","MetadataType","styleDashboardTable","cardHeaderColor","columns","useMemo","data","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","footerGroups","prepareRow","state","setGlobalFilter","globalFilter","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","gotoPage","pageCount","setPageSize","pageSize","metadataType","searchTableName","data-target","overflowY","borderRadius","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","textAlign","defaultProps","TextFieldGroup","error","label","disabled","labelText","formWidth","required","inline_style","classnames","SelectListGroup","options","selectOptions","option","key","FileUpload","htmlFor","MultiSelectDatePicker","SingleDate","selected","dateFormat","dateLabel","alertContext","AddBook","currentBookState","currentBookSetState","onSubmit","onChangeDate","BookContext","otherCollectionProps","errors","data-dismiss","aria-hidden","TableDashboard","classname","body","classList","contains","replace","addclassbody","bookSummaryTable","addBookStruct","loading","deleteItem","getBookStruct","token","bookStruct","setBookStruct","isModalOpen","buttonLoading","setLoading","initSpeakerState","Footer","accessor","sticky","Cell","dateVarRes","split","preventDefault","then","responseMsg","swal","Content","loadUser","setAuthToken","axios","defaults","common","Login","props","AlertContext","login","setAlert","clearErrors","email","password","setUser","add","localStorage","history","push","fontWeight","color","marginRight","BookSummary","useHistory","getCurrentBook","currentBookStructure","getAnnexureItems","bookState","setBookState","constructor","modified_time_state","setTimeout","data-card-widget","title","SearchTableNew","number_sections","TextAreaFieldGroup","metadataContext","MetadataSectionModal","modalTitle","onChangeMultiSelect","currentItem","setCurrentItem","attribute","AddItem","onDelete","MetadataContext","currentMetadata","clearcurrentMetadataSection","annexureItems","debateParticipants","getItems","debateTitles","issuesItems","portfolioItems","tagsItems","DeleteSectionMetadata","a","formClearSteps","setInputFieldsToNull_array","setState_function_array","input_text_id","stateClearFunction","local_state_clear_array","setstateFunc","setMultiSelectFromState","metadataStateVar","objectMetadata","selectedState","selectedStateFunction","filterFunction","filterObject","metadataState","objectMeta","usestateVar","metaObject","meta","result_selected_values","optionsMultiSelect","data_array","input_box_array","item","input_box_options","name_eng","annexure_title","datesSession","membersSection","debateTitlesObject","issuesObject","portfolioObject","annexureObject","selectedDates","setSelectedDates","selectedMembers","setSelectedMembers","selectedDebateTitle","setSelectedDebateTitle","selectedIssues","setSelectedIssues","selectedQuestioner","setSelectedQuestioner","selectedMinister","setSelectedMinister","selectedPortfolio","setSelectedPortfolio","selectedAnnexure","setSelectedAnnexure","selectDatesInst","format","setMultiSelectFromStateDate","labelledBy","modified_time","buttonValue","MetadataSectionModalPart2","BookMetadataTable","setMetadataState","addSection","editSection","deleteSection","sectionalMetadataItems","getMetadataItems","handleChangeMultiSelect","valueMultiselect","mydateParts","dateinformat","value_array","valueArray","val","initMetadataState","getTableItems","sectiontype","modalTarget","editItemfunc","COLUMNS","original","AddSection","currentItemInstance","DeleteMetadata","text","icon","buttons","dangerMode","willDelete","msg","catch","err","log","speaker","modalLabelNames","modalname","currentAnnexure","clearcurrentAnnexure","book_id_num","currentannexure","AnnexureSummary","addAnnexure","editAnnexure","deleteAnnexure","setAnnexureItem","annexItem","initAnnexureState","AddAnnexure","DeleteAnnexure","SideNav","BookIndex","match","params","AddSpeaker","currentMetadataItem","currentSpeaker","addSpeaker","setCurrentItemToNull","name_kan","MetadataSectionCardSpeaker","speakersItems","getSpeakerItems","editItem","metadatatype","modalplaceholdervalue","placeHolderEnglish","placeHolderKannada","response","speakerName","res","JSON","stringify","labelValues","MetadataParticipantsCard","addItem","initState","getTypeReducer","dispatchError","errorName","memberName","AddEditItemFunc","MetadataDebateTitleCard","getDispatch","deleteDispatch","errorDispatch","errorname","tableheaderName","metadatatypeFilter","currentModalName","modalName","modal","dispatchType","DeleteDebateTitle","english","kannada","MetadataPortfolioCard","cardHeader","modalHeaderName","addButtonValue","modalButtonAttribute","DeleteItem","MetadataIssuesCard","MetadataTagsCard","MetadataIndex","setCurrentItemsNull","adminContext","AdminContext","adminUsers","getUsersAdmin","logData","currentUser","registerUser","deleteUser","setAdminUsers","password1","phonenumber","removeLoadingModal","errorText","getErrorDetails","errElements","returnString","includes","join","getAdminTableItems","DeleteItemUser","AddUsersAdminModal","getUsersLogs","removeUsersLogs","setLogs","logsdata","configMetadata","ip","sear","AdminLandingPage","Breadcrumbs","AddUser","PrivateRoute","Component","component","rest","action","payload","sectionmetadata","BookState","useReducer","bookReducer","dispatch","config","get","addbookStruct","post","structbook","annexureId","annexureid","delete","sectionalbook","section","sectionId","sectionid","Provider","reIndexBook","children","setItem","getItem","removeItem","errorValue","AuthState","authReducer","register","formData","alert","AlertState","alertReducer","alerts","timeout","uuid","member","debatetitle","portfolio","issues","tags","MetadataState","metadataReducer","currentDebateParticipants","addItemFromObject","users","AdminState","AdminReducer","App","CheckLogin","path","exact","AdminPage","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.abc8bf4c.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n        {/* Left navbar links */}\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"pushmenu\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-bars\" />\n            </a>\n          </li>\n          <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"index3.html\" className=\"nav-link\">\n              Home\n            </a>\n          </li>\n          <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"#\" className=\"nav-link\">\n              Contact\n            </a>\n          </li>\n        </ul>\n        {/* SEARCH FORM */}\n        <form className=\"form-inline ml-3\">\n          <div className=\"input-group input-group-sm\">\n            <input\n              className=\"form-control form-control-navbar\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-navbar\" type=\"submit\">\n                <i className=\"fas fa-search\" />\n              </button>\n            </div>\n          </div>\n        </form>\n        {/* Right navbar links */}\n        <ul className=\"navbar-nav ml-auto\">\n          {/* Messages Dropdown Menu */}\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n              <i className=\"far fa-comments\" />\n              <span className=\"badge badge-danger navbar-badge\">3</span>\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user1-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 mr-3 img-circle\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Brad Diesel\n                      <span className=\"float-right text-sm text-danger\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">Call me whenever you can...</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user8-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      John Pierce\n                      <span className=\"float-right text-sm text-muted\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">I got your message bro</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user3-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Nora Silvester\n                      <span className=\"float-right text-sm text-warning\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">The subject goes here</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Messages\n              </a>\n            </div>\n          </li>\n          {/* Notifications Dropdown Menu */}\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n              <i className=\"far fa-bell\" />\n              <span className=\"badge badge-warning navbar-badge\">15</span>\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <span className=\"dropdown-item dropdown-header\">\n                15 Notifications\n              </span>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-envelope mr-2\" /> 4 new messages\n                <span className=\"float-right text-muted text-sm\">3 mins</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-users mr-2\" /> 8 friend requests\n                <span className=\"float-right text-muted text-sm\">12 hours</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-file mr-2\" /> 3 new reports\n                <span className=\"float-right text-muted text-sm\">2 days</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Notifications\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-th-large\" />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n// GLOBAL CONSTANTS\nexport const CUSTOMER = \"KLA\";\n\n// Classes\nexport const CUSTOMER_NAME_COLOUR = \"#46A049\";\nexport const LOGIN_CLASS_BODY = \"login-page\";\n\nexport const MODAL_HEADER_KLA = \"#46A049\";\n\n//Metadata Table Constants\n\nexport const TABLE_HEADER_SPEAKER = [\n  \"Name(English)\",\n  \"Name(Kannada)\",\n  \"Status\",\n  \"Actions\",\n];\n\n//Modal Metadata\n\nexport const ADD_EDIT_SPEAKER_TITLE_MODAL = \"ADD/EDIT SPEAKER\";\n\nexport const ADD_EDIT_CHAIRMAN_TITLE_MODAL = \"ADD/EDIT CHAIRMAN\";\n\n// Dashboard table Items\n\nexport const getStatusBadge = (status) => {\n  let classes = \"badge \";\n  if (status === \"Book Created\" || status === \"CREATED\") {\n    classes += \"badge-info\";\n  } else if (status === \"Metadata Completed\") {\n    classes += \"badge-warning\";\n  } else if (status === \"OCR Process\") {\n    classes += \"badge-primary\";\n  } else if (status === \"Indexing\") {\n    classes += \"badge-secondary\";\n  } else if (status === \"Book Live\") {\n    classes += \"badge-success\";\n  } else if (status === \"Book Error\") {\n    classes += \"badge-danger\";\n  }\n\n  return <span className={classes}>{status}</span>;\n};\n\nexport const getBindedBadge = (binding) => {\n  let classes = \"badge \";\n  if (!binding) {\n    classes += `badge-danger`;\n  } else {\n    classes += \"badge-success\";\n  }\n  return <span className={classes}>{binding ? \"Binded\" : \"UnBinded\"}</span>;\n};\n\nexport const getTableActionItems = (bookid) => (\n  <Link to={`/bookindex/${bookid}`} className=\"btn btn-link\">\n    Edit\n  </Link>\n);\n\n/// Card Styling\nexport const styleDashBoardCard = {\n  margin: \"0 10px\",\n  marginBottom: \"1rem\",\n};\n\nexport const modalHeaderBackColour = (customer) => {\n  const backgroundcolor = customer === \"KLA\" ? \"#c5e1a5\" : \"#DD3D45\";\n  return {\n    backgroundColor: backgroundcolor,\n  };\n};\n\n// Book State Object\n\nexport const bookStateObject = {\n  department: null,\n  bookId: null, //\n  assembly_number: null, //\n  session_number: null, //\n  volume_number: null, //\n  part_number: null, //\n  numofpages: null, //\n  place_session: null, //\n\n  year_book: null, //\n  dates_session: [], //\n\n  binding_status: null, //\n  book_returned_date: new Date(), //\n  metadata_given_date: new Date(), //\n  metadata_start_date: new Date(), //\n  metadata_end_date: new Date(), //\n  remarksBook: null, //\n  status_metadata_book: null, //\n  status_of_books: null, //\n  uploadfilePath: null,\n\n  // loading: false,\n\n  //errors: {},\n};\n\n//Setting the Add Sectional Metadata State\nexport const metadataStateObject = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: null,\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  minister_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_participants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const metadataStateObjectPart1 = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: \"part1\",\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  ministers_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_paticipants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const metadataStateObjectPart2 = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: \"part2\",\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  ministers_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_participants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const getStatusBookSummaryTop = (status) => {\n  let classes = \"btn btn-block btn-sm \";\n  if (status === \"Book Created\" || status === \"CREATED\") {\n    classes += \"bg-gradient-info\";\n  } else if (status === \"Metadata Completed\") {\n    classes += \"bg-gradient-warning\";\n  } else if (status === \"OCR Process\") {\n    classes += \"bg-gradient-primary\";\n  } else if (status === \"Indexing\") {\n    classes += \"bg-gradient-secondary\";\n  } else if (status === \"Book Live\") {\n    classes += \"bg-gradient-success\";\n  } else if (status === \"Book Error\") {\n    classes += \"bg-gradient-danger\";\n  }\n\n  return classes;\n};\n//\nexport const setInputfieldToNull = (id_array) => {\n  //  This method set the form input to null\n  // https://stackoverflow.com/questions/7609130/set-the-value-of-an-input-field\n  console.info(\"[DEBUG] inputfield\", id_array);\n  id_array.map((id) => {\n    document.getElementById(id).setAttribute(\"value\", \"\");\n  });\n};\n\n// get unique elements in the array of objects\nfunction unique_element(arr) {\n  const seen = new Set();\n  // const arr = [\n  //   { id: 1, name: \"test1\" },\n  //   { id: 2, name: \"test2\" },\n  //   { id: 2, name: \"test3\" },\n  //   { id: 3, name: \"test4\" },\n  //   { id: 4, name: \"test5\" },\n  //   { id: 5, name: \"test6\" },\n  //   { id: 5, name: \"test7\" },\n  //   { id: 6, name: \"test8\" },\n  // ];\n\n  const result = arr.filter((el) => {\n    const duplicate = seen.has(el.value);\n    seen.add(el.value);\n    return !duplicate;\n  });\n  return result;\n}\n\n// Function for Book Summary Top to filter the Date Value to ISO String to String\n// [book_returned_date,metadata_end_date,metadata_given_date,metadata_start_date]\nexport function changeDateToString(stateObject, dateArray) {\n  let instanceDateObject = stateObject;\n\n  dateArray.map((date) => {\n    if (\n      !(\n        instanceDateObject[date] === null ||\n        instanceDateObject[date] === undefined\n      )\n    ) {\n      const newDate = new Date(instanceDateObject[date]);\n      // console.info(\"[DEBUG] Book Summary Top newDate \", newDate);\n      //let newDateString = newDate.toString();\n      instanceDateObject[date] = newDate;\n    }\n  });\n  //console.info(\"[DEBUG] Book Summary Top \", instanceDateObject);\n  return instanceDateObject;\n}\n\n// Function to remove the old classes from the body\n\nexport function removeclassbody(classname) {\n  if (document.body.classList.contains(classname)) {\n    document.body.className = document.body.className.replace(classname, \"\");\n  }\n}\nexport function addclassbody(classname) {\n  if (!document.body.classList.contains(classname)) {\n    document.body.className = document.body.className.replace(\n      \"\",\n      \"sidebar-mini \"\n    );\n  }\n}\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nimport { CUSTOMER } from '../../constants/index';\n\nconst Menu = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n\n  const onLogout = () => {\n    logout();\n  };\n\n  useEffect(() => {\n    // if (user.status_user === false) {\n    //   logout();\n    // }\n    // console.log('From On Logout ', user);\n    setuserState(user);\n  }, [user]);\n  const [userState, setuserState] = useState({});\n  // https://stackoverflow.com/questions/18023493/bootstrap-dropdown-sub-menu-missing?rq=1\n  // https://stackoverflow.com/questions/43370176/set-loading-state-before-and-after-an-action-in-a-react-class-component\n  return (\n    Object.keys(userState).length !== 0 && (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n        {/* Brand Logo */}\n        <Link to=\"/dashboard\" className=\"brand-link\">\n          {/* <img\n        src=\"dist/img/AdminLTELogo.png\"\n        alt=\"AdminLTE Logo\"\n        className=\"brand-image img-circle elevation-3\"\n        style={{ opacity: \"0.8\" }}\n      /> */}\n          <span className=\"brand-text font-weight-light\">\n            Legislature{' '}\n            {CUSTOMER === 'KLA' ? <span>Assembly</span> : <span>Council</span>}{' '}\n            Ops\n          </span>\n        </Link>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          {/* Sidebar user panel (optional) */}\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div className=\"image\">\n              {/* <img\n            src=\"https://lh3.googleusercontent.com/ogw/ADGmqu8Gnaw0ZDmdOBUl-LJ6V6QP2zvIzBTNzL2YzwGb=s32-c-mo\"\n            //src=\"\"\n            className=\"img-circle elevation-2\"\n            alt=\"User Image\"\n          /> */}\n            </div>\n            <div className=\"info\">\n              <a href=\"#\" className=\"d-block\">\n                {user ? user.name : 'Vaibhav'}\n                {/* Vaibhav Sanil */}\n              </a>\n            </div>\n          </div>\n          {/* Sidebar Menu */}\n          <nav className=\"mt-2\">\n            <ul\n              className=\"nav nav-pills nav-sidebar flex-column\"\n              data-widget=\"treeview\"\n              role=\"menu\"\n              data-accordion=\"false\"\n            >\n              {/* Add icons to the links using the .nav-icon class\n       with font-awesome or any other icon font library */}\n              <li className=\"nav-item has-treeview menu-open\">\n                <Link to=\"/dashboard\" className=\"nav-link active\">\n                  <i className=\"nav-icon fas fa-tachometer-alt\" />\n                  <p>\n                    Dashboard\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </Link>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard\" className=\"nav-link active\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Dashboard v1</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard\" className=\"nav-link \">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Dashboard v2</p>\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n\n              {/* Start of Debates Menu */}\n\n              <li className=\"nav-item has-treeview menu-open\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-copy\" />\n                  <p>\n                    Debates Console\n                    <i className=\"fas fa-angle-left right\" />\n                    <span className=\"badge badge-info right\">6</span>\n                  </p>\n                </Link>\n                <ul className=\"nav nav-treeview\" style={{ display: 'block' }}>\n                  <li className=\"nav-item\">\n                    <Link to=\"/dashboard\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Dashboard</p>\n                    </Link>\n                  </li>\n                  {/* <li className=\"nav-item\">\n                <Link to=\"/bookindex\" className=\"nav-link\">\n                  <i className=\"far fa-circle nav-icon\" />\n                  <p>ADD/EDIT BOOK</p>\n                </Link>\n              </li> */}\n                  {userState.admin_status && (\n                    <>\n                      <li className=\"nav-item\">\n                        <Link to=\"/metadata\" className=\"nav-link\">\n                          <i className=\"far fa-circle nav-icon\" />\n                          <p>Metadata</p>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"/reports\" className=\"nav-link\">\n                          <i className=\"far fa-circle nav-icon\" />\n                          <p>Reports</p>\n                        </Link>\n                      </li>\n\n                      <li className=\"nav-item\">\n                        <Link to=\"/admin\" className=\"nav-link\">\n                          <i className=\"far fa-circle nav-icon\" />\n                          <p>Administration</p>\n                        </Link>\n                      </li>\n                    </>\n                  )}\n                </ul>\n              </li>\n              {/* End of Debates Menu */}\n              {/* Committee Reports Start */}\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-users\" />\n                  <p>\n                    Committe Reports\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </Link>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <Link to=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 1</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link href=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 2</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link href=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 3</p>\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n              {/* Committee Reports End */}\n              {/* Budget Speech */}\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i className=\"fas fa-rupee-sign nav-icon\" />\n                  <p>\n                    Budget Speech\n                    <i className=\"fas fa-angle-left right\" />\n                  </p>\n                </Link>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <Link to=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n\n                      <p>Dashboard</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 2</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 3</p>\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n\n              {/* Budget Speech End */}\n              {/* Review Start */}\n              <li className=\"nav-item has-treeview\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i class=\"nav-icon fas fa-book-reader\"></i>\n                  <p>\n                    Review\n                    <i className=\"fas fa-angle-left right\" />\n                  </p>\n                </Link>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <Link to=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Dashboard</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link href=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 1</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link href=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 2</p>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link href=\"#\" className=\"nav-link\">\n                      <i className=\"far fa-circle nav-icon\" />\n                      <p>Action 3</p>\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n              {/* Review End */}\n\n              <li className=\"nav-header\">MISCELLANEOUS</li>\n              <li className=\"nav-item\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-file\" />\n                  <p>Documentation</p>\n                </Link>\n              </li>\n\n              <li className=\"nav-header\">Action</li>\n              <li className=\"nav-item\">\n                <Link to=\"#\" className=\"nav-link\" onClick={onLogout}>\n                  <i class=\"nav-icon fas fa-sign-out-alt text-danger\"></i>\n                  <p className=\"text\">Logout</p>\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"#\" className=\"nav-link\">\n                  <i class=\"nav-icon fas fa-question-circle text-warning\"></i>\n                  <p>Contact Support</p>\n                </Link>\n              </li>\n            </ul>\n          </nav>\n          {/* /.sidebar-menu */}\n        </div>\n        {/* /.sidebar */}\n      </aside>\n    )\n  );\n};\n\nexport default Menu;\n","import React, { useContext } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst BreadCrumbsDashboard = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n  // const breadcrumbItem = (\n\n  // )\n  return (\n    <div className=\"content-header\">\n      <div className=\"container-fluid\">\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-6\">\n            <h1 className=\"m-0 text-dark\">Welcome {user ? user.name : \"\"} </h1>\n          </div>\n          {/* /.col */}\n          <div className=\"col-sm-6\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"#\">Home</a>\n              </li>\n              <li className=\"breadcrumb-item active\">\n                <a href=\"#\">Dashboard V1</a>{\" \"}\n              </li>\n            </ol>\n          </div>\n          {/* /.col */}\n        </div>\n      </div>\n      {/* /.container-fluid */}\n    </div>\n  );\n};\n\nexport default BreadCrumbsDashboard;\n","import React, { Fragment } from \"react\";\n\nimport BreadCrumbsDashboard from \"./BreadCrumbs-component\";\n\nfunction ContentHeader() {\n  return (\n    <Fragment>\n      {/* Content Header (Page header) */}\n      <div className=\"content-header\">\n        <div className=\"container-fluid\">\n          <BreadCrumbsDashboard />\n        </div>\n        {/* /.container-fluid */}\n      </div>\n      {/* /.content-header END */}\n    </Fragment>\n  );\n}\n\nexport default ContentHeader;\n","import { createContext } from \"react\";\n\nconst bookContext = createContext();\n\nexport default bookContext;\n","import React, { useState, Fragment } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\nexport const GlobalFilter = ({ filter, setFilter, metadata }) => {\n  const [value, setValue] = useState(filter);\n  const onChange = useAsyncDebounce((value) => {\n    setFilter(value || undefined);\n  }, 750);\n  return (\n    <div className=\"row\">\n      <div\n        className=\"form-group\"\n        style={{\n          display: 'flex',\n          marginLeft: '65%',\n        }}\n      >\n        <label\n          style={{\n            marginTop: '2px',\n            //float: \"right\",\n          }}\n          for=\"tableSearch\"\n        >\n          Search\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"tableSearch\"\n          aria-describedby=\"tableSearch\"\n          placeholder={`Search ${metadata}`}\n          style={{\n            display: 'inline-block',\n            width: '200px',\n            height: '30px',\n            marginLeft: '10px',\n            float: 'right',\n          }}\n          autocomplete=\"off\"\n          value={value || ''}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  usePagination,\n} from \"react-table\";\n\nimport { GlobalFilter } from \"./GlobalFilter\";\n\nimport \"./SearchTableNew.scss\";\n\nexport const SearchTableNewDashboard = ({\n  tableHeaderName,\n  CUSTOMER,\n  columns_table,\n  table_data,\n  MetadataType,\n  styleDashboardTable,\n  cardHeaderColor,\n}) => {\n  //const columns = useMemo(() => COLUMNS, []);\n  const columns = useMemo(() => columns_table, []);\n\n  //console.log(columns);\n\n  //const data = useMemo(() => table_data, []);\n  const data = table_data;\n\n  // console.log(\n  //   `from Search Table New value of CUSTOMER:${CUSTOMER} & MetadataType : ${MetadataType}`\n  // );\n\n  //console.log(table_data);\n\n  //const data = useMemo(() => MOCK_DATA, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n\n    gotoPage,\n    pageCount,\n    setPageSize,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 2 },\n    },\n\n    useGlobalFilter,\n\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  function addMetadataGlobalFilter(customer, metadataType) {\n    if (metadataType === \"Speaker\") {\n      return customer === \"KLA\" ? \"Speaker's\" : \"Chairman's\";\n    } else if (metadataType === \"Member\") {\n      return customer === \"KLA\" ? \"Member's\" : \"Member's\";\n    } else if (metadataType === \"debateTitle\") {\n      return customer === \"KLA\" ? \"Debate Title's\" : \"Debate Title's\";\n    } else if (metadataType === \"portfolio\") {\n      return customer === \"KLA\" ? \"Portfolio's\" : \"Portfolio's\";\n    } else if (metadataType === \"issues\") {\n      return customer === \"KLA\" ? \"Issues's\" : \"Issues's\";\n    } else if (metadataType === \"tags\") {\n      return customer === \"KLA\" ? \"Tag's\" : \"Tag's\";\n    } else if (metadataType === \"books\") {\n      return customer === \"KLA\" ? \"Book's\" : \"Book's\";\n    }\n  }\n\n  let searchTableName = addMetadataGlobalFilter(CUSTOMER, MetadataType);\n\n  //console.log(searchTableName);\n\n  const tableStyle = {\n    display: \"block\",\n    height: \"400px\",\n    overflowY: \"scroll\",\n    borderRadius: \"2px\",\n  };\n\n  return (\n    <>\n      {/* <div className=\"content-wrapper\"> */}\n      <div className=\"col-12\">\n        <section className=\"action-tables\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\" style={styleDashboardTable}>\n                <div className=\"card-header\" style={cardHeaderColor}>\n                  <h3\n                    className=\"card-title\"\n                    style={{\n                      marginTop: \"6px\",\n                    }}\n                  >\n                    <b> {tableHeaderName} </b>{\" \"}\n                  </h3>\n                  {/* TODO- Conditional Rendering of Buttons for RED Clolour for KLC as per the passed props */}\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-success\"\n                    data-toggle=\"modal\"\n                    data-target=\"#modal-lg\"\n                    style={{\n                      float: \"right\",\n                      width: \"158px\",\n                    }}\n                  >\n                    Add Book\n                  </button>\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  <GlobalFilter\n                    filter={globalFilter}\n                    setFilter={setGlobalFilter}\n                    metadata={searchTableName}\n                  />\n                  <table\n                    // className=\"table table-hover table-condensed table-scrollable\"\n                    className=\"table table-bordered table-striped table-head-fixed text-center\"\n                    {...getTableProps()}\n                    style={tableStyle}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr\n                          style={{\n                            width: \"100%\",\n                          }}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map((column) => (\n                            <th\n                              style={{\n                                width: \"500px\",\n                              }}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render(\"Header\")}\n                              <span style={{ display: \"inline-block\" }}>\n                                {column.isSorted\n                                  ? column.isSortedDesc\n                                    ? \" 🔽\"\n                                    : \" 🔼\"\n                                  : \"\"}\n                              </span>\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    {rows.length !== 0 ? (\n                      <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                          prepareRow(row);\n                          return (\n                            <tr {...row.getRowProps()}>\n                              {row.cells.map((cell) => {\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                    {cell.render(\"Cell\")}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: \"center\",\n                          marginTop: \"15px\",\n                        }}\n                      >\n                        Please Add a Book .....\n                      </h6>\n                    )}\n                    {/* <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody> */}\n                    {/* <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot> */}\n                  </table>\n\n                  {/* <table\n                    id=\"example1\"\n                    className=\"table table-bordered table-striped\"\n                    {...getTableProps()}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                          {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                              {column.render(\"Header\")}\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                    <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot>\n                  </table> */}\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n              {/* Table Searchable Start with Filter */}\n            </div>\n          </div>\n        </section>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nSearchTableNewDashboard.defaultProps = {\n  tableHeaderName: \"Datatable of Added Speakers\",\n  customer: \"KLA\",\n  columns_table: [],\n  MetadataType: \"books\",\n  tableHeaderName: \"Datatable of the Books & Status\",\n};\n\nSearchTableNewDashboard.propTypes = {\n  tableHeaderName: PropTypes.string.isRequired,\n  CUSTOMER: PropTypes.string.isRequired,\n  columns_table: PropTypes.array.isRequired,\n  table_data: PropTypes.array.isRequired,\n  MetadataType: PropTypes.string.isRequired,\n  styleDashboardTable: PropTypes.object.isRequired,\n  cardHeaderColor: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled,\n  id,\n  labelText,\n  formWidth,\n  required,\n  inline_style,\n}) => {\n  return (\n    <div className={`form-group ${inline_style}`}>\n      <label for={id}>{labelText}</label>\n      {/* if(disabled){\n        <input\n          type={type}\n          className={classnames(`form-control form-control ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          required\n\n        />\n      } */}\n\n      {required ? (\n        <input\n          type={type}\n          className={classnames(`form-control form-control  ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          required\n          autocomplete=\"off\"\n        />\n      ) : (\n        <input\n          type={type}\n          className={classnames(`form-control form-control ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          autocomplete=\"off\"\n        />\n      )}\n\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nTextFieldGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextFieldGroup;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  onChange,\n  options,\n  labelText,\n  id,\n  formWidth,\n}) => {\n  const selectOptions = options.map((option) => (\n    <option key={option.label} value={option.value}>\n      {option.label}\n    </option>\n  ));\n  return (\n    <div className=\"form-group\">\n      <label for={id}>{labelText}</label>\n      <select\n        className={classnames(`form-control form-control ${formWidth}`, {\n          'is-invalid': error,\n        })}\n        name={name}\n        onChange={onChange}\n      >\n        {selectOptions}\n      </select>\n\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nSelectListGroup.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  // value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\n// TextFieldGroup.defaultProps = {\n//     type: 'text'\n// };\n\nexport default SelectListGroup;\n","import React from \"react\";\n\nconst FileUpload = ({ info, error, labelText }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"exampleInputFile\">{labelText}</label>\n      <div className=\"input-group\">\n        <div className=\"custom-file\">\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"exampleInputFile\"\n          />\n          <label className=\"custom-file-label\" htmlFor=\"exampleInputFile\">\n            Choose file\n          </label>\n        </div>\n        <div className=\"input-group-append\">\n          <button className=\"input-group-text btn btn-outline-success\" id>\n            Upload\n          </button>\n        </div>\n      </div>\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import React, { Fragment } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport \"./MultiSelectDates.syles.scss\";\n\nconst MultiSelectDatePicker = ({\n  id,\n  labelText,\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled,\n\n  formWidth,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label for={id}>{labelText}</label>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        type={type}\n        className={classnames(` form-control date ${formWidth}`, {\n          \"is-invalid\": error,\n        })}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n        id={id}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nMultiSelectDatePicker.defaultProps = {\n  type: \"text\",\n};\n\nMultiSelectDatePicker.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n};\n\nexport default MultiSelectDatePicker;\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst SingleDate = ({\n  selected,\n  onChange,\n  name,\n  dateFormat,\n  id,\n  dateLabel,\n  disabled,\n}) => {\n  //console.log(disabled);\n  return (\n    <div className=\"form-group\">\n      <label for={name} style={{ display: \"block\" }}>\n        {dateLabel}\n      </label>\n      <DatePicker\n        selected={selected}\n        onChange={onChange}\n        name={name}\n        dateFormat={dateFormat}\n        id={id}\n      />\n      {/* \n      {disabled ? (\n        <DatePicker\n          selected={selected}\n          onChange={onChange}\n          name={name}\n          dateFormat={dateFormat}\n          id={id}\n          disabled\n        />\n      ) : (\n        <DatePicker\n          selected={selected}\n          onChange={onChange}\n          name={name}\n          dateFormat={dateFormat}\n          id={id}\n        />\n      )} */}\n    </div>\n  );\n};\n\nexport default SingleDate;\n","import { createContext } from \"react\";\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { Component, useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport FileUploadForm from \"../common/FileUpload.component\";\n// import MultiSelectDate from \"../common/MultiSelectDatePicker\";\nimport MultiSelectDatePicker from \"../common/MultiSelectDatePicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SingleDate from \"../common/SingleDate-component\";\n\n// Import Book Context\n\nimport BookContext from \"../../context/book/bookContext\";\n\n//Import Alert Context\nimport AlertContext from \"../../context/alert/alertContext\";\n\nimport { CUSTOMER, modalHeaderBackColour } from \"../../constants/index\";\n\nconst AddBook = ({\n  currentBookState,\n  currentBookSetState,\n  onChange,\n  onSubmit,\n  onChangeDate,\n}) => {\n  const bookContext = useContext(BookContext);\n  const { bookId, ...otherCollectionProps } = currentBookState;\n\n  const { errors } = bookContext;\n\n  // Select options for status\n  const optionsSession = [\n    { label: \"* Select Place Of Session\", value: 0 },\n    { label: \"Bangalore\", value: \"Bangalore\" },\n    { label: \"Belegavi\", value: \"Belegavi\" },\n  ];\n  const optionsBinding = [\n    { label: \"--Binding Status--\", value: 0 },\n    { label: \"UN-BINDED\", value: false },\n    { label: \"BINDED\", value: true },\n  ];\n\n  return (\n    <div className=\"modal fade\" id=\"modal-lg\">\n      <div className=\"modal-dialog modal-lg\">\n        <form onSubmit={onSubmit}>\n          <div className=\"modal-content\">\n            <div\n              className=\"modal-header\"\n              style={modalHeaderBackColour(CUSTOMER)}\n            >\n              <h4 className=\"modal-title\">Add New Book</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {/* Book ID Row */}\n              <div className=\"row\">\n                <div class=\"col-sm\">\n                  {/* <h4 style={{ marginLeft: \"0 25px\" }}>\n                    Book ID: <span className=\"bookId-number\">54</span>{\" \"}\n                  </h4> */}\n                  <TextFieldGroup\n                    placeholder=\"Book ID\"\n                    name=\"bookId\"\n                    value={otherCollectionProps.bookId}\n                    onChange={onChange}\n                    error={errors.bookId}\n                    id=\"bookId\"\n                    labelText=\"Book Id\"\n                    formWidth=\"col-4\"\n                  />\n                </div>\n                <div class=\"col-sm\"></div>\n                {/* Book ID Row End */}\n              </div>\n              {/* <form onSubmit={onSubmit}> */}\n              <div class=\"row\">\n                <div className=\"col-md-12 mx-auto\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      {CUSTOMER === \"KLA\" ? (\n                        <TextFieldGroup\n                          placeholder=\"AssemblyNumber\"\n                          name=\"assembly_number\"\n                          value={otherCollectionProps.assembly_number}\n                          onChange={onChange}\n                          error={errors.assembly_number}\n                          id=\"assembly_number\"\n                          labelText=\"Assembly Number\"\n                          formWidth=\"col-4\"\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SelectListGroup\n                        placeholder=\"Binding Status\"\n                        name=\"binding_status\"\n                        value={otherCollectionProps.binding_status}\n                        onChange={onChange}\n                        error={errors.binding_status}\n                        id=\"binding_status\"\n                        labelText=\"Binding Status\"\n                        formWidth=\"col-6\"\n                        options={optionsBinding}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Session Number\"\n                        name=\"session_number\"\n                        value={otherCollectionProps.session_number}\n                        onChange={onChange}\n                        error={errors.session_number}\n                        id=\"session_number\"\n                        labelText=\"Session Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.book_returned_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            book_returned_date: date,\n                          })\n                        }\n                        name=\"book_returned_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"book_returned_date\"\n                        dateLabel=\"Book Returned Date\"\n                        //disabled={this.state.statusBookBinded ? false : true}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Volume Number\"\n                        name=\"volume_number\"\n                        value={otherCollectionProps.volume_number}\n                        onChange={onChange}\n                        error={errors.volume_number}\n                        id=\"volume_number\"\n                        labelText=\"Volume Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_given_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_given_date: date,\n                          })\n                        }\n                        name=\"metadata_given_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_given_date\"\n                        dateLabel=\"Metadata Given Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Part Number\"\n                        name=\"part_number\"\n                        value={otherCollectionProps.part_number}\n                        onChange={onChange}\n                        error={errors.part_number}\n                        id=\"part_number\"\n                        labelText=\"Part Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_start_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_start_date: date,\n                          })\n                        }\n                        name=\"metadata_start_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_start_date\"\n                        dateLabel=\"Metadata Start Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Number Of Pages\"\n                        name=\"numofpages\"\n                        value={otherCollectionProps.numofpages}\n                        onChange={onChange}\n                        error={errors.numofpages}\n                        id=\"numofpages\"\n                        labelText=\"Number of Pages\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_end_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_end_date: date,\n                          })\n                        }\n                        name=\"metadata_end_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_end_date\"\n                        dateLabel=\"Metadata End Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <SelectListGroup\n                        placeholder=\"PlaceOfSession\"\n                        name=\"place_session\"\n                        value={otherCollectionProps.place_session}\n                        onChange={onChange}\n                        error={errors.place_session}\n                        id=\"place_session\"\n                        labelText=\"Place Of Session\"\n                        formWidth=\"col-6\"\n                        options={optionsSession}\n                      />\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <MultiSelectDatePicker\n                        placeholder=\"Select One or Multiple Dates\"\n                        name=\"dates_session\"\n                        value={otherCollectionProps.dates_session}\n                        onChange={onChangeDate}\n                        error={errors.dates_session}\n                        id=\"dates_session\"\n                        labelText=\"Dates Of Session\"\n                        formWidth=\"col-md\"\n                        info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Year Of Book\"\n                        name=\"year_book\"\n                        value={otherCollectionProps.year_book}\n                        onChange={onChange}\n                        error={errors.year_book}\n                        id=\"year_book\"\n                        labelText=\"Year Of Book\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* TODO - FIle Upload */}\n                      <FileUploadForm\n                        labelText=\"Upload Book Images\"\n                        info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Remarks\"\n                        name=\"remarksBook\"\n                        value={otherCollectionProps.remarksBook}\n                        onChange={onChange}\n                        error={errors.remarksBook}\n                        id=\"remarksBook\"\n                        labelText=\"Remarks\"\n                        formWidth=\"col-md\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-block btn-outline-success\"\n                        onClick={(e) => onSubmit(e)}\n                        style={{\n                          width: \"36%\",\n                          marginTop: \"1.5rem\",\n                          display: \"none\",\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* </form> */}\n            </div>\n            <div className=\"modal-footer justify-content-between\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"submit\"\n                className={\n                  CUSTOMER === \"KLA\"\n                    ? \"btn btn-block btn-outline-success\"\n                    : \"btn btn-block btn-outline-danger\"\n                }\n                data-dismiss=\"modal\"\n                style={{\n                  width: \"36%\",\n                  marginTop: \"1.5rem\",\n                }}\n                onClick={(e) => onSubmit(e)}\n              >\n                Submit\n              </button>\n            </div>\n            {/* End Form here */}\n          </div>\n          {/* /.modal-content */}\n        </form>\n      </div>\n      {/* /.modal-dialog */}\n    </div>\n  );\n};\n\nAddBook.propTypes = {\n  currentBookState: PropTypes.object.isRequired,\n  currentBookSetState: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AddBook;\n","import React, { Fragment, useContext, useState, useEffect } from 'react';\nimport swal from 'sweetalert';\n\n// Import Book Context\n\nimport BookContext from '../../context/book/bookContext';\nimport AuthContext from '../../context/auth/authContext';\n\nimport TableDashboardItems from '../dashboard/TableDashBoardItems';\nimport { SearchTableNewDashboard } from '../../utils/SearchTableDashboardNew';\n\nimport {\n  modalHeaderBackColour,\n  CUSTOMER,\n  getBindedBadge,\n  getStatusBadge,\n  getTableActionItems,\n  styleDashBoardCard,\n  bookStateObject,\n  removeclassbody,\n  addclassbody,\n} from '../../constants/index';\n\nimport AddBookModal from '../modal/AddBookModal.Component';\n\nconst TableDashboard = () => {\n  useEffect(() => {\n    removeclassbody('login-page');\n    addclassbody('sidebar-mini');\n  }, []);\n  const bookContext = useContext(BookContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    bookSummaryTable,\n    loading,\n    deleteItem,\n    addBookStruct,\n    getBookStruct,\n  } = bookContext;\n\n  const { token } = authContext;\n\n  useEffect(() => {\n    getBookStruct();\n  }, []);\n\n  const [bookStruct, setBookStruct] = useState(bookStateObject);\n  const [buttonloading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  // Initialize the Current Spekaer State\n\n  const initSpeakerState = () => {\n    // Intializing the Speaker State to Null\n    setBookStruct(bookStateObject);\n    setLoading({ buttonLoading: false });\n  };\n\n  const onChange = (e) =>\n    setBookStruct({ ...bookStruct, [e.target.name]: e.target.value });\n\n  const onChangeDate = (e) => {\n    let dateVar = e.target.value;\n    let dateVarRes = dateVar.split(',');\n\n    console.info('[DEBUG] change date in ADD Book Action', dateVarRes);\n\n    setBookStruct({\n      ...bookStruct,\n      dates_session: dateVarRes,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading({ buttonLoading: true });\n    //const currentItemInstance = currentItem;\n    // delete currentItem[\"last_modified_time\"];\n    // delete currentItem[\"modified_user\"];\n    // delete currentItem[\"_id\"];\n\n    addBookStruct(bookStruct).then((responseMsg) => {\n      if (responseMsg === 'success') {\n        initSpeakerState();\n        swal(\n          'Good job!',\n          'The Book Has Been Successfully Added !!!',\n          'success'\n        );\n      } else {\n        initSpeakerState();\n        swal(\n          'Awww Snap !!!',\n          'The Book was not added successfully!!! Please try again',\n          'error'\n        );\n      }\n    });\n  };\n\n  const COLUMNS_CUSTOMER = (customer) =>\n    customer === 'KLA'\n      ? [\n          {\n            Header: 'Book Id',\n            Footer: 'Book Id',\n            accessor: 'bookId',\n            sticky: 'left',\n          },\n\n          {\n            Header: 'Assembly Number',\n            Footer: 'Assembly Number',\n            accessor: 'assembly_number',\n            sticky: 'left',\n          },\n          {\n            Header: 'Session Number',\n            Footer: 'Session Number',\n            accessor: 'session_number',\n            sticky: 'left',\n          },\n          {\n            Header: 'Part Number',\n            Footer: 'Part Number',\n            accessor: 'part_number',\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: 'Number of Pages',\n            Footer: 'Number of Pages',\n            accessor: 'numofpages',\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: 'Book Status',\n            Footer: 'Book Status',\n            accessor: 'status_of_books',\n            Cell: ({ value }) => {\n              return getStatusBadge(value);\n            },\n          },\n          {\n            Header: 'Binding Status',\n            Footer: 'Binding Status',\n            accessor: 'binding_status',\n            Cell: ({ value }) => {\n              return getBindedBadge(value);\n            },\n          },\n          {\n            Header: 'Actions',\n            Footer: 'Actions',\n            accessor: '_id',\n            Cell: ({ value }) => {\n              return getTableActionItems(value);\n            },\n          },\n        ]\n      : [\n          {\n            Header: 'Book Id',\n            Footer: 'Book Id',\n            accessor: 'bookId',\n            sticky: 'left',\n          },\n          {\n            Header: 'Session Number',\n            Footer: 'Session Number',\n            accessor: 'session_number',\n          },\n          {\n            Header: 'Part Number',\n            Footer: 'Part Number',\n            accessor: 'part_number',\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: 'Number of Pages',\n            Footer: 'Number of Pages',\n            accessor: 'numofpages',\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: 'Book Status',\n            Footer: 'Book Status',\n            accessor: 'status_of_books',\n            Cell: ({ value }) => {\n              return getStatusBadge(value);\n            },\n          },\n          {\n            Header: 'Binding Status',\n            Footer: 'Binding Status',\n            accessor: 'binding_status',\n            Cell: ({ value }) => {\n              return getBindedBadge(value);\n            },\n          },\n          {\n            Header: 'Actions',\n            Footer: 'Actions',\n            accessor: '_id',\n            Cell: ({ value }) => {\n              return getTableActionItems(value);\n            },\n          },\n        ];\n\n  return (\n    <Fragment>\n      {/* Main content */}\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          {/* Small boxes (Stat box) */}\n          <div className=\"row\">\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-info\">\n                <div className=\"inner\">\n                  <h3>335</h3>\n                  <p>Number of Books Completed</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-ios-bookmarks\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-success\">\n                <div className=\"inner\">\n                  <h3>2,22,879</h3>\n                  <p>OCR'ed Pages</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-ios-bookmarks\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-warning\">\n                <div className=\"inner\">\n                  <h3>335</h3>\n                  <p>Book's Binded</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-checkmark-circled\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-danger\">\n                <div className=\"inner\">\n                  <h3>0</h3>\n                  <p>Incomplete Metadata</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-sad\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n          </div>\n        </div>\n        {/* /.container-fluid */}\n      </section>\n      {/* Search Table New DashBoard */}\n      <SearchTableNewDashboard\n        customer={CUSTOMER}\n        columns_table={COLUMNS_CUSTOMER(CUSTOMER)}\n        table_data={bookSummaryTable}\n        styleDashboardTable={styleDashBoardCard}\n        cardHeaderColor={modalHeaderBackColour(CUSTOMER)}\n      />\n\n      <AddBookModal\n        currentBookState={bookStruct}\n        currentBookSetState={setBookStruct}\n        onChange={onChange}\n        onChangeDate={onChangeDate}\n        onSubmit={onSubmit}\n      />\n    </Fragment>\n  );\n};\n\nexport default TableDashboard;\n","import React, { useContext, useEffect } from \"react\";\n\n// Import Context\nimport AuthContext from \"../../context/auth/authContext\";\n\n// Import Components\n\nimport ContentHeader from \"../dashboard/ContentHeader-component\";\nimport TableDashboard from \"../dashboard/TableDashboard-component\";\nconst Content = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disale-next-line\n  }, []);\n  return (\n    <div className=\"content-wrapper\">\n      <ContentHeader />\n      <TableDashboard />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport {\n  LOGIN_CLASS_BODY,\n  CUSTOMER_NAME_COLOUR,\n  CUSTOMER,\n} from \"../../constants/index\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"main-footer\">\n      <strong>\n        Copyright &copy; 2020-2021\n        <a href=\"\">\n          Karnataka Legislative {CUSTOMER === \"KLA\" ? \"Assembly\" : \"Council\"}{\" \"}\n          Secretariat\n        </a>\n        .\n      </strong>\n      All rights reserved.\n      <div class=\"float-right d-none d-sm-inline-block\">\n        <b>Version</b> 1.0.2\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport classnames from \"classnames\";\nimport {\n  LOGIN_CLASS_BODY,\n  CUSTOMER_NAME_COLOUR,\n  CUSTOMER,\n} from \"../../constants/index\";\n\nconst Login = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, errors, clearErrors, isAuthenticated, loadUser } = authContext;\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    // errors: {},\n  });\n\n  const { email, password } = user;\n\n  useEffect(() => {\n    document.body.classList.add(LOGIN_CLASS_BODY);\n    // Setting wrapper class to display none\n    //var items = document.getElementsByClassName(\"wrapper\");\n    // console.info(\"[DEBUG] Login-Component css \", items);\n    //items[0].style.display = \"none\";\n    //console.log(items);\n\n    if (errors) {\n      // Set Alert on errors\n      //setAlert(errors, \"danger\");\n\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [errors]);\n\n  useEffect(() => {\n    document.body.className = document.body.className.replace(\n      \"sidebar-mini\",\n      \"\"\n    );\n    if (localStorage.token) {\n      loadUser();\n    }\n\n    if (authContext.token) {\n      // var items = document.getElementsByClassName(\"wrapper\");\n      // // console.info(\"[DEBUG] Login-Component css \", items);\n      // items[0].style.removeProperty(\"display\");\n      //items[0].style.display = \"inline\";\n      setAuthToken(localStorage.token);\n      props.history.push(\"/dashboard\");\n      //sidebar-mini\n    }\n  }, [authContext]);\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  //Customer Head Styles\n  const CustomerHeaderStyleKLA = {\n    fontWeight: \"500\",\n    color: \"#42A846 \",\n    marginRight: \"15px\",\n  };\n\n  const CustomerHeaderStyleKLC = {\n    fontWeight: \"500\",\n    color: \"#46A049 \",\n    marginRight: \"15px\",\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login({\n      email,\n      password,\n    });\n\n    // Promise.all([login]).then((values) => {\n    //   console.info(\"[DASHBOARD] Loging Component \", values);\n    //   if (authContext.isAuthenticated) {\n    //     // var items = document.getElementsByClassName(\"wrapper\");\n    //     // // console.info(\"[DEBUG] Login-Component css \", items);\n    //     // items[0].style.removeProperty(\"display\");\n    //     //items[0].style.display = \"inline\";\n    //     props.history.push(\"/dashboard\");\n    //     //sidebar-mini\n    //   }\n    // });\n  };\n\n  return (\n    <div className=\"login-box\">\n      <div className=\"login-logo\">\n        <a href=\"#\">\n          {CUSTOMER === \"KLA\" ? (\n            <span style={CustomerHeaderStyleKLA}> {CUSTOMER}</span>\n          ) : (\n            <span style={CustomerHeaderStyleKLC}> {CUSTOMER}</span>\n          )}\n          Digitization Operations Console\n        </a>\n      </div>\n      {/* /.login-logo */}\n      <div className=\"card\">\n        <div className=\"card-body login-card-body\">\n          <p className=\"login-box-msg\">Sign in to start your session</p>\n          <form onSubmit={onSubmit}>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"email\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.email,\n                })}\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={onChange}\n              />\n              <div className=\"input-group-append\">\n                <div className=\"input-group-text\">\n                  <span className=\"fas fa-envelope\" />\n                </div>\n              </div>\n\n              {errors.email ? (\n                <div className=\"invalid-feedback\">{errors.email}</div>\n              ) : null}\n            </div>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"password\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.password,\n                })}\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={onChange}\n              />\n              <div className=\"input-group-append\">\n                <div className=\"input-group-text\">\n                  <span className=\"fas fa-lock\" />\n                </div>\n              </div>\n              {errors.password && (\n                <div className=\"invalid-feedback\">{errors.password}</div>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"icheck-primary\">\n                  <input type=\"checkbox\" id=\"remember\" />\n                  <label htmlFor=\"remember\">Remember Me</label>\n                </div>\n              </div>\n              {/* /.col */}\n              <div className=\"col-4\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                  Sign In\n                </button>\n              </div>\n              {/* /.col */}\n            </div>\n          </form>\n          <div className=\"social-auth-links text-center mb-3\">\n            <p>- OR -</p>\n            {/* <a href=\"#\" className=\"btn btn-block btn-primary\">\n                 <i className=\"fab fa-facebook mr-2\" /> Sign in using Facebook\n               </a> */}\n            <a href=\"#\" className=\"btn btn-block btn-danger\">\n              <i className=\"fab fa-google-plus mr-2\" /> Sign in using Google\n            </a>\n          </div>\n          {/* /.social-auth-links */}\n          <p className=\"mb-1\">\n            <a href=\"#\">I forgot my password</a>\n          </p>\n          <p className=\"mb-0\">\n            <a href=\"#\" className=\"text-center\">\n              Register\n            </a>\n          </p>\n        </div>\n        {/* /.login-card-body */}\n      </div>\n    </div>\n  );\n};\n\n// class Login extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n\n//       errors: {},\n//     };\n//   }\n\n//   onChange = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n\n//   componentDidMount() {\n//     document.body.classList.add(LOGIN_CLASS_BODY);\n//     // Setting wrapper class to display none\n//     var items = document.getElementsByClassName(\"wrapper\");\n//     items[0].style.display = \"none\";\n//     //console.log(items);\n//   }\n\n//   componentWillUnmount() {\n//     document.body.classList.remove(LOGIN_CLASS_BODY);\n//   }\n\n//   render() {\n//     const { email, password, errors } = this.state;\n\n//     //Customer Head Styles\n//     const CustomerHeaderStyle = {\n//       fontWeight: \"500\",\n//       color: CUSTOMER_NAME_COLOUR,\n//     };\n//     return (\n//       <div className=\"login-box\">\n//         <div className=\"login-logo\">\n//           <a href=\"../../index2.html\">\n//             <span style={CustomerHeaderStyle}>{CUSTOMER}</span> Digitization\n//             Operations Console\n//           </a>\n//         </div>\n//         {/* /.login-logo */}\n//         <div className=\"card\">\n//           <div className=\"card-body login-card-body\">\n//             <p className=\"login-box-msg\">Sign in to start your session</p>\n//             <form onSubmit={onSubmit}>\n//               <div className=\"input-group mb-3\">\n//                 <input\n//                   type=\"email\"\n//                   className={classnames(\"form-control\", {\n//                     \"is-invalid\": errors.email,\n//                   })}\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   onChange={onChange}\n//                 />\n//                 <div className=\"input-group-append\">\n//                   <div className=\"input-group-text\">\n//                     <span className=\"fas fa-envelope\" />\n//                   </div>\n//                 </div>\n\n//                 {errors.email ? (\n//                   <div className=\"invalid-feedback\">{errors.email}</div>\n//                 ) : null}\n//               </div>\n//               <div className=\"input-group mb-3\">\n//                 <input\n//                   type=\"password\"\n//                   className={classnames(\"form-control\", {\n//                     \"is-invalid\": errors.password,\n//                   })}\n//                   name=\"password\"\n//                   placeholder=\"Password\"\n//                   onChange={onChange}\n//                 />\n//                 <div className=\"input-group-append\">\n//                   <div className=\"input-group-text\">\n//                     <span className=\"fas fa-lock\" />\n//                   </div>\n//                 </div>\n//                 {errors.password && (\n//                   <div className=\"invalid-feedback\">{errors.password}</div>\n//                 )}\n//               </div>\n//               <div className=\"row\">\n//                 <div className=\"col-8\">\n//                   <div className=\"icheck-primary\">\n//                     <input type=\"checkbox\" id=\"remember\" />\n//                     <label htmlFor=\"remember\">Remember Me</label>\n//                   </div>\n//                 </div>\n//                 {/* /.col */}\n//                 <div className=\"col-4\">\n//                   <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                     Sign In\n//                   </button>\n//                 </div>\n//                 {/* /.col */}\n//               </div>\n//             </form>\n//             <div className=\"social-auth-links text-center mb-3\">\n//               <p>- OR -</p>\n//               {/* <a href=\"#\" className=\"btn btn-block btn-primary\">\n//                 <i className=\"fab fa-facebook mr-2\" /> Sign in using Facebook\n//               </a> */}\n//               <a href=\"#\" className=\"btn btn-block btn-danger\">\n//                 <i className=\"fab fa-google-plus mr-2\" /> Sign in using Google\n//               </a>\n//             </div>\n//             {/* /.social-auth-links */}\n//             <p className=\"mb-1\">\n//               <a href=\"forgot-password.html\">I forgot my password</a>\n//             </p>\n//             <p className=\"mb-0\">\n//               <a href=\"register.html\" className=\"text-center\">\n//                 Register\n//               </a>\n//             </p>\n//           </div>\n//           {/* /.login-card-body */}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Login;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport FileUploadForm from \"../common/FileUpload.component\";\n// import MultiSelectDate from \"../common/MultiSelectDatePicker\";\nimport MultiSelectDatePicker from \"../common/MultiSelectDatePicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SingleDate from \"../common/SingleDate-component\";\n\n// Import Context\nimport BookContext from \"../../context/book/bookContext\";\n\nimport {\n  bookStateObject,\n  modalHeaderBackColour,\n  styleDashBoardCard,\n  CUSTOMER,\n  getStatusBookSummaryTop,\n  changeDateToString,\n} from \"../../constants/index\";\n\nexport const BookSummary = ({ id }) => {\n  const bookContext = useContext(BookContext);\n  let history = useHistory();\n  const {\n    errors,\n    getCurrentBook,\n    currentBookStructure,\n    addBookStruct,\n    getAnnexureItems,\n  } = bookContext;\n\n  const [bookState, setBookState] = useState(bookStateObject);\n  const [buttonloading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && errors.constructor === Object) {\n      getCurrentBook(id);\n      // .then((currentBook) => {\n      //   if (typeof currentBook === \"object\") {\n      //     console.log(\n      //       \"[DEBUG -BookSummaryTop-ERROR] the current Book Structure\",\n      //       currentBook\n      //     );\n      //   } else {\n      //     getAnnexureItems(currentBookStructure.bookId);\n      //   }\n      // });\n      const modified_time_state = changeDateToString(currentBookStructure, [\n        \"book_returned_date\",\n        \"metadata_end_date\",\n        \"metadata_given_date\",\n        \"metadata_start_date\",\n      ]);\n      // console.info(\n      //   \"[DEBUG the book state is ERROR modified_time_state] \",\n      //   modified_time_state\n      // );\n      setBookState(modified_time_state);\n\n      // console.info(\"[DEBUG the book state is error] \", bookState);\n    } else {\n      swal(\"Oops\", \"The Book Cannot Be Fetched  !!!\", \"error\");\n      setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n    }\n    // if (errors.length !== 0) {\n    //   swal(\"Oops\", \"The Book Cannot Be Fetched !!!\", \"error\");\n    //   // setTimeout(() => {\n    //   //   history.push(\"/dashboard\");\n    //   // }, 1000);\n    // }\n  }, [errors]);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && errors.constructor === Object) {\n      // getCurrentBook(id)\n      const modified_time_state = changeDateToString(currentBookStructure, [\n        \"book_returned_date\",\n        \"metadata_end_date\",\n        \"metadata_given_date\",\n        \"metadata_start_date\",\n      ]);\n      console.info(\n        \"[DEBUG the book state the value of modified_time] \",\n        modified_time_state\n      );\n\n      if (\n        Object.keys(modified_time_state).length > 0 &&\n        modified_time_state.constructor === Object\n      ) {\n        setBookState(currentBookStructure);\n        console.info(\n          \"[DEBUG the book state is current Book structure] \",\n          bookState\n        );\n      }\n\n      console.info(\n        \"[DEBUG the book state is current Book structure] \",\n        bookState\n      );\n    } else {\n      swal(\"Oops\", \"The Book Cannot Be Fetched from the state !!!\", \"error\");\n      // setTimeout(() => {\n      //   history.push(\"/dashboard\");\n      // }, 1000);\n    }\n    // if (errors.length !== 0) {\n    //   swal(\"Oops\", \"The Book Cannot Be Fetched !!!\", \"error\");\n    //   // setTimeout(() => {\n    //   //   history.push(\"/dashboard\");\n    //   // }, 1000);\n    // }\n  }, [currentBookStructure]);\n\n  const onChange = (e) => {\n    //console.log(e.target);\n\n    setBookState({ ...bookState, [e.target.name]: e.target.value });\n  };\n\n  // const onChangeDate = (date) => {\n  //   this.setState({\n  //     bookReturnedDate: date,\n  //   });\n  // };\n\n  const onChangeDate = (e) => {\n    let dateVar = e.target.value;\n    let dateVarRes = dateVar.split(\",\");\n\n    //console.info(\"[DEBUG] change date in ADD Book Action\", dateVarRes);\n\n    setBookState({\n      ...bookState,\n      dates_session: dateVarRes,\n    });\n  };\n\n  const optionsSession = [\n    { label: \"* Select Place Of Session\", value: 0 },\n    { label: \"Bangalore\", value: \"bangalore\" },\n    { label: \"Belegavi\", value: \"belegavi\" },\n  ];\n  const optionsBinding = [\n    { label: \"--Binding Status--\", value: false },\n    { label: \"UN-BINDED\", value: false },\n    { label: \"BINDED\", value: true },\n  ];\n\n  const onSubmit = (e) => {\n    //Call the Submit Action\n    addBookStruct(bookState).then((responseMsg) => {\n      if (responseMsg === \"success\") {\n        // initMetadataState();\n        // clearcurrentMetadataSection();\n        getCurrentBook(id);\n        const modified_time_state = changeDateToString(currentBookStructure, [\n          \"book_returned_date\",\n          \"metadata_end_date\",\n          \"metadata_given_date\",\n          \"metadata_start_date\",\n        ]);\n\n        setBookState(modified_time_state);\n        swal(\n          \"Good job!\",\n          \"The Book Structural Metadata edited Successfully!!!\",\n          \"success\"\n        );\n      } else {\n        // initMetadataState();\n        swal(\n          \"Awww Snap !!!\",\n          \"Book Section not edited successfully !!! Please Try Again \",\n          \"error\"\n        );\n      }\n    });\n    // // Call the success\n    // console.log(res);\n  };\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <div className=\"card-tools\"></div>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Summary</b>{\" \"}\n        </h3>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n      {/* Form Element Should Start Here */}\n\n      <div className=\"card-body\">\n        {/* Book Summary Introduction Row */}\n        <div className=\"row\">\n          <div class=\"col-sm\">\n            <h4 style={{ marginLeft: \"0 25px\" }}>\n              Book ID: <span className=\"bookId-number\">{bookState.bookId}</span>{\" \"}\n            </h4>\n          </div>\n          <div class=\"col-sm\">\n            <button\n              type=\"button\"\n              style={{\n                width: \"123px\",\n                margin: \"0 auto\",\n              }}\n              disabled=\"true\"\n              className={getStatusBookSummaryTop(\n                currentBookStructure.status_of_books\n              )}\n            >\n              {\" \"}\n              {bookState.status_of_books}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div className=\"col-md-10 mx-auto\">\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {CUSTOMER === \"KLA\" ? (\n                  <TextFieldGroup\n                    placeholder=\"AssemblyNumber\"\n                    name=\"assembly_number\"\n                    value={bookState.assembly_number}\n                    onChange={onChange}\n                    error={errors.assembly_number}\n                    id=\"assembly_number\"\n                    labelText=\"Assembly Number\"\n                    formWidth=\"col-4\"\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\"col-sm-6\">\n                <SelectListGroup\n                  placeholder=\"Binding Status\"\n                  name=\"binding_status\"\n                  value={bookState.binding_status}\n                  onChange={onChange}\n                  error={errors.binding_status}\n                  id=\"binding_status\"\n                  labelText=\"Binding Status\"\n                  formWidth=\"col-6\"\n                  options={optionsBinding}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Session Number\"\n                  name=\"session_number\"\n                  value={bookState.session_number}\n                  onChange={onChange}\n                  error={errors.session_number}\n                  id=\"session_number\"\n                  labelText=\"Session Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.book_returned_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      book_returned_date: date,\n                    })\n                  }\n                  name=\"book_returned_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"book_returned_date\"\n                  dateLabel=\"Book Returned Date\"\n                  //disabled={bookState.statusBookBinded ? false : true}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Volume Number\"\n                  name=\"volume_number\"\n                  value={bookState.volume_number}\n                  onChange={onChange}\n                  error={errors.volume_number}\n                  id=\"volume_number\"\n                  labelText=\"Volume Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_given_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_given_date: date,\n                    })\n                  }\n                  name=\"metadata_given_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_given_date\"\n                  dateLabel=\"Metadata Given Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Part Number\"\n                  name=\"part_number\"\n                  value={bookState.part_number}\n                  onChange={onChange}\n                  error={errors.part_number}\n                  id=\"part_number\"\n                  labelText=\"Part Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_start_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_start_date: date,\n                    })\n                  }\n                  name=\"metadata_start_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_start_date\"\n                  dateLabel=\"Metadata Start Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Number Of Pages\"\n                  name=\"numofpages\"\n                  value={bookState.numofpages}\n                  onChange={onChange}\n                  error={errors.numofpages}\n                  id=\"numofpages\"\n                  labelText=\"Number of Pages\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_end_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_end_date: date,\n                    })\n                  }\n                  name=\"metadata_end_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_end_date\"\n                  dateLabel=\"Metadata End Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <SelectListGroup\n                  placeholder=\"PlaceOfSession\"\n                  name=\"place_session\"\n                  value={bookState.place_session}\n                  onChange={onChange}\n                  error={errors.place_session}\n                  id=\"place_session\"\n                  labelText=\"Place Of Session\"\n                  formWidth=\"col-4\"\n                  options={optionsSession}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <MultiSelectDatePicker\n                  placeholder=\"Select One or Multiple Dates\"\n                  name=\"dates_session\"\n                  value={bookState.dates_session}\n                  onChange={onChangeDate}\n                  error={errors.dates_session}\n                  id=\"dates_session\"\n                  labelText=\"Dates Of Session\"\n                  formWidth=\"col-md\"\n                  info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Year Of Book\"\n                  name=\"year_book\"\n                  value={bookState.year_book}\n                  onChange={onChange}\n                  error={errors.year_book}\n                  id=\"year_book\"\n                  labelText=\"Year Of Book\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                {/* TODO - FIle Upload */}\n                <FileUploadForm\n                  labelText=\"Upload Book Images\"\n                  info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Remarks\"\n                  name=\"remarksBook\"\n                  value={bookState.remarksBook}\n                  onChange={onChange}\n                  error={errors.remarksBook}\n                  id=\"remarksBook\"\n                  labelText=\"Remarks\"\n                  formWidth=\"col-md\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-block btn-outline-success\"\n                  style={{\n                    width: \"36%\",\n                    marginTop: \"1.7rem\",\n                  }}\n                  onClick={(e) => {\n                    onSubmit(e);\n                  }}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Card Body End */}\n      {/* /.card-body */}\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n      {/* Form element Should End Here */}\n      {/* /.card-footer*/}\n    </div>\n  );\n};\n\n// class BookSummary extends Component {\n//   constructor() {\n//     super();\n//     bookState = {\n//       department: \"KLA\",\n//       bookId: 54,\n//       assemblyNumber: 1,\n//       sessionNumber: 3,\n//       volumeNumber: 4,\n//       partNumber: 5,\n//       numberPages: 1123,\n//       placeSession: \"\",\n\n//       yearBook: 2013,\n//       datesSession: [\"12-03-2012\", \"13-03-2012\"],\n\n//       statusBookBinded: \"UNBINDED\",\n//       bookReturnedDate: null,\n//       metadataGivenDate: null,\n//       metadataStartDate: null,\n//       metadataEndDate: null,\n//       remarksBook: \"\",\n//       metadataStatus: \"INCOMPLETE\",\n//       bookStatus: \"INDEXED\",\n//       uploadfilePath: \"\",\n\n//       loading: false,\n\n//       errors: {},\n//     };\n//   }\n\n//   onChange = (e) => {\n//     //console.log(e.target);\n\n//     setState({ [e.target.name]: e.target.value });\n//   };\n\n//   onChangeDate = (date) => {\n//     this.setState({\n//       bookReturnedDate: date,\n//     });\n//   };\n\n//   render() {\n//     const { errors } = this.state;\n\n//     //const { onChangeDate, onChange } = this.state;\n\n//     // Select options for status\n//     const optionsSession = [\n//       { label: \"* Select Place Of Session\", value: 0 },\n//       { label: \"Bangalore\", value: \"Bangalore\" },\n//       { label: \"Belegavi\", value: \"Belegavi\" },\n//     ];\n//     const optionsBinding = [\n//       { label: \"--Binding Status--\", value: false },\n//       { label: \"UN-BINDED\", value: false },\n//       { label: \"BINDED\", value: true },\n//     ];\n\n//     // Dummy Data\n\n//     return (\n//       <div className=\"card\">\n//         {/* Card Header Start */}\n//         <div className=\"card-header\">\n//           <div className=\"card-tools\"></div>\n//           <h3 className=\"card-title\">\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-tool\"\n//               data-card-widget=\"collapse\"\n//               data-toggle=\"tooltip\"\n//               title=\"Collapse\"\n//             >\n//               <i className=\"fas fa-minus\" />\n//             </button>{\" \"}\n//             <b> Book Summary</b>{\" \"}\n//           </h3>\n//         </div>\n//         {/* Card Header End */}\n//         {/* Card Body Start */}\n//         {/* Form Element Should Start Here */}\n\n//         <div className=\"card-body\">\n//           {/* Book Summary Introduction Row */}\n//           <div className=\"row\">\n//             <div class=\"col-sm\">\n//               <h4 style={{ marginLeft: \"0 25px\" }}>\n//                 Book ID: <span className=\"bookId-number\">54</span>{\" \"}\n//               </h4>\n//             </div>\n//             <div class=\"col-sm\">\n//               <button\n//                 type=\"button\"\n//                 class=\"btn btn-block bg-gradient-success btn-sm status__button \"\n//               >\n//                 {\" \"}\n//                 Book Indexed\n//               </button>\n//             </div>\n//           </div>\n//           <form onSubmit={this.onSubmit}>\n//             <div class=\"row\">\n//               <div className=\"col-md-10 mx-auto\">\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"AssemblyNumber\"\n//                       name=\"assemblyNumber\"\n//                       value={this.state.assmeblyNumber}\n//                       onChange={this.onChange}\n//                       error={errors.assemblyNumber}\n//                       id=\"assemblyNumber\"\n//                       labelText=\"Assembly Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SelectListGroup\n//                       placeholder=\"Binding Status\"\n//                       name=\"statusBookBinded\"\n//                       value={this.state.statusBookBinded}\n//                       onChange={this.onChange}\n//                       error={errors.statusBookBinded}\n//                       id=\"statusBookBinded\"\n//                       labelText=\"Binding Status\"\n//                       formWidth=\"col-6\"\n//                       options={optionsBinding}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Session Number\"\n//                       name=\"sessionNumber\"\n//                       value={this.state.sessionNumber}\n//                       onChange={this.onChange}\n//                       error={errors.sessionNumber}\n//                       id=\"sessionNumber\"\n//                       labelText=\"Session Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.bookReturnedDate}\n//                       onChange={() => this.onChangeDate}\n//                       name=\"bookReturnedDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"bookReturnedDate\"\n//                       dateLabel=\"Book Returned Date\"\n//                       //disabled={this.state.statusBookBinded ? false : true}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Volume Number\"\n//                       name=\"volumeNumber\"\n//                       value={this.state.volumeNumber}\n//                       onChange={this.onChange}\n//                       error={errors.volumeNumber}\n//                       id=\"volumeNumber\"\n//                       labelText=\"Volume Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataGivenDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataGivenDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataGivenDate\"\n//                       dateLabel=\"Metadata Given Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Part Number\"\n//                       name=\"partNumber\"\n//                       value={this.state.partNumber}\n//                       onChange={this.onChange}\n//                       error={errors.partNumber}\n//                       id=\"partNumber\"\n//                       labelText=\"Part Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataStartDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataStartDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataStartDate\"\n//                       dateLabel=\"Metadata Start Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Number Of Pages\"\n//                       name=\"numPages\"\n//                       value={this.state.numberPages}\n//                       onChange={this.onChange}\n//                       error={errors.numberPages}\n//                       id=\"numPages\"\n//                       labelText=\"Number of Pages\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataEndDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataEndDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataEndDate\"\n//                       dateLabel=\"Metadata End Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <SelectListGroup\n//                       placeholder=\"PlaceOfSession\"\n//                       name=\"placeSession\"\n//                       value={this.state.placeofSession}\n//                       onChange={this.onChange}\n//                       error={errors.placeofSession}\n//                       id=\"placeofSession\"\n//                       labelText=\"Place Of Session\"\n//                       formWidth=\"col-4\"\n//                       options={optionsSession}\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <MultiSelectDatePicker\n//                       placeholder=\"Select One or Multiple Dates\"\n//                       name=\"datesSession\"\n//                       value={this.state.datesSession}\n//                       onChange={this.onChange}\n//                       error={errors.datesSession}\n//                       id=\"datesSession\"\n//                       labelText=\"Dates Of Session\"\n//                       formWidth=\"col-md\"\n//                       info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Year Of Book\"\n//                       name=\"yearBook\"\n//                       value={this.state.yearBook}\n//                       onChange={this.onChange}\n//                       error={errors.yearBook}\n//                       id=\"yearBook\"\n//                       labelText=\"Year Of Book\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     {/* TODO - FIle Upload */}\n//                     <FileUploadForm\n//                       labelText=\"Upload Book Images\"\n//                       info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Remarks\"\n//                       name=\"remarksBook\"\n//                       value={this.state.remarksBook}\n//                       onChange={this.onChange}\n//                       error={errors.remarksBook}\n//                       id=\"remarksBook\"\n//                       labelText=\"Remarks\"\n//                       formWidth=\"col-md\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <button\n//                       type=\"submit\"\n//                       class=\"btn btn-block btn-outline-success\"\n//                       style={{\n//                         width: \"36%\",\n//                         marginTop: \"1.5rem\",\n//                       }}\n//                     >\n//                       Submit\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </form>\n//         </div>\n//         {/* Card Body End */}\n//         {/* /.card-body */}\n//         <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n//         {/* Form element Should End Here */}\n//         {/* /.card-footer*/}\n//       </div>\n//     );\n//   }\n//}\n\nBookSummary.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default BookSummary;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  usePagination,\n} from 'react-table';\n\nimport { GlobalFilter } from './GlobalFilter';\n\nimport './SearchTableNew.scss';\n\n//import MOCK_DATA from \"./MOCK_DATA.json\";\n//import { COLUMNS, GROUPED_COLUMNS } from \"./columns\";\n\n//import TableItems from \"./TableItem.Components\";\n\nexport const SearchTableNew = ({\n  tableHeaderName,\n  CUSTOMER,\n  columns_table,\n  table_data,\n  MetadataType,\n  number_sections,\n}) => {\n  //const columns = useMemo(() => COLUMNS, []);\n  const columns = useMemo(() => columns_table, []);\n\n  //const data = useMemo(() => table_data, []);\n  const data = table_data;\n  //console.log(columns);\n\n  // console.log(\n  //   `from Search Table New value of CUSTOMER:${CUSTOMER} & MetadataType : ${MetadataType}`\n  // );\n\n  //console.log(table_data);\n\n  //const data = useMemo(() => MOCK_DATA, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n\n    gotoPage,\n    pageCount,\n    setPageSize,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 2 },\n    },\n\n    useGlobalFilter,\n\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  function addMetadataGlobalFilter(customer, metadataType) {\n    if (metadataType === 'Speaker') {\n      return customer === 'KLA' ? \"Speaker's\" : \"Chairman's\";\n    } else if (metadataType === 'Member') {\n      return customer === 'KLA' ? \"Member's\" : \"Member's\";\n    } else if (metadataType === 'debateTitle') {\n      return customer === 'KLA' ? \"Debate Title's\" : \"Debate Title's\";\n    } else if (metadataType === 'portfolio') {\n      return customer === 'KLA' ? \"Portfolio's\" : \"Portfolio's\";\n    } else if (metadataType === 'issues') {\n      return customer === 'KLA' ? \"Issues's\" : \"Issues's\";\n    } else if (metadataType === 'tags') {\n      return customer === 'KLA' ? \"Tag's\" : \"Tag's\";\n    } else if (metadataType === 'annexure') {\n      return \"Annexure's\";\n    } else if (metadataType === 'metadata') {\n      return 'Metadata ';\n    } else if (metadataType === 'users') {\n      return \"User's\";\n    } else if (metadataType === 'logs') {\n      return \"Log's\";\n    }\n  }\n\n  let searchTableName = addMetadataGlobalFilter(CUSTOMER, MetadataType);\n\n  //console.log(searchTableName);\n\n  const tableStyle = {\n    display: 'block',\n    height: '400px',\n    overflowY: 'scroll',\n    borderRadius: '2px',\n  };\n\n  return (\n    <>\n      {/* <div className=\"content-wrapper\"> */}\n      <div className=\"col-12\">\n        <section className=\"action-tables\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3\n                    className=\"card-title\"\n                    style={{\n                      marginTop: '6px',\n                    }}\n                  >\n                    <b> {tableHeaderName} </b>{' '}\n                  </h3>\n                  {/* TODO- Conditional Rendering of Buttons for RED Clolour for KLC as per the passed props */}\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  {number_sections && number_sections > 0 ? (\n                    <div className=\"row\" style={{ display: 'flex' }}>\n                      <div className=\"col-5\">\n                        <h5>\n                          Number of Section's in the Book: {number_sections}\n                        </h5>\n                      </div>\n                      <div\n                        className=\"col-7 mr-1\"\n                        style={{ marginBottom: '6px', marginLeft: '-15%' }}\n                      >\n                        <GlobalFilter\n                          filter={globalFilter}\n                          setFilter={setGlobalFilter}\n                          metadata={searchTableName}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"row\">\n                      <div className=\"col-8\" style={{ marginLeft: '243px' }}>\n                        <GlobalFilter\n                          filter={globalFilter}\n                          setFilter={setGlobalFilter}\n                          metadata={searchTableName}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <table\n                    // className=\"table table-hover table-condensed table-scrollable\"\n                    className=\"table table-bordered table-striped table-head-fixed text-center\"\n                    {...getTableProps()}\n                    style={tableStyle}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr\n                          style={{\n                            width: '100%',\n                          }}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map((column) => (\n                            <th\n                              style={{\n                                width: '500px',\n                              }}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render('Header')}\n                              <span style={{ display: 'inline-block' }}>\n                                {column.isSorted\n                                  ? column.isSortedDesc\n                                    ? ' 🔽'\n                                    : ' 🔼'\n                                  : ''}\n                              </span>\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    {rows.length !== 0 ? (\n                      <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                          prepareRow(row);\n                          return (\n                            <tr {...row.getRowProps()}>\n                              {row.cells.map((cell) => {\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                    {cell.render('Cell')}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: 'center',\n                          marginTop: '15px',\n                        }}\n                      >\n                        There are no items in the Table ... Please Add One\n                      </h6>\n                    )}\n                    {/* <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody> */}\n                    {/* <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot> */}\n                  </table>\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n              {/* Table Searchable Start with Filter */}\n            </div>\n          </div>\n        </section>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nSearchTableNew.defaultProps = {\n  tableHeaderName: 'Datatable of Added Speakers',\n  customer: 'KLA',\n  columns_table: [],\n};\n\nSearchTableNew.propTypes = {\n  tableHeaderName: PropTypes.string.isRequired,\n  CUSTOMER: PropTypes.string.isRequired,\n  columns_table: PropTypes.array.isRequired,\n  table_data: PropTypes.array.isRequired,\n  number_sections: PropTypes.number,\n  MetadataType: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaFieldGroup = ({\n  name,\n  placeholder,\n  value,\n\n  error,\n  info,\n  onChange,\n  id,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <textarea\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        id={id}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextAreaFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  //type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// TextFieldGroup.defaultProps = {\n//     type: 'text'\n// };\n\nexport default TextAreaFieldGroup;\n","import { createContext } from \"react\";\n\nconst metadataContext = createContext();\n\nexport default metadataContext;\n","import React, { useEffect, useContext, Fragment, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { format } from \"date-fns\";\n// https://github.com/harshzalavadiya/react-multi-select-component#readme\n// https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport TextAreaField from \"../../common/TextAreaFieldGroup\";\n\nimport SelectListGroup from \"../../common/SelectListGroup\";\nimport MultiSelectInput from \"../../common/MultiSelectInputGroup.component\";\nimport MultiSelectInputMember from \"../../common/MultiSelectInputGroupMember.component\";\n\nimport BookContext from \"../../../context/book/bookContext\";\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  metadataStateObject,\n  metadataStateObjectPart1,\n  setInputfieldToNull,\n} from \"../../../constants/index\";\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n} from \"../../../context/types\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  onChange,\n  onChangeMultiSelect,\n  currentItem,\n  setCurrentItem,\n  attribute,\n  loading,\n  setLoading,\n  AddItem,\n  onDelete,\n}) => {\n  const bookContext = useContext(BookContext);\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadata,\n    clearcurrentMetadataSection,\n    currentBookStructure,\n    annexureItems,\n  } = bookContext;\n\n  const {\n    debateParticipants,\n    getItems,\n    debateTitles,\n    issuesItems,\n    tagsItems,\n    portfolioItems,\n\n    //[{\"status\":true,\"_id\":\"5fc0dde916ba283e4af4e72b\",\"book_id_num\":1,\"annexure_title\":\"Cauvery Issue\",\"start_page\":12,\"end_page\":13,\"last_modified_time\":\"2020-11-27T11:07:21.595Z\",\"__v\":0}]\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  // Const Add Section\n\n  const AddSectionMetadata = () => {\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n    AddItem();\n  };\n  // Const Delete Section\n  const DeleteSectionMetadata = async () => {\n    await onDelete();\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n  };\n\n  const setInputFieldsToNull_array = [\n    \"start_page\",\n    \"end_page\",\n    \"text_field\",\n    \"question_number\",\n  ];\n\n  const formClearSteps = (\n    input_text_id,\n    stateClearFunction,\n    local_state_clear_array\n  ) => {\n    //  This function will clear all input fields & input state after the submission or cancel\n    //setInputfieldToNull(input_text_id);\n    setCurrentItem(metadataStateObject);\n    setInputfieldToNull(input_text_id);\n    stateClearFunction();\n    local_state_clear_array.map((setstateFunc) => {\n      setstateFunc([]);\n    });\n  };\n\n  const setMultiSelectFromState = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState,\n    selectedStateFunction,\n    filterFunction\n  ) => {\n    // Design the function to compare the object id in the metadata state with the objectmetadata\n\n    function filterObject(metadataState, objectMeta, usestateVar) {\n      let metaObject;\n\n      objectMeta.map((meta) => {\n        if (meta.value === metadataState) {\n          metaObject = meta;\n        } else {\n          //      console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n\n    // Set Selected Debate Title\n    if (typeof metadataStateVar === \"string\") {\n      // let result_selected_values_array = [];\n      let result_selected_values = filterObject(\n        metadataStateVar,\n        objectMetadata,\n        selectedState\n      );\n\n      //console.info(\"[DEBUG] for set state to part1\", result_selected_values);\n\n      if (result_selected_values) {\n        selectedState.push(result_selected_values);\n        // return result_selected_values;\n      }\n    } else if (typeof metadataStateVar === \"object\") {\n      metadataStateVar.map((state) => {\n        let result_selected_values = filterObject(\n          state,\n          objectMetadata,\n          selectedState\n        );\n        if (\n          result_selected_values != undefined ||\n          result_selected_values != null\n        ) {\n          // selectedState.map((item) => {\n          //   if (item.value != result_selected_values.value) {\n          //     selectedState.push(result_selected_values);\n          //   }\n          // });\n          if (result_selected_values) {\n            selectedState.push(result_selected_values);\n          }\n        }\n      });\n      // console.info(\"[DEBUG] Selected State for given State is\", selectedState);\n      //let newState = filterFunction(selectedState);\n      // selectedState = newState;\n      //return newState;\n      //console.info(\"[DEBUG] Selected State Array \", selectedState);\n      // selectedStateFunction([]);\n      // newState.map((item) => selectedState.push(item));\n\n      // selectedStateFunction([...newState]);\n    }\n  };\n\n  const setMultiSelectFromStateDate = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState\n  ) => {\n    function filterObject(metadataState, objectMeta) {\n      let metaObject;\n      let newDate = format(new Date(metadataState), \"dd-MM-yyyy\");\n\n      objectMeta.map((meta) => {\n        if (meta.value === newDate) {\n          metaObject = meta;\n        } else {\n          // console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n    // console.info(\n    //   \"[DEBUG filterObject Dates] the value of Objectmeta \",\n    //   objectMetadata\n    // );\n    let result_selected_values = filterObject(metadataStateVar, objectMetadata);\n    selectedState.push(result_selected_values);\n  };\n\n  useEffect(() => {\n    //https://stackoverflow.com/questions/47019199/why-does-async-await-work-with-react-setstate\n    if (\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) {\n      setCurrentItem(metadataStateObject);\n\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    } else {\n      setCurrentItem(currentMetadata);\n\n      // setMultiSelectFromState(currentMetadata);\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    }\n  }, [currentMetadata]);\n\n  const buttonValue = (currentMetadata, attribute) => {\n    if (!(Object.keys(currentMetadata).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentMetadata).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  const headerStyle = {\n    backgroundColor: \"#7BE495\",\n  };\n\n  const onSelect = (data) => {\n    console.log(data);\n  };\n\n  const onRemove = (data) => {\n    console.log(data);\n  };\n\n  function optionsMultiSelect(data_array, type) {\n    // TODO Refactory the repeated code in the repeated block\n    var input_box_array = [];\n\n    //console.log(\"[OPTION MULTI SELECT] array value\", data_array);\n    if (type === \"dates\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        input_box_options.label = item;\n        input_box_options.value = item;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"members\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"debatetitle\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"issues\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"annexure\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, annexure_title } = item;\n        input_box_options.label = annexure_title;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"portfolio\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    }\n    // console.info(\"[OPTION MULTI SELECT] output value\", input_box_array);\n    return input_box_array;\n  }\n\n  // Dates Session Value\n\n  const datesSession = currentBookStructure.dates_session\n    ? optionsMultiSelect(currentBookStructure.dates_session, \"dates\")\n    : [];\n\n  // Members Session Value\n  const membersSection = debateParticipants\n    ? optionsMultiSelect(debateParticipants, \"members\")\n    : [];\n\n  // Debate Title Value\n  const debateTitlesObject = debateTitles\n    ? optionsMultiSelect(debateTitles, \"debatetitle\")\n    : [];\n\n  // Issues Value\n  const issuesObject = issuesItems\n    ? optionsMultiSelect(issuesItems, \"issues\")\n    : [];\n\n  // Portfolio Value\n  const portfolioObject = portfolioItems\n    ? optionsMultiSelect(portfolioItems, \"portfolio\")\n    : [];\n\n  const annexureObject = annexureItems\n    ? optionsMultiSelect(annexureItems, \"annexure\")\n    : [];\n\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [selectedDebateTitle, setSelectedDebateTitle] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedIssues, setSelectedIssues] = useState([]);\n  const [selectedQuestioner, setSelectedQuestioner] = useState([]);\n  const [selectedMinister, setSelectedMinister] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState([]);\n  const [selectedAnnexure, setSelectedAnnexure] = useState([]);\n  // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n  function getUniqueListBy(arr, key) {\n    //  Array to remove the duplicate entries in the object\n    return [...new Map(arr.map((item) => [item[key], item])).values()];\n  }\n\n  useEffect(() => {\n    const selectDatesInst = selectedDates ? selectedDates[0] : \"\";\n    onChangeMultiSelect(selectDatesInst, \"dates\");\n    //setSelectedDates(getUniqueListBy(selectedDates, \"value\"));\n  }, [selectedDates]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMembers, \"members\");\n    // setSelectedDates(getUniqueListBy(selectedMembers, \"value\"));\n  }, [selectedMembers]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedDebateTitle, \"debatetitle\");\n  }, [selectedDebateTitle]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedIssues, \"issues\");\n  }, [selectedIssues]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedQuestioner, \"questioner\");\n  }, [selectedQuestioner]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMinister, \"minister\");\n  }, [selectedMinister]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedPortfolio, \"portfolio\");\n  }, [selectedPortfolio]);\n\n  useEffect(() => {\n    onChangeMultiSelect(selectedAnnexure, \"annexure\");\n  }, [selectedAnnexure]);\n\n  useEffect(() => {\n    // console.log(\"[Aneexure Items] \", annexureItems);\n  }, [annexureItems]);\n\n  if (\n    !(\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) &&\n    currentItem.debate_title_subject != \"\" &&\n    !selectedDebateTitle.length >= 1\n  ) {\n    // Select Debate Title\n    const debate_title_state = setMultiSelectFromState(\n      currentItem.debate_title_subject,\n      debateTitlesObject,\n      selectedDebateTitle,\n      setSelectedDebateTitle\n    );\n    // setSelectedDebateTitle([]);\n    // debate_title_state.map((item) => selectedDebateTitle.push(item));\n\n    // // Select Minister Portfolio\n    setMultiSelectFromState(\n      currentItem.minister_portfolio,\n      portfolioObject,\n      selectedPortfolio,\n      setSelectedPortfolio\n    );\n    // //setSelectedPortfolio(unique_element(selectedPortfolio));\n\n    // // Select Minister Name\n    setMultiSelectFromState(\n      currentItem.minister_name,\n      membersSection,\n      selectedMinister,\n      setSelectedMinister\n    );\n    // //setSelectedMinister((selectedMinister));\n\n    // // Select Questioner's Name\n    setMultiSelectFromState(\n      currentItem.questioner_name,\n      membersSection,\n      selectedQuestioner,\n      setSelectedQuestioner\n    );\n\n    // //setSelectedQuestioner((selectedQuestioner));\n\n    // // Select Debate Participants Name\n    setMultiSelectFromState(\n      currentItem.debate_participants,\n      membersSection,\n      selectedMembers,\n      setSelectedMembers\n    );\n\n    // // setSelectedMembers((selectedMembers));\n\n    // // Select Annexure's\n    setMultiSelectFromState(\n      currentItem.annexure,\n      annexureObject,\n      selectedAnnexure,\n      setSelectedAnnexure\n    );\n    // //setSelectedAnnexure((selectedAnnexure));\n    // // Select Issues\n    setMultiSelectFromState(\n      currentItem.issues_section,\n      issuesObject,\n      selectedIssues,\n      setSelectedIssues\n    );\n\n    // // setSelectedIssues((selectedIssues));\n\n    // // Select Dates\n    setMultiSelectFromStateDate(\n      currentItem.debate_section_date,\n      datesSession,\n      selectedDates,\n      setSelectedDates\n    );\n    //setSelectedDates((selectedDates));\n  }\n\n  const setState_function_array = [\n    setSelectedDates,\n    setSelectedMembers,\n    setSelectedDebateTitle,\n    setSelectedIssues,\n    setSelectedQuestioner,\n    setSelectedQuestioner,\n    setSelectedMinister,\n    setSelectedPortfolio,\n    setSelectedAnnexure,\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addPart1-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={headerStyle}>\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() =>\n                  formClearSteps(\n                    setInputFieldsToNull_array,\n                    clearcurrentMetadataSection,\n                    setState_function_array\n                  )\n                }\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Start Page\"\n                  name=\"start_page\"\n                  value={currentItem.start_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"start_page\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Start Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n\n                <TextFieldGroup\n                  //placeholder={placeholderValue.placeHolderKannada}\n                  placeholder=\"End Page\"\n                  name=\"end_page\"\n                  value={currentItem.end_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"end_page\"\n                  //labelText={placeholderValue.placeHolderKannada}\n                  labelText=\"End Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  inline_style=\"ml-4\"\n                />\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Date</label>\n                    <MultiSelect\n                      options={datesSession}\n                      value={selectedDates}\n                      onChange={setSelectedDates}\n                      labelledBy={\"Select Date\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Participants</label>\n                    <MultiSelect\n                      options={membersSection}\n                      value={selectedMembers}\n                      onChange={setSelectedMembers}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Title</label>\n                    <MultiSelect\n                      options={debateTitlesObject}\n                      value={selectedDebateTitle}\n                      onChange={setSelectedDebateTitle}\n                      labelledBy={\"Select Debate Title Subject\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Debate Subject</label>\n                    <TextAreaField\n                      name=\"debate_subject_kan\"\n                      placeholder=\"Enter the Debate Subject\"\n                      value={currentItem.debate_subject_kan}\n                      onChange={onChange}\n                      id=\"text_field\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Issues</label>\n                    <MultiSelect\n                      options={issuesObject}\n                      value={selectedIssues}\n                      onChange={setSelectedIssues}\n                      labelledBy={\"Select Issues's\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\" style={{ display: \"flex\" }}>\n                  <div className=\"col-6\">\n                    <TextFieldGroup\n                      // placeholder={placeholderValue.placeHolderEnglish}\n                      placeholder=\"Question Number\"\n                      name=\"question_number\"\n                      value={currentItem.question_number}\n                      onChange={onChange}\n                      error={false}\n                      id=\"question_number\"\n                      // labelText={placeholderValue.placeHolderEnglish}\n                      labelText=\"Question Number\"\n                      formWidth=\"col-md\"\n                      required={true}\n                    />\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Questioner Name</label>\n                      <MultiSelect\n                        options={membersSection}\n                        value={selectedQuestioner}\n                        onChange={setSelectedQuestioner}\n                        labelledBy={\"Select Debate Participants\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\" style={{ display: \"flex\" }}>\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Minister's Name</label>\n                      <MultiSelect\n                        options={membersSection}\n                        value={selectedMinister}\n                        onChange={setSelectedMinister}\n                        labelledBy={\"Select Minister's Name\"}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Minister's Portfolio</label>\n                      <MultiSelect\n                        options={portfolioObject}\n                        value={selectedPortfolio}\n                        onChange={setSelectedPortfolio}\n                        labelledBy={\"Select Portfolio\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Annexure's</label>\n                    {\n                      //console.info(\"[annexure object]\", annexureObject)\n                    }\n                    <MultiSelect\n                      options={annexureObject}\n                      value={selectedAnnexure}\n                      onChange={setSelectedAnnexure}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={format(\n                    new Date(currentItem.modified_time),\n                    \"dd/MM/yyyy\"\n                  )}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={DeleteSectionMetadata}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() =>\n                    formClearSteps(\n                      setInputFieldsToNull_array,\n                      clearcurrentMetadataSection,\n                      setState_function_array\n                    )\n                  }\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSectionMetadata}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadata,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n};\n\nexport default MetadataSectionModal;\n","// Book Types\n\nexport const ADD_BOOK_STRUCT = 'ADD_BOOK_STRUCT';\nexport const DELETE_BOOK_STRUCT = 'DELETE_BOOK_STRUCT';\nexport const GET_BOOK_STRUCT_ALL = 'GET_BOOK_STRUCT_ALL';\nexport const BOOK_STRUCT_ERROR = 'BOOK_STRUCT_ERROR';\n\n//Auth Types\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n// Alert Types\n\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\n// Error Types\n\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const REMOVE_ERROR = 'REMOVE ERRORS';\n\n// METADATA SPEAKER ERRORS\n\nexport const ADD_SPEAKER = 'ADD_SPEAKER';\nexport const SPEAKER_ERROR = 'SPEAKER_ERROR';\nexport const GET_SPEAKER_ALL = 'GET_SPEAKER_ALL';\nexport const DELETE_SPEAKER = 'DELETE_SPEAKER';\n\n// GET CURRENT METADATA ITEM\n\nexport const GET_CURRENT_ITEM = 'GET_CURRENT_ITEM';\nexport const GET_CURRENT_ITEM_ERROR = 'GET_CURRENT_ITEM_ERROR';\nexport const SET_CURRENT_ITEM_NULL = 'SET_CURRENT_ITEM_NULL';\n\n// METADATA MEMBER PARTICIAPANTS\n\nexport const ADD_MEMBER = 'ADD_MEMBER';\nexport const MEMBER_ERROR = 'MEMBER_ERROR';\nexport const GET_MEMBER_ALL = 'GET_MEMBER_ALL';\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\n\n// Metadata Debate Title\n\nexport const ADD_DEBATE_TITLE = 'ADD_DEBATE_TITLE';\nexport const DEBATE_TITLE_ERROR = 'DEBATE_TITLE_ERROR';\nexport const GET_DEBATE_TITLE_ALL = 'GET_DEBATE_TITLE_ALL';\nexport const DELETE_DEBATE_TITLE = 'DELETE_DEBATE_TITLE';\n\n// Metadata Ministries/Portfolio\n\nexport const ADD_PORTFOLIO = 'ADD_DEBATE_TITLE';\nexport const PORTFOLIO_ERROR = 'PORTFOLIO_ERROR';\nexport const GET_PORTFOLIO_ALL = 'GET_PORTFOLIO_ALL';\nexport const DELETE_PORTFOLIO = 'DELETE_PORTFOLIO';\n\n// Metadata Issues\n\nexport const ADD_ISSUES = 'ADD_ISSUES';\nexport const ISSUES_ERROR = 'ISSUES_ERROR';\nexport const GET_ISSUES_ALL = 'GET_ISSUES_ALL';\nexport const DELETE_ISSUES = 'DELETE_ISSUES';\n\n// Metadata Tags\n\nexport const ADD_TAGS = 'ADD_TAGS';\nexport const TAGS_ERROR = 'TAGS_ERROR';\nexport const GET_TAGS_ALL = 'GET_TAGS_ALL';\nexport const DELETE_TAGS = 'DELETE_TAGS';\n\n// GET CURRENT BOOK\n\nexport const GET_CURRENT_BOOK_STRUCTURE = 'GET_CURRENT_BOOK_STRUCTURE';\nexport const GET_CURRENT_BOOK_STRUCTURE_ERROR =\n  'GET_CURRENT_BOOK_STRUCTURE_ERROR';\n\n//Add Annexure's\n\nexport const GET_ANNEXURE_FOR_BOOK = 'GET_ANNEXURE_FOR_BOOK';\nexport const ANNEXURE_ERROR = 'ANNEXURE_ERROR';\nexport const DELETE_ANNEXURE_ID = 'DELETE_ANNEXURE_ID';\nexport const GET_CURRENT_ANNEXURE = 'GET_CURRENT_ANNEXURE';\nexport const CLEAR_CURRENT_ANNEXURE = 'CLEAR_CURRENT_ANNEXURE';\n\n//Add Metadata Actions\n\nexport const GET_METADATA_FOR_BOOK = 'GET_METADATA_FOR_BOOK';\nexport const METADATA_ERROR = 'METADATA_ERROR';\nexport const DELETE_METADATA_ID = 'DELETE_METADATA_ID';\nexport const GET_CURRENT_METADATA = 'GET_CURRENT_METADATA';\nexport const CLEAR_CURRENT_METADATA_SECTION = 'CLEAR_CURRENT_METADATA_SECTION';\n\n// Add Admin Users Actions\n\nexport const GET_ADMIN_USERS = 'GET_ADMIN_USERS';\nexport const POST_NEW_ADMIN_USERS = 'POST_NEW_ADMIN_USERS';\nexport const DELETE_NEW_ADMIN_USERS = 'DELETE_NEW_ADMIN_USERS';\nexport const ADD_USER_ERROR = 'ADD_USER_ERROR';\nexport const REMOVE_USER_ERROR = 'REMOVE_USER_ERROR';\nexport const CLEAR_ADMIN_USERS = 'CLEAR_ADMIN_USERS';\nexport const GET_CURRENT_ADMIN_USERS = 'GET_CURRENT_ADMIN_USERS';\nexport const CLEAR_CURRENT_ADMIN_USERS = 'CLEAR_CURRENT_ADMIN_USERS';\nexport const REGISTER_ADMIN_SUCCESS = 'REGISTER_ADMIN_SUCCESS';\n\n// Add User Log Data\n\nexport const GET_USER_LOGS = 'GET_USER_LOGS';\nexport const REMOVE_USER_LOGS = 'REMOVE_USER_LOGS';\n","import React, { useEffect, useContext, Fragment, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { format } from \"date-fns\";\n// https://github.com/harshzalavadiya/react-multi-select-component#readme\n// https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport TextAreaField from \"../../common/TextAreaFieldGroup\";\n\nimport SelectListGroup from \"../../common/SelectListGroup\";\nimport MultiSelectInput from \"../../common/MultiSelectInputGroup.component\";\nimport MultiSelectInputMember from \"../../common/MultiSelectInputGroupMember.component\";\n\nimport BookContext from \"../../../context/book/bookContext\";\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  metadataStateObject,\n  metadataStateObjectPart1,\n  setInputfieldToNull,\n} from \"../../../constants/index\";\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n} from \"../../../context/types\";\n\nconst MetadataSectionModalPart2 = ({\n  modalTitle,\n  onChange,\n  onChangeMultiSelect,\n  currentItem,\n  setCurrentItem,\n  attribute,\n  loading,\n  setLoading,\n  AddItem,\n  onDelete,\n}) => {\n  const bookContext = useContext(BookContext);\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadata,\n    clearcurrentMetadataSection,\n    currentBookStructure,\n    annexureItems,\n  } = bookContext;\n\n  const {\n    debateParticipants,\n    getItems,\n    debateTitles,\n    issuesItems,\n    tagsItems,\n    portfolioItems,\n\n    //[{\"status\":true,\"_id\":\"5fc0dde916ba283e4af4e72b\",\"book_id_num\":1,\"annexure_title\":\"Cauvery Issue\",\"start_page\":12,\"end_page\":13,\"last_modified_time\":\"2020-11-27T11:07:21.595Z\",\"__v\":0}]\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  // Const Add Section\n\n  const AddSectionMetadata = () => {\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n    AddItem();\n  };\n  // Const Delete Section\n  const DeleteSectionMetadata = async () => {\n    await onDelete();\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n  };\n\n  const setInputFieldsToNull_array = [\n    \"start_page\",\n    \"end_page\",\n    \"text_field\",\n    \"question_number\",\n  ];\n\n  const formClearSteps = (\n    input_text_id,\n    stateClearFunction,\n    local_state_clear_array\n  ) => {\n    //  This function will clear all input fields & input state after the submission or cancel\n    //setInputfieldToNull(input_text_id);\n    setCurrentItem(metadataStateObject);\n    setInputfieldToNull(input_text_id);\n    stateClearFunction();\n    local_state_clear_array.map((setstateFunc) => {\n      setstateFunc([]);\n    });\n  };\n\n  const setMultiSelectFromState = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState,\n    selectedStateFunction,\n    filterFunction\n  ) => {\n    // Design the function to compare the object id in the metadata state with the objectmetadata\n\n    function filterObject(metadataState, objectMeta, usestateVar) {\n      let metaObject;\n\n      objectMeta.map((meta) => {\n        if (meta.value === metadataState) {\n          metaObject = meta;\n        } else {\n          //      console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n\n    // Set Selected Debate Title\n    if (typeof metadataStateVar === \"string\") {\n      // let result_selected_values_array = [];\n      let result_selected_values = filterObject(\n        metadataStateVar,\n        objectMetadata,\n        selectedState\n      );\n\n      //console.info(\"[DEBUG] for set state to part1\", result_selected_values);\n\n      if (result_selected_values) {\n        selectedState.push(result_selected_values);\n        // return result_selected_values;\n      }\n    } else if (typeof metadataStateVar === \"object\") {\n      metadataStateVar.map((state) => {\n        let result_selected_values = filterObject(\n          state,\n          objectMetadata,\n          selectedState\n        );\n        if (\n          result_selected_values != undefined ||\n          result_selected_values != null\n        ) {\n          // selectedState.map((item) => {\n          //   if (item.value != result_selected_values.value) {\n          //     selectedState.push(result_selected_values);\n          //   }\n          // });\n          if (result_selected_values) {\n            selectedState.push(result_selected_values);\n          }\n        }\n      });\n      // console.info(\"[DEBUG] Selected State for given State is\", selectedState);\n      //let newState = filterFunction(selectedState);\n      // selectedState = newState;\n      //return newState;\n      //console.info(\"[DEBUG] Selected State Array \", selectedState);\n      // selectedStateFunction([]);\n      // newState.map((item) => selectedState.push(item));\n\n      // selectedStateFunction([...newState]);\n    }\n  };\n\n  const setMultiSelectFromStateDate = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState\n  ) => {\n    function filterObject(metadataState, objectMeta) {\n      let metaObject;\n      let newDate = format(new Date(metadataState), \"dd-MM-yyyy\");\n\n      objectMeta.map((meta) => {\n        if (meta.value === newDate) {\n          metaObject = meta;\n        } else {\n          // console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n    // console.info(\n    //   \"[DEBUG filterObject Dates] the value of Objectmeta \",\n    //   objectMetadata\n    // );\n    let result_selected_values = filterObject(metadataStateVar, objectMetadata);\n    selectedState.push(result_selected_values);\n  };\n\n  useEffect(() => {\n    //https://stackoverflow.com/questions/47019199/why-does-async-await-work-with-react-setstate\n    if (\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) {\n      setCurrentItem(metadataStateObject);\n\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    } else {\n      setCurrentItem(currentMetadata);\n\n      // setMultiSelectFromState(currentMetadata);\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    }\n  }, [currentMetadata]);\n\n  const buttonValue = (currentMetadata, attribute) => {\n    if (!(Object.keys(currentMetadata).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentMetadata).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  const headerStyle = {\n    backgroundColor: \"#f44336\",\n  };\n\n  const onSelect = (data) => {\n    console.log(data);\n  };\n\n  const onRemove = (data) => {\n    console.log(data);\n  };\n\n  function optionsMultiSelect(data_array, type) {\n    // TODO Refactory the repeated code in the repeated block\n    var input_box_array = [];\n\n    //console.log(\"[OPTION MULTI SELECT] array value\", data_array);\n    if (type === \"dates\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        input_box_options.label = item;\n        input_box_options.value = item;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"members\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"debatetitle\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"issues\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"annexure\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, annexure_title } = item;\n        input_box_options.label = annexure_title;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"portfolio\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    }\n    // console.info(\"[OPTION MULTI SELECT] output value\", input_box_array);\n    return input_box_array;\n  }\n\n  // Dates Session Value\n\n  const datesSession = currentBookStructure.dates_session\n    ? optionsMultiSelect(currentBookStructure.dates_session, \"dates\")\n    : [];\n\n  // Members Session Value\n  const membersSection = debateParticipants\n    ? optionsMultiSelect(debateParticipants, \"members\")\n    : [];\n\n  // Debate Title Value\n  const debateTitlesObject = debateTitles\n    ? optionsMultiSelect(debateTitles, \"debatetitle\")\n    : [];\n\n  // Issues Value\n  const issuesObject = issuesItems\n    ? optionsMultiSelect(issuesItems, \"issues\")\n    : [];\n\n  // Portfolio Value\n  const portfolioObject = portfolioItems\n    ? optionsMultiSelect(portfolioItems, \"portfolio\")\n    : [];\n\n  const annexureObject = annexureItems\n    ? optionsMultiSelect(annexureItems, \"annexure\")\n    : [];\n\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [selectedDebateTitle, setSelectedDebateTitle] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedIssues, setSelectedIssues] = useState([]);\n  const [selectedQuestioner, setSelectedQuestioner] = useState([]);\n  const [selectedMinister, setSelectedMinister] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState([]);\n  const [selectedAnnexure, setSelectedAnnexure] = useState([]);\n  // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n  // function getUniqueListBy(arr, key) {\n  //   //  Array to remove the duplicate entries in the object\n  //   return [...new Map(arr.map((item) => [item[key], item])).values()];\n  // }\n\n  useEffect(() => {\n    const selectDatesInst = selectedDates ? selectedDates[0] : \"\";\n    onChangeMultiSelect(selectDatesInst, \"dates\");\n    //setSelectedDates(getUniqueListBy(selectedDates, \"value\"));\n  }, [selectedDates]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMembers, \"members\");\n    // setSelectedDates(getUniqueListBy(selectedMembers, \"value\"));\n  }, [selectedMembers]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedDebateTitle, \"debatetitle\");\n  }, [selectedDebateTitle]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedIssues, \"issues\");\n  }, [selectedIssues]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedQuestioner, \"questioner\");\n  }, [selectedQuestioner]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMinister, \"minister\");\n  }, [selectedMinister]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedPortfolio, \"portfolio\");\n  }, [selectedPortfolio]);\n\n  useEffect(() => {\n    onChangeMultiSelect(selectedAnnexure, \"annexure\");\n  }, [selectedAnnexure]);\n\n  useEffect(() => {\n    // console.log(\"[Aneexure Items] \", annexureItems);\n  }, [annexureItems]);\n\n  if (\n    !(\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) &&\n    currentItem.debate_title_subject != \"\" &&\n    !selectedDebateTitle.length >= 1\n  ) {\n    // Select Debate Title\n    const debate_title_state = setMultiSelectFromState(\n      currentItem.debate_title_subject,\n      debateTitlesObject,\n      selectedDebateTitle,\n      setSelectedDebateTitle\n    );\n    // setSelectedDebateTitle([]);\n    // debate_title_state.map((item) => selectedDebateTitle.push(item));\n\n    // // Select Minister Portfolio\n    setMultiSelectFromState(\n      currentItem.minister_portfolio,\n      portfolioObject,\n      selectedPortfolio,\n      setSelectedPortfolio\n    );\n    // //setSelectedPortfolio(unique_element(selectedPortfolio));\n\n    // // Select Minister Name\n    setMultiSelectFromState(\n      currentItem.minister_name,\n      membersSection,\n      selectedMinister,\n      setSelectedMinister\n    );\n    // //setSelectedMinister((selectedMinister));\n\n    // // Select Questioner's Name\n    setMultiSelectFromState(\n      currentItem.questioner_name,\n      membersSection,\n      selectedQuestioner,\n      setSelectedQuestioner\n    );\n\n    // //setSelectedQuestioner((selectedQuestioner));\n\n    // // Select Debate Participants Name\n    setMultiSelectFromState(\n      currentItem.debate_participants,\n      membersSection,\n      selectedMembers,\n      setSelectedMembers\n    );\n\n    // // setSelectedMembers((selectedMembers));\n\n    // // Select Annexure's\n    setMultiSelectFromState(\n      currentItem.annexure,\n      annexureObject,\n      selectedAnnexure,\n      setSelectedAnnexure\n    );\n    // //setSelectedAnnexure((selectedAnnexure));\n    // // Select Issues\n    setMultiSelectFromState(\n      currentItem.issues_section,\n      issuesObject,\n      selectedIssues,\n      setSelectedIssues\n    );\n\n    // // setSelectedIssues((selectedIssues));\n\n    // // Select Dates\n    setMultiSelectFromStateDate(\n      currentItem.debate_section_date,\n      datesSession,\n      selectedDates,\n      setSelectedDates\n    );\n    //setSelectedDates((selectedDates));\n  }\n\n  const setState_function_array = [\n    setSelectedDates,\n    setSelectedMembers,\n    setSelectedDebateTitle,\n    setSelectedIssues,\n    setSelectedQuestioner,\n    setSelectedQuestioner,\n    setSelectedMinister,\n    setSelectedPortfolio,\n    setSelectedAnnexure,\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addPart2-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={headerStyle}>\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() =>\n                  formClearSteps(\n                    setInputFieldsToNull_array,\n                    clearcurrentMetadataSection,\n                    setState_function_array\n                  )\n                }\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Start Page\"\n                  name=\"start_page\"\n                  value={currentItem.start_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"start_page\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Start Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n\n                <TextFieldGroup\n                  //placeholder={placeholderValue.placeHolderKannada}\n                  placeholder=\"End Page\"\n                  name=\"end_page\"\n                  value={currentItem.end_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"end_page\"\n                  //labelText={placeholderValue.placeHolderKannada}\n                  labelText=\"End Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  inline_style=\"ml-4\"\n                />\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Date</label>\n                    <MultiSelect\n                      options={datesSession}\n                      value={selectedDates}\n                      onChange={setSelectedDates}\n                      labelledBy={\"Select Date\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Participants</label>\n                    <MultiSelect\n                      options={membersSection}\n                      value={selectedMembers}\n                      onChange={setSelectedMembers}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Title</label>\n                    <MultiSelect\n                      options={debateTitlesObject}\n                      value={selectedDebateTitle}\n                      onChange={setSelectedDebateTitle}\n                      labelledBy={\"Select Debate Title Subject\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Debate Subject</label>\n                    <TextAreaField\n                      name=\"debate_subject_kan\"\n                      placeholder=\"Enter the Debate Subject\"\n                      value={currentItem.debate_subject_kan}\n                      onChange={onChange}\n                      id=\"text_field\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Issues</label>\n                    <MultiSelect\n                      options={issuesObject}\n                      value={selectedIssues}\n                      onChange={setSelectedIssues}\n                      labelledBy={\"Select Issues's\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Ministry</label>\n                    <MultiSelect\n                      options={portfolioObject}\n                      value={selectedPortfolio}\n                      onChange={setSelectedPortfolio}\n                      labelledBy={\"Select Portfolio\"}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Annexure's</label>\n                    {\n                      //console.info(\"[annexure object]\", annexureObject)\n                    }\n                    <MultiSelect\n                      options={annexureObject}\n                      value={selectedAnnexure}\n                      onChange={setSelectedAnnexure}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={format(\n                    new Date(currentItem.modified_time),\n                    \"dd/MM/yyyy\"\n                  )}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={DeleteSectionMetadata}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() =>\n                    formClearSteps(\n                      setInputFieldsToNull_array,\n                      clearcurrentMetadataSection,\n                      setState_function_array\n                    )\n                  }\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSectionMetadata}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadata,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModalPart2.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n};\n\nexport default MetadataSectionModalPart2;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport swal from \"sweetalert\";\nimport { format } from \"date-fns\";\n\nimport { SearchTableNew } from \"../../utils/SearchTableNew.component\";\nimport { modalHeaderBackColour } from \"../../constants\";\nimport BookContext from \"../../context/book/bookContext\";\nimport { metadataStateObject } from \"../../constants/index\";\nimport BookPart1Modal from \"./book-sections/BookPart1Modal.component\";\nimport BookPart2Modal from \"./book-sections/BookPart2Modal.component\";\n\nimport { CUSTOMER, styleDashBoardCard } from \"../../constants/index\";\n\nconst BookMetadataTable = () => {\n  const [metadataState, setMetadataState] = useState(metadataStateObject);\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const bookContext = useContext(BookContext);\n  const {\n    addSection,\n    editSection,\n    currentMetadata,\n    currentBookStructure,\n    clearcurrentMetadataSection,\n    deleteSection,\n    errors,\n    sectionalMetadataItems,\n    getMetadataItems,\n  } = bookContext;\n\n  useEffect(() => {\n    if (currentBookStructure.length !== 0) {\n      getMetadataItems(currentBookStructure.bookId);\n      // setAnnexureItem({\n      //   ...annexItem,\n      //   book_id_num: currentBookStructure.bookId,\n      // });\n    }\n  }, [currentBookStructure]);\n\n  // setMetadataState({\n  //   ...metadataState,\n  //   book_id: currentBookStructure.bookId,\n  // });\n\n  // if (currentBookStructure) {\n  //   console.info(\n  //     \"[DEBUG] Current BookStructure with book id \",\n  //     currentBookStructure.bookId\n  //   );\n\n  //   setMetadataState({\n  //     ...metadataState,\n  //     book_id: currentBookStructure.bookId,\n  //   });\n  // }\n\n  // console.info(\n  //   (\"2020-06-12T18:30:00.000Z\").toDateString())\n  // );\n\n  const onChange = (e) => {\n    setMetadataState({ ...metadataState, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeMultiSelect = (valueMultiselect, type) => {\n    // Refer https://stackoverflow.com/questions/5619202/converting-a-string-to-a-date-in-javascript\n\n    // To filter out duplicate arrays\n    function uniq_array(a) {\n      return Array.from(new Set(a));\n    }\n\n    if (valueMultiselect) {\n      if (type === \"dates\") {\n        const { value } = valueMultiselect;\n        // console.info(\"[DEBUG] Handle Multiselect Dates to String value\", value);\n        let mydateParts = value.split(\"-\");\n        // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n        // January - 0, February - 1, etc.\n        let dateinformat = new Date(\n          mydateParts[2],\n          mydateParts[1] - 1,\n          mydateParts[0]\n        );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String value\",\n        //   dateinformat\n        // );\n        setMetadataState({\n          ...metadataState,\n          debate_section_date: dateinformat,\n        });\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat.toISOString()\n        // );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat\n        // );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat.toDateString()\n        // );\n      }\n\n      if (type === \"members\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n\n        // let value_array_set = Array.from(new Set(value_array));\n\n        setMetadataState({\n          ...metadataState,\n          debate_participants: value_array,\n        });\n      }\n      if (type === \"debatetitle\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          debate_title_subject: value_array[0],\n        });\n      }\n      if (type === \"issues\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          issues_section: value_array,\n        });\n      }\n\n      if (type === \"questioner\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          questioner_name: value_array[0],\n        });\n      }\n\n      if (type === \"minister\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          minister_name: value_array[0],\n        });\n      }\n      if (type === \"portfolio\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          minister_portfolio: value_array[0],\n        });\n      }\n\n      if (type === \"annexure\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          annexure: value_array[0],\n        });\n      }\n    }\n\n    // let value = Array.from(e.target.selectedOptions, (option) => option.value);\n    // console.log(\"[Handle Changer] the value parameter\", value);\n\n    // setMetadataState({ ...metadataState, [e.target.name]: value });\n  };\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editSection(_id);\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const initMetadataState = () => {\n    // Intializing the Sectional Metadata State\n    setMetadataState(metadataStateObject);\n    setLoading({ buttonLoading: false });\n  };\n\n  const getTableItems = (_id, sectiontype) => {\n    let modalTarget;\n    if (sectiontype === \"part1\") {\n      modalTarget = \"#addPart1-modal-metadata\";\n    } else {\n      modalTarget = \"#addPart2-modal-metadata\";\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target={modalTarget}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Book Id\",\n      Footer: \"Book Id\",\n      accessor: \"book_id\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Section Type\",\n      Footer: \"Section Type\",\n      accessor: \"section_type\",\n      sticky: \"left\",\n      Cell: ({ value }) => {\n        let classes = \"badge \";\n        if (value === \"part1\") {\n          classes += `badge-danger`;\n        } else {\n          classes += \"badge-success\";\n        }\n        return (\n          <span className={classes}>\n            {value === \"part1\" ? \"Part1 Q & A\" : \"Part2 Other Q & A\"}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Debate Title\",\n      Footer: \"Debate Title\",\n      accessor: \"debate_title_subject\",\n      Cell: ({ value }) => {\n        if (value === undefined) {\n          return \"NA\";\n        } else {\n          return value.name_eng;\n        }\n      },\n    },\n    {\n      Header: \"Debate Subject\",\n      Footer: \"Debate Subject\",\n      accessor: \"debate_subject_kan\",\n    },\n    {\n      Header: \"Debate Date\",\n      Footer: \"Debate Date\",\n      accessor: \"debate_section_date\",\n      Cell: ({ value }) => {\n        return format(new Date(value), \"dd/MM/yyyy\");\n      },\n    },\n    // {\n    //   Header: \"Debate Participants\",\n    //   Footer: \"Debate Participants\",\n    //   accessor: \"debate_participants\",\n    //   Cell: ({ value }) => {\n    //     // console.info(\"[Table Debate Particiapant] \", value);\n    //     let itemArray = [];\n    //     value.map((item) => {\n    //       // console.info(\"[Table Debate Particiapant Map] \", item);\n    //       itemArray.push(item.name_eng);\n    //     });\n    //     //console.info(\"[Table Debate Particiapant ItemArray] \", itemArray);\n    //     const members = itemArray.join(\", \");\n    //     return members;\n    //   },\n    // },\n\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: (props) => {\n        // console.info(\n        //   \" [DEBUG Action Column Table ]\",\n        //   props.cell.row.original.section_type\n        // );\n        //  Access Section Type in props props.cell.row.original.section_type\n        return getTableItems(props.value, props.cell.row.original.section_type);\n      },\n    },\n  ];\n\n  const setSectionTypeState = (type) => {\n    if (type === \"part1\") {\n      setMetadataState({\n        ...metadataState,\n        section_type: type,\n      });\n      // console.info(\"[SET SECTION TYPE] call \", metadataState);\n    } else {\n      setMetadataState({\n        ...metadataState,\n        section_type: type,\n      });\n    }\n  };\n\n  const AddSection = (bookid, sectiontype) => {\n    // Edit Book Section Action\n\n    if (Object.keys(currentMetadata).length !== 0) {\n      setLoading({ buttonLoading: true });\n\n      //setSectionTypeState(sectiontype);\n      // Setting Section type Part1 Q & A or Other than Q & A\n      // if (sectiontype == \"part1\") {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part1\",\n      //   });\n      // } else {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part2\",\n      //   });\n      // }\n      const currentItemInstance = metadataState;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_v\"];\n      currentItemInstance.book_id = currentBookStructure.bookId;\n      currentItemInstance.struct_id = currentBookStructure._id;\n\n      //     struct_id: currentBookStructure._id,\n      if (sectiontype === \"part1\") {\n        currentItemInstance.section_type = \"part1\";\n      } else {\n        currentItemInstance.section_type = \"part2\";\n      }\n\n      addSection(\n        currentItemInstance,\n        metadataState.book_id,\n        metadataState._id\n      ).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initMetadataState();\n          clearcurrentMetadataSection();\n          swal(\n            \"Good job!\",\n            \"The Book Section edited Successfully!!!\",\n            \"success\"\n          );\n          setMetadataState(metadataStateObject);\n        } else {\n          initMetadataState();\n          swal(\n            \"Awww Snap !!!\",\n            \"Book Section not edited successfully !!! Please Try Again \",\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Book Section\n\n      setLoading({ buttonLoading: true });\n\n      //setSectionTypeState(sectiontype);\n      // // Setting Section type Part1 Q & A or Other than Q & A\n      // if (sectiontype == \"part1\") {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part1\",\n      //   });\n      // } else {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part2\",\n      //   });\n      // }\n\n      const currentItemInstance = metadataState;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_id\"];\n      currentItemInstance.book_id = currentBookStructure.bookId;\n      currentItemInstance.struct_id = currentBookStructure._id;\n      if (sectiontype === \"part1\") {\n        currentItemInstance.section_type = \"part1\";\n      } else {\n        currentItemInstance.section_type = \"part2\";\n      }\n\n      //      console.info(\"[Call from Book Set Action] \", metadataState);\n\n      addSection(currentItemInstance, currentItemInstance.bookid).then(\n        (responseMsg) => {\n          if (responseMsg === \"success\") {\n            initMetadataState();\n            swal(\n              \"Good job!\",\n              \"The Book Section Added is added successfully !!!\",\n              \"success\"\n            );\n            setMetadataState(metadataStateObject);\n          } else {\n            initMetadataState();\n            swal(\n              \"Awww Snap !!!\",\n              \"The Book Section was not added successfully,Please Try Again !!!\",\n              \"error\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  const DeleteMetadata = () => {\n    //const _id = currentMetadata._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadata.debate_subject_kan} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteSection(currentBookStructure.bookId, currentMetadata._id)\n          .then((msg) => {\n            if (msg === \"success\") {\n              clearcurrentMetadataSection();\n              swal(\n                `${currentMetadata.debate_subject_kan}  has been deleted !!!`,\n                {\n                  icon: \"success\",\n                }\n              );\n            } else {\n              swal(\n                `Poof! ${currentMetadata.debate_subject_kan} cannot be deleted .Contact System Administrator   `,\n                {\n                  icon: \"error\",\n                }\n              );\n            }\n          })\n          .catch((err) =>\n            console.log(\"[DEBUG-Delete Metadata] Logging info \", err)\n          );\n      } else {\n        swal(` ${currentMetadata.debate_title_subject}  is safe!`);\n      }\n    });\n  };\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Sections's</b>{\" \"}\n        </h3>\n        <div className=\"card-tools\"></div>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n\n      <div className=\"card-body\">\n        <SearchTableNew\n          tableHeaderName=\"Added Metadata Section's\"\n          CUSTOMER={CUSTOMER}\n          MetadataType=\"metadata\"\n          columns_table={COLUMNS}\n          table_data={sectionalMetadataItems}\n          number_sections={sectionalMetadataItems.length}\n        />\n      </div>\n\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n      <BookPart1Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part1] Question & Answer's\"\n            : \"Add [Part1] Question & Answer's\"\n        }\n        onChange={onChange}\n        onChangeMultiSelect={handleChangeMultiSelect}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Question & Answer's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(metadataState.book_id, \"part1\")}\n        onDelete={(e) => DeleteMetadata()}\n      />\n      <BookPart2Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part2]Other than Question & Answer's\"\n            : \"Add [Part2]Other than Question & Answer's\"\n        }\n        onChange={onChange}\n        onChangeMultiSelect={handleChangeMultiSelect}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Other Question & Answer's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(metadataState.book_id, \"part2\")}\n        onDelete={(e) => DeleteMetadata()}\n      />\n      {/* /.card-footer*/}\n      {/* <BookPart2Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part2] Other than Question & Answer's\"\n            : \"Add [Part2] Other than Question & Answer's\"\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Other than (Q & A)\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(currentBookStructure.bookId)}\n        onDelete={(e) => DeleteMetadata()}\n      /> */}\n    </div>\n  );\n};\n\nexport default BookMetadataTable;\n","import React, { useEffect, useContext, Fragment } from \"react\";\nimport swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport SelectListGroup from \"../../common/SelectListGroup\";\n\nimport BookContext from \"../../../context/book/bookContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const bookContext = useContext(BookContext);\n\n  const {\n    currentAnnexure,\n    clearcurrentAnnexure,\n    currentBookStructure,\n  } = bookContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  useEffect(() => {\n    if (\n      Object.keys(currentAnnexure).length === 0 &&\n      currentAnnexure.constructor === Object\n    ) {\n      setCurrentItem({\n        _id: null,\n        book_id_num: null,\n        annexure_title: null,\n        start_page: null,\n        end_page: null,\n        status: null,\n\n        last_modified_time: null,\n        modified_user: null,\n      });\n    } else {\n      setCurrentItem(currentAnnexure);\n    }\n  }, [currentAnnexure]);\n\n  const buttonValue = (currentannexure, attribute) => {\n    if (!(Object.keys(currentannexure).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentannexure).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addAnnexure-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => clearcurrentAnnexure()}\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Book Id\"\n                  name=\"bookId\"\n                  value={currentBookStructure.bookId}\n                  onChange={onChange}\n                  error={false}\n                  id=\"bookId\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Book ID\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  disabled=\"true\"\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Annexure Title\"\n                name=\"annexure_title\"\n                value={currentItem.annexure_title}\n                onChange={onChange}\n                error={false}\n                id=\"annexure_title\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Annexure Title\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Start Page\"\n                name=\"start_page\"\n                value={currentItem.start_page}\n                onChange={onChange}\n                error={false}\n                id=\"start_page\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Start Page\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"End Page\"\n                name=\"end_page\"\n                value={currentItem.end_page}\n                onChange={onChange}\n                error={false}\n                id=\"end_page\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"End Page\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentAnnexure,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import ReactFlexyTable from \"react-flexy-table\";\nimport swal from \"sweetalert\";\n//import \"react-flexy-table/dist/index.css\";\n//import deleteIcon from \"../icons/icons8-delete-24.png\";\n//import editIcon from \"../icons/icons8-eye-30.png\";\n\nimport { SearchTableNew } from \"../../utils/SearchTableNew.component\";\n\n//Import Book Context from Context\nimport BookContext from \"../../context/book/bookContext\";\n\n// Import Add Annexure Modal\n\nimport AnnexureModal from \"./book-sections/AnnexureModal.component\";\n\nimport {\n  CUSTOMER,\n  styleDashBoardCard,\n  modalHeaderBackColour,\n} from \"../../constants/index\";\nimport { CLEAR_CURRENT_ANNEXURE } from \"../../context/types\";\n\nconst AnnexureSummary = () => {\n  const bookContext = useContext(BookContext);\n  const {\n    annexureItems,\n    currentAnnexure,\n    currentBookStructure,\n    addAnnexure,\n    getAnnexureItems,\n    editAnnexure,\n    deleteAnnexure,\n    clearcurrentAnnexure,\n  } = bookContext;\n\n  useEffect(() => {\n    if (currentBookStructure.length !== 0) {\n      getAnnexureItems(currentBookStructure.bookId);\n      setAnnexureItem({\n        ...annexItem,\n        book_id_num: currentBookStructure.bookId,\n      });\n    }\n  }, [currentBookStructure]);\n\n  useEffect(() => {}, [annexureItems]);\n\n  const [annexItem, setAnnexureItem] = useState({\n    _id: null,\n    book_id_num: null,\n    annexure_title: null,\n    start_page: null,\n    end_page: null,\n    status: null,\n\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const onChange = (e) => {\n    setAnnexureItem({ ...annexItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editAnnexure(_id);\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addAnnexure-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initAnnexureState = () => {\n    // Intializing the Speaker State to Null\n    setAnnexureItem({\n      _id: null,\n      book_id_num: \"\",\n      annexure_title: \"\",\n      start_page: null,\n      end_page: null,\n      status: null,\n\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddAnnexure = (bookid) => {\n    // Edit Annexure Action\n\n    if (currentAnnexure) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = annexItem;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_v\"];\n\n      addAnnexure(currentItemInstance, bookid).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initAnnexureState();\n          clearcurrentAnnexure();\n          swal(\"Good job!\", \"The Annexure edited Successfully!!!\", \"success\");\n        } else {\n          initAnnexureState();\n          swal(\n            \"Awww Snap !!!\",\n            \"Annexure not edited successfully !!! Please Try Again \",\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = annexItem;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_id\"];\n\n      addAnnexure(currentItemInstance, bookid).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initAnnexureState();\n          swal(\n            \"Good job!\",\n            \"The Annexure was added successfully !!!\",\n            \"success\"\n          );\n        } else {\n          initAnnexureState();\n          swal(\n            \"Awww Snap !!!\",\n            \"The Annexure was not added successfully !!!\",\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteAnnexure = () => {\n    const _id = currentAnnexure._id;\n    swal({\n      title: `Are you sure you want to delete ${currentAnnexure.annexure_title} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteAnnexure(currentAnnexure._id, currentAnnexure.book_id_num)\n          .then((msg) => {\n            if (msg === \"success\") {\n              clearcurrentAnnexure();\n              swal(`${currentAnnexure.annexure_title}  has been deleted !!!`, {\n                icon: \"success\",\n              });\n            } else {\n              swal(\n                `Poof! ${currentAnnexure.annexure_title} cannot be deleted .Contact System Administrator   `,\n                {\n                  icon: \"error\",\n                }\n              );\n            }\n          })\n          .catch((err) =>\n            console.log(\"[DEBUG-Delete Annexure] Logging into \", err)\n          );\n      } else {\n        swal(` ${currentAnnexure.annexure_title}  is safe!`);\n      }\n    });\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Book Id (English)\",\n      Footer: \"Book Id (English)\",\n      accessor: \"book_id_num\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Annexure Title\",\n      Footer: \"Annexure Title\",\n      accessor: \"annexure_title\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Start Page\",\n      Footer: \"Start Page\",\n      accessor: \"start_page\",\n    },\n    {\n      Header: \"End Page\",\n      Footer: \"End Page\",\n      accessor: \"end_page\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Annexure's</b>{\" \"}\n        </h3>\n        <div className=\"card-tools\"></div>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n\n      <div className=\"card-body\">\n        <SearchTableNew\n          tableHeaderName=\"Added Annexure's Table\"\n          CUSTOMER={CUSTOMER}\n          MetadataType=\"annexure\"\n          columns_table={COLUMNS}\n          table_data={annexureItems}\n        />\n      </div>\n\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n      {/* /.card-footer*/}\n      <AnnexureModal\n        modalTitle={CUSTOMER === \"KLA\" ? \"Add Annexure's\" : \"Add Annexure's\"}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={annexItem}\n        attribute=\"Annexure's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setAnnexureItem}\n        setLoading={setLoading}\n        AddItem={(e) => AddAnnexure(currentBookStructure.bookId)}\n        onDelete={(e) => DeleteAnnexure()}\n      />\n    </div>\n  );\n};\n\nexport default AnnexureSummary;\n","import React, { useContext } from \"react\";\nimport AuthContext from \"../context/auth/authContext\";\n\nconst BreadCrumbsDashboard = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n  // const breadcrumbItem = (\n\n  // )\n  return (\n    <div className=\"content-header\">\n      <div className=\"container-fluid\">\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-6\">\n            <h1 className=\"m-0 text-dark\">Welcome {user ? user.name : \"\"} </h1>\n          </div>\n          {/* /.col */}\n          <div className=\"col-sm-6\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"#\">Home</a>\n              </li>\n              <li className=\"breadcrumb-item active\">\n                <a href=\"#\">Dashboard V1</a>{\" \"}\n              </li>\n            </ol>\n          </div>\n          {/* /.col */}\n        </div>\n      </div>\n      {/* /.container-fluid */}\n    </div>\n  );\n};\n\nexport default BreadCrumbsDashboard;\n","import React from \"react\";\n\nimport \"./SidNav.styles.scss\";\n\nconst SideNav = () => {\n  return (\n    <div className=\"sideNav-content\">\n      <div id=\"mySidenav\" className=\"sidenav\">\n        <a\n          href=\"#\"\n          id=\"addAnnexure\"\n          data-toggle=\"modal\"\n          data-target=\"#addAnnexure-modal-metadata\"\n        >\n          Add Annexure\n        </a>\n        <a\n          href=\"#\"\n          id=\"part1\"\n          data-toggle=\"modal\"\n          data-target=\"#addPart1-modal-metadata\"\n        >\n          Add Part1(Q & A)\n        </a>\n        <a\n          href=\"#\"\n          id=\"part2\"\n          data-toggle=\"modal\"\n          data-target=\"#addPart2-modal-metadata\"\n        >\n          Add Part2 (Other than Q & A)\n        </a>\n        <a href=\"#\" id=\"completed\">\n          Mark as Completed\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { Component, Fragment, useEffect, useContext } from \"react\";\n\nimport \"./BookIndex.styles.scss\";\n\nimport BookSummary from \"./BookSummary-Top\";\nimport BookTable from \"./BookMetadataTable\";\nimport AnnexureSummary from \"./AnnexureSummary.component\";\nimport BreadCrumbs from \"../../utils/Breadcrumbs\";\n\nimport SideNav from \"../sideNav/SideNav\";\n\n// Import Book Context\nimport BookContext from \"../../context/book/bookContext\";\n\nimport {\n  modalHeaderBackColour,\n  styleDashBoardCard,\n  CUSTOMER,\n} from \"../../constants/index\";\nimport { useBlockLayout } from \"react-table\";\n\nconst BookIndex = (props) => {\n  //let { id } = useParams();\n  const { id } = props.match.params;\n  const bookContext = useContext(BookContext);\n  const {\n    currentBookStructure,\n    getCurrentBook,\n    getAnnexureItems,\n  } = bookContext;\n\n  // useEffect(() => {\n  //   getAnnexureItems();\n  // }, []);\n\n  return (\n    <div className=\"content-wrapper\">\n      <BreadCrumbs />\n      <BookSummary id={id} />\n      <SideNav />\n      <AnnexureSummary />\n      <BookTable />\n    </div>\n  );\n};\n\n// class BookIndex extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       department: \"KLA\",\n//       bookId: 54,\n//       assemblyNumber: 1,\n//       sessionNumber: 3,\n//       volumeNumber: 4,\n//       partNumber: 5,\n//       numberPages: 1123,\n//       placeSession: \"\",\n\n//       yearBook: 2013,\n//       datesSession: [\"12-03-2012\", \"13-03-2012\"],\n\n//       statusBookBinded: \"UNBINDED\",\n//       bookReturnedDate: null,\n//       metadataGivenDate: null,\n//       metadataStartDate: null,\n//       metadataEndDate: null,\n//       remarksBook: \"\",\n//       metadataStatus: \"INCOMPLETE\",\n//       bookStatus: \"INDEXED\",\n//       uploadfilePath: \"\",\n\n//       loading: false,\n\n//       errors: {},\n//     };\n//   }\n\n//   // onChange = (e) => {\n//   //   //console.log(e.target);\n\n//   //   this.setState({ [e.target.name]: e.target.value });\n//   // };\n\n//   // onChangeDate = (date) => {\n//   //   this.setState({\n//   //     bookReturnedDate: date,\n//   //   });\n//   // };\n//   render() {\n//     return (\n//       <div className=\"content-wrapper\">\n//         <BreadCrumbs />\n//         <BookSummary />\n//         <SideNav />\n//         <AnnexureSummary />\n//         <BookTable />\n//       </div>\n//     );\n//   }\n// }\n\nexport default BookIndex;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddSpeaker,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addSpeaker-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Speaker'sName (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Speaker'sName (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Speaker's Name (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Speaker's Name (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSpeaker}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  \"Speaker\"\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddSpeaker: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React from \"react\";\n\nexport const modalplaceholderLabelValue = (metadatatype) => {\n  if (metadatatype === \"speaker\") {\n    return {\n      placeHolderEnglish: \"Speaker's Name (English)\",\n      placeHolderKannada: \"Speaker's Name (Kannada)\",\n    };\n  } else if (metadatatype === \"member\") {\n    return {\n      placeHolderEnglish: \"Member's Name (English)\",\n      placeHolderKannada: \"Member's Name (Kannada)\",\n    };\n  } else {\n    console.log(\"placehollder function metadatatype value\", metadatatype);\n  }\n};\n\nexport const getStatusBadge = (status) => {\n  if (status) {\n    return <span className=\"badge badge-success\">Live</span>;\n  } else {\n    return <span className=\"badge badge-danger\">Not Live</span>;\n  }\n};\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\n\nimport TableSectionSpeakers from \"../../../utils/SearchTable.component\";\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddMetadataItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\n//Imported Add Speaker Functions\nimport { modalplaceholderLabelValue } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\n//import AddItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\n//Import the Context\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { DELETE_SPEAKER, SPEAKER_ERROR } from \"../../../context/types\";\n\nimport {\n  TABLE_HEADER_SPEAKER,\n  CUSTOMER,\n  ADD_EDIT_SPEAKER_TITLE_MODAL,\n  ADD_EDIT_CHAIRMAN_TITLE_MODAL,\n} from \"../../../constants/index\";\n\nconst MetadataSectionCardSpeaker = () => {\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadataItem,\n    errors,\n    getSpeakerItems,\n    speakersItems,\n    addSpeaker,\n    editItem,\n    deleteItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  // const [speaker, setSpeaker] = useState({\n  //   name_eng: \"\",\n  //   name_kan: \"\",\n  //   status: null,\n  //   id: null,\n  //   lastModifiedAt: \"\",\n  //   lastModifiedBy: \"  \",\n  // });\n\n  useEffect(() => {}, [errors, speakersItems]);\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const editItemfunc = (e, _id) => {\n    // console.log(\"In Edit Item for : \", _id);\n    editItem(_id, \"speaker\", \"speakerName\");\n  };\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addSpeaker-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initSpeakerState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddSpeaker = () => {\n    if (currentMetadataItem) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addSpeaker(currentItemInstance).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initSpeakerState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initSpeakerState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.speakerName, \"error\");\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addSpeaker(currentItemInstance).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initSpeakerState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initSpeakerState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.speakerName, \"error\");\n        }\n      });\n    }\n  };\n\n  const modalplaceholdervalue = modalplaceholderLabelValue(\"speaker\");\n\n  const COLUMNS = [\n    {\n      Header: \"Speakers Name (English)\",\n      Footer: \"Speakers Name (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Speaker's Name (Kannada)\",\n      Footer: \"Speaker's Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  const DeleteSpeaker = () => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            \"speaker\",\n            DELETE_SPEAKER,\n            SPEAKER_ERROR,\n            \"speakerName\"\n          );\n          console.log(\"[DELETE-SPEAKER] response\", JSON.stringify(res));\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? \"SPEAKER\" : \"CHAIRMAN\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addSpeaker-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Speaker\" : \"Add Chairman\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={\n                  CUSTOMER === \"KLA\"\n                    ? \"DATATABLE OF ADDED SPEAKER'S\"\n                    : \"DATATABLE OF ADDED CHAIRMAN'S\"\n                }\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={speakersItems}\n                MetadataType=\"Speaker\"\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n      {/* <AddItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n      /> */}\n      <AddMetadataItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddSpeaker={AddSpeaker}\n        onDelete={DeleteSpeaker}\n        attribute=\"speaker\"\n        labelValues={modalplaceholdervalue}\n      />\n    </Fragment>\n  );\n};\n\nMetadataSectionCardSpeaker.propTypes = {};\n\nexport default MetadataSectionCardSpeaker;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addMember-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Member's Name (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Member's Name (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Member's Name (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Member's Name (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  \"Member\"\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddMetadataItemModal from \"../../modal/AddMemberModal\";\n\n//Imported Add Speaker Functions\n// import {\n//   AddSpeaker,\n//   initSpeakerState,\n// } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\n//import AddItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\nimport {\n  MEMBER_ERROR,\n  DELETE_MEMBER,\n  GET_MEMBER_ALL,\n} from \"../../../context/types\";\n\n//Import the Context\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  TABLE_HEADER_SPEAKER,\n  CUSTOMER,\n  ADD_EDIT_SPEAKER_TITLE_MODAL,\n  ADD_EDIT_CHAIRMAN_TITLE_MODAL,\n} from \"../../../constants/index\";\n\nconst MetadataParticipantsCard = () => {\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadataItem,\n    errors,\n\n    debateParticipants,\n    addSpeaker,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n  } = metadataContext;\n\n  // const [speaker, setSpeaker] = useState({\n  //   name_eng: \"\",\n  //   name_kan: \"\",\n  //   status: null,\n  //   id: null,\n  //   lastModifiedAt: \"\",\n  //   lastModifiedBy: \"  \",\n  // });\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, \"member\", \"memberName\");\n  };\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addMember-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.memberName, \"error\");\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.memberName, \"error\");\n        }\n      });\n    }\n  };\n\n  const DeleteMember = () => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            \"member\",\n            DELETE_MEMBER,\n            MEMBER_ERROR,\n            \"speakerName\"\n          );\n          console.log(\"[DELETE-SPEAKER] response\", JSON.stringify(res));\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Member's Name (English)\",\n      Footer: \"Member's Name (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Member's Name (Kannada)\",\n      Footer: \"Speaker's Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\"\n                  ? \"DEBATE PARTICIPANTS\"\n                  : \"DEBATE PARTICIPANTS\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addMember-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Member\" : \"Add Member\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName=\"DATATABLE OF ADDED DEBATE PARTICIPANTS\"\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={debateParticipants}\n                MetadataType=\"Member\"\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n      {/* <AddItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n      /> */}\n\n      <AddMetadataItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"ADD/EDIT Member Particiapnts\"\n            : \"ADD/EDIT Member Particiapnts\"\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddItem={(e) =>\n          AddEditItemFunc(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\")\n        }\n        onDelete={DeleteMember}\n      />\n    </Fragment>\n  );\n};\n\nMetadataParticipantsCard.propTypes = {};\n\nexport default MetadataParticipantsCard;\n","import React, { useEffect, useContext, useState, Fragment } from 'react';\n//import swal from \"sweetalert\";\n\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../../components/common/TextFieldGroup';\nimport SelectListGroup from '../../components/common/SelectListGroup';\n\nimport MetadataContext from '../../context/metadata/metadataContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: '',\n        name_kan: '',\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === 'speaker') {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === 'member') {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log('placehollder function metadatatype value', metadatatype);\n    }\n  };\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: 'Not-Live', value: false },\n    { label: 'Live', value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addDebateTitle-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Debates Title's (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Debates Title's (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Debates Title's (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Debates Title's (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: '10px',\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: '10px',\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? 'btn btn-primary disabled'\n                    : 'btn btn-primary '\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  'DebateTitle'\n                  //buttonValue\n                )}\n                style={{\n                  float: 'right',\n                  margin: '10px',\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddDebateTitleMetadataModal from \"../../modal/AddDebateTitleModal\";\n\nimport {\n  DEBATE_TITLE_ERROR,\n  DELETE_DEBATE_TITLE,\n  GET_DEBATE_TITLE_ALL,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataDebateTitleCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    debateTitles,\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n  } = metadataContext;\n\n  useEffect(() => {}, [debateTitles]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    type: \"debatetitle\",\n    getDispatch: GET_DEBATE_TITLE_ALL,\n    errorDispatch: DEBATE_TITLE_ERROR,\n    deleteDispatch: DELETE_DEBATE_TITLE,\n    errorname: \"debateTitle\",\n    modalname: \"addDebateTitle\",\n    tableheaderName: \"DATATABLE OF ADDED DEBATE TITLE'S\",\n    metadatatypeFilter: \"debateTitle\",\n    currentModalName: \"ADD/EDIT Debate Title's\",\n  };\n\n  const {\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    currentModalName,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteDebateTitle = (type, dispatchType, dispatchError, errorName) => {\n    console.log(`[DEBUG -DeleteDebateTitle-CARD] the value of type is ${type}`);\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Debates Title (English)\",\n      Footer: \"Debates Title (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Debates Title Name (Kannada)\",\n      Footer: \"Debates Title Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? \"Debate Titles\" : \"Debate Titles\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addDebateTitle-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Debate Title\" : \"Add Debate Title\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={debateTitles}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddDebateTitleMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? currentModalName : currentModalName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteDebateTitle(\n            type,\n            deleteDispatch,\n            //DELETE_DEBATE_TITLE,\n            //DEBATE_TITLE_ERROR,\n            errorDispatch,\n            errorname\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default MetadataDebateTitleCard;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddPortfolioMetadataModal from \"../../modal/AddPortfolio.component\";\n\nimport {\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n  DELETE_PORTFOLIO,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataPortfolioCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    portfolioItems,\n  } = metadataContext;\n\n  useEffect(() => {}, [portfolioItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Portfolio's\",\n    type: \"portfolio\",\n    getDispatch: GET_PORTFOLIO_ALL,\n    errorDispatch: PORTFOLIO_ERROR,\n    deleteDispatch: DELETE_PORTFOLIO,\n    errorname: \"portfolioMinistry\",\n    modalname: \"addPortfolio\",\n    tableheaderName: \"Datatable Of Added Ministry'S\",\n    metadatatypeFilter: \"portfolio\",\n    modalHeaderName: \"ADD/EDIT Ministries\",\n    modalLabelNames: {\n      english: \"Ministry Name (English)\",\n      kannada: \"Ministry Name (Kannada)\",\n    },\n    addButtonValue: \"Add Portfolio\",\n    modalButtonAttribute: \"Portfolio\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={portfolioItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddPortfolioMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataPortfolioCard;\n","import React, { useEffect, useContext, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddIssuesMetadataModal from \"../../modal/AddIssues.component\";\n\nimport {\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  DELETE_ISSUES,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataIssuesCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    issuesItems,\n  } = metadataContext;\n\n  //Changed the below useeffect for relevant variables\n\n  useEffect(() => {}, [issuesItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Issue's\",\n    type: \"issues\",\n    getDispatch: GET_ISSUES_ALL,\n    errorDispatch: ISSUES_ERROR,\n    deleteDispatch: DELETE_ISSUES,\n    errorname: \"issuesFields\",\n    modalname: \"addIssues\",\n    tableheaderName: \"Datatable Of Added Issues'S\",\n    metadatatypeFilter: \"issues\",\n    modalHeaderName: \"ADD/EDIT Issue's\",\n    modalLabelNames: {\n      english: \"Issues Name (English)\",\n      kannada: \"Issues Name (Kannada)\",\n    },\n    addButtonValue: \"Add Issues\",\n    modalButtonAttribute: \"Issues\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={issuesItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddIssuesMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataIssuesCard;\n","import React, { useEffect, useContext, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddTagsMetadataModal from \"../../modal/AddTags.Component\";\n\nimport { GET_TAGS_ALL, TAGS_ERROR, DELETE_TAGS } from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataTagsCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    tagsItems,\n  } = metadataContext;\n\n  //Changed the below useeffect for relevant variables\n\n  useEffect(() => {}, [tagsItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Tag's\",\n    type: \"tags\",\n    getDispatch: GET_TAGS_ALL,\n    errorDispatch: TAGS_ERROR,\n    deleteDispatch: DELETE_TAGS,\n    errorname: \"tagsFields\",\n    modalname: \"addTags\",\n    tableheaderName: \"Datatable Of Added Tag's\",\n    metadatatypeFilter: \"tags\",\n    modalHeaderName: \"ADD/EDIT Tag's\",\n    modalLabelNames: {\n      english: \"Tags Name (English)\",\n      kannada: \"Tags Name (Kannada)\",\n    },\n    addButtonValue: \"Add Tags\",\n    modalButtonAttribute: \"Tags\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={tagsItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddTagsMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataTagsCard;\n","import React, { useEffect, useContext } from \"react\";\n\nimport BreadCrumbs from \"../../utils/Breadcrumbs\";\nimport MetadataSpeakerSection from \"./metadatasections/MetadataSpeakersCard.component\";\nimport MetadataParticipantsSection from \"./metadatasections/MetadataParticiapantsCard.component\";\nimport MetadataDebateTitleCard from \"./metadatasections/MetadataDebateTitleCard.component\";\nimport MetadataPortfolioCard from \"./metadatasections/MetadataPortfoliosCard.component\";\nimport MetadataIssuesCard from \"./metadatasections/MetadataIssuesCard.component\";\nimport MetadataTagsCard from \"./metadatasections/MetadataTagsCard\";\n\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n} from \"../../context/types\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst MetadataIndex = () => {\n  const metadataContext = useContext(MetadataContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    getSpeakerItems,\n    getItems,\n    speakersItems,\n    debateParticipants,\n  } = metadataContext;\n\n  useEffect(() => {\n    getSpeakerItems();\n    getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n    getItems(\n      \"debatetitle\",\n      GET_DEBATE_TITLE_ALL,\n      DEBATE_TITLE_ERROR,\n      \"debateTitle\"\n    );\n    //Get Ministry Portfolio\n    getItems(\n      \"portfolio\",\n      GET_PORTFOLIO_ALL,\n      PORTFOLIO_ERROR,\n      \"portfolioMinistry\"\n    );\n    //Get Issues\n    getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n\n    // Get Tags\n    getItems(\"tags\", GET_TAGS_ALL, TAGS_ERROR, \"tagsFields\");\n  }, []);\n\n  return (\n    <div className=\"content-wrapper\">\n      <BreadCrumbs />\n      <MetadataSpeakerSection />\n      <MetadataParticipantsSection />\n      <MetadataDebateTitleCard />\n      <MetadataPortfolioCard />\n      <MetadataIssuesCard />\n      <MetadataTagsCard />\n    </div>\n  );\n};\n\nexport default MetadataIndex;\n","import React, { useEffect, useContext, useState, Fragment } from 'react';\n//import swal from \"sweetalert\";\n\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../../components/common/TextFieldGroup';\nimport SelectListGroup from '../../components/common/SelectListGroup';\n\nimport MetadataContext from '../../context/metadata/metadataContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  setCurrentItemsNull,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {}, []);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === 'speaker') {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === 'member') {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log('placehollder function metadatatype value', metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: 'Metadata', value: false },\n    { label: 'Admin', value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"admin-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={setCurrentItemsNull}\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Name of the user\"\n                  name=\"name\"\n                  onChange={onChange}\n                  error={false}\n                  id=\"name\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Name of the User\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Enter the email\"\n                name=\"email\"\n                onChange={onChange}\n                error={false}\n                id=\"email\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Email\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"password\"\n                name=\"password\"\n                onChange={onChange}\n                error={false}\n                id=\"password\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Enter Password\"\n                formWidth=\"col-md\"\n                required={true}\n                type=\"password\"\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Password\"\n                name=\"password1\"\n                onChange={onChange}\n                error={false}\n                id=\"password1\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Re Enter Password\"\n                formWidth=\"col-md\"\n                required={true}\n                type=\"password\"\n              />\n              <SelectListGroup\n                placeholder=\"Admin Status\"\n                name=\"admin_status\"\n                value=\"false\"\n                onChange={onChange}\n                error={false}\n                id=\"admin_status\"\n                labelText=\"Admin Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Enter Phonenumber\"\n                name=\"phonenumber\"\n                onChange={onChange}\n                error={false}\n                id=\"phonenumber\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Phone Number\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n            </div>\n            <div className=\"justify-content-between\">\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? 'btn btn-primary disabled'\n                    : 'btn btn-primary '\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value=\"Submit\"\n                style={{\n                  float: 'right',\n                  margin: '10px',\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\n// MetadataSectionModal.propTypes = {\n//   modalTitle: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n//   //speaker: PropTypes.object.isRequired,\n//   // currentSpeaker: PropTypes.object.isRequired,\n//   loading: PropTypes.object.isRequired,\n//   setLoading: PropTypes.func.isRequired,\n//   AddItem: PropTypes.func.isRequired,\n//   setCurrentItem: PropTypes.func.isRequired,\n//   currentItem: PropTypes.object.isRequired,\n//   onDelete: PropTypes.func.isRequired,\n//   attribute: PropTypes.string.isRequired,\n//   //  labelValues: PropTypes.object.isRequired,\n// };\n\nexport default MetadataSectionModal;\n","import { createContext } from 'react';\n\nconst adminContext = createContext();\n\nexport default adminContext;\n","import React, { useContext, useState, useEffect } from 'react';\nimport swal from 'sweetalert';\n\nimport { SearchTableNew } from '../../../utils/SearchTableNew.component';\nimport AddUsersAdminModal from '../../modal/AddUsersAdminModal';\n\nimport {\n  GET_ADMIN_USERS,\n  POST_NEW_ADMIN_USERS,\n  DELETE_NEW_ADMIN_USERS,\n  ADD_USER_ERROR,\n  REMOVE_USER_ERROR,\n} from '../../../context/types';\n\nimport AdminContext from '../../../context/admin/adminContext';\n\nimport { CUSTOMER } from '../../../constants/index';\n\n// Import Modal Utility Functions\n\nimport {\n  getStatusBadge,\n  getAdminStatusBadge,\n} from '../../../utils/admin/admindataModalsUtils';\n\nconst MetadataTagsCard = () => {\n  const adminContext = useContext(AdminContext);\n\n  const {\n    adminUsers,\n    logData,\n    currentUser,\n    errors,\n    getUsersAdmin,\n    registerUser,\n    deleteUser,\n    clearErrors,\n  } = adminContext;\n  const [adminusers, setAdminUsers] = useState([]);\n  useEffect(() => {\n    getUsersAdmin();\n  }, []);\n  useEffect(() => {\n    setAdminUsers(adminUsers);\n    // console.log(`use effect add user the value ${adminUsers}`);\n  }, [adminUsers]);\n\n  //Changed the below useeffect for relevant variables\n\n  const [currentItem, setCurrentItem] = useState({\n    name: '',\n    admin_status: false,\n    email: '',\n    password: '',\n    password1: '',\n    phonenumber: '',\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: 'Add Users/Admin',\n    type: 'admin-users',\n    getDispatch: GET_ADMIN_USERS,\n    errorDispatch: ADD_USER_ERROR,\n    deleteDispatch: DELETE_NEW_ADMIN_USERS,\n    errorname: 'errors',\n    modalname: 'addUserAdmin',\n    tableheaderName: \"Datatable Of Added Users's\",\n    metadatatypeFilter: 'users',\n    modalHeaderName: \"ADD/EDIT Users's\",\n\n    addButtonValue: 'Add Users',\n    modalButtonAttribute: 'Users',\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name: '',\n      admin_status: false,\n      email: '',\n      password: '',\n      password1: '',\n      phonenumber: '',\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const setLoadingModal = () => {\n    setLoading({\n      isModalOpen: true,\n      buttonLoading: true,\n    });\n  };\n\n  const removeLoadingModal = () => {\n    setLoading({\n      isModalOpen: true,\n      buttonLoading: false,\n    });\n  };\n\n  const AddEditItemFunc = async () => {\n    setLoadingModal();\n\n    // Register the user\n    try {\n      const res = await registerUser(currentItem);\n      if (res.msg === 'success') {\n        removeLoadingModal();\n\n        swal(`${res.user.email} has been registered`, {\n          icon: 'success',\n        });\n      } else {\n        removeLoadingModal();\n        // swal.fire(`Error in User`, getErrorDetails(error), `error`);\n        const errorText = getErrorDetails(res);\n\n        swal(`ERROR ${errorText}`, {\n          icon: 'error',\n        });\n      }\n      // console.info(`[DEBUG] from AddUser ${JSON.stringify(res)}`);\n    } catch (error) {}\n  };\n\n  function getErrorDetails(err) {\n    const errElements = ['msg', 'email', 'name', 'password', 'password1'];\n    let returnString = [];\n    for (const item in err) {\n      if (errElements.includes(item)) {\n        returnString.push(err[item]);\n      } else {\n        returnString.push('No errors found');\n      }\n    }\n    let errorText = returnString.join(' ');\n    return errorText;\n  }\n\n  const DeleteItemUser = (id, name) => {\n    // console.info(`[DEBUG] from ADD USER delete item ${name}`);\n    // let user = adminusers.filter((val) => val._id === id);\n\n    swal({\n      title: `Are you sure you want to delete ${name} ?`,\n      text: 'Once deleted, you will not be able to recover this Account!',\n      icon: 'warning',\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteUser(id);\n\n          // console.info(\n          //   `[DEBUG] From Delete Item User ${JSON.stringify(res.data)}`\n          // );\n\n          if (res.data.msg === 'success') {\n            swal(`${name}  has been deleted !!!`, {\n              icon: 'success',\n            });\n          } else {\n            swal(\n              `Poof! ${name} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: 'error',\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${name}  is safe!`);\n      }\n    });\n  };\n\n  const getAdminTableItems = (_id, name) => {\n    // const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => DeleteItemUser(_id, name)}\n      >\n        Delete\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `e-Mail`,\n      Footer: `e-Mail`,\n      accessor: 'email',\n      sticky: 'left',\n    },\n\n    {\n      Header: `User Name`,\n      Footer: `User Name`,\n      accessor: 'name',\n      sticky: 'left',\n    },\n    {\n      Header: 'Status',\n      Footer: 'Status',\n      accessor: 'admin_status',\n      Cell: ({ value }) => {\n        return getAdminStatusBadge(value);\n      },\n    },\n    {\n      Header: 'Actions',\n      Footer: 'Actions',\n      accessor: '_id',\n      Cell: (props) => {\n        // console.log(props);\n        return getAdminTableItems(props.value, props.cell.row.original.name);\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === 'KLA'\n                ? 'card card-outline card-success'\n                : 'card card-outline card-danger'\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: 'white' }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === 'KLA' ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === 'KLA'\n                      ? 'btn btn-outline-success mr-2'\n                      : 'btn btn-outline-danger mr-2'\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#admin-modal-metadata`}\n                  onClick={() => {\n                    console.log('The Add User Called !!!');\n                  }}\n                >\n                  {CUSTOMER === 'KLA' ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={adminUsers}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddUsersAdminModal\n        modalTitle={CUSTOMER === 'KLA' ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n\n        loading={loading}\n        //setSpeaker={setSpeaker}\n\n        setLoading={setLoading}\n        AddItem={(e) => AddEditItemFunc()}\n        setCurrentItemsNull={(e) => {\n          initState();\n        }}\n      />\n    </>\n  );\n};\n\nexport default MetadataTagsCard;\n","import React from 'react';\n\nexport const getAdminStatusBadge = (status) => {\n  if (status) {\n    return <span className=\"badge badge-success\">Admin</span>;\n  } else {\n    return <span className=\"badge badge-danger\">Metadata</span>;\n  }\n};\n\nexport const getStatusBadge = (status) => {\n  if (status) {\n    return <span className=\"badge badge-success\">Live</span>;\n  } else {\n    return <span className=\"badge badge-danger\">Not Live</span>;\n  }\n};\n\nexport const getIPBadge = (ip) => {\n  return <span className=\"badge badge-danger\">{ip}</span>;\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport swal from 'sweetalert';\n\nimport { SearchTableNew } from '../../../utils/SearchTableNew.component';\nimport AddUsersAdminModal from '../../modal/AddUsersAdminModal';\n\nimport {\n  GET_ADMIN_USERS,\n  POST_NEW_ADMIN_USERS,\n  DELETE_NEW_ADMIN_USERS,\n  ADD_USER_ERROR,\n  REMOVE_USER_ERROR,\n} from '../../../context/types';\n\nimport AdminContext from '../../../context/admin/adminContext';\n\nimport { CUSTOMER } from '../../../constants/index';\n\n// Import Modal Utility Functions\n\nimport {\n  getStatusBadge,\n  getAdminStatusBadge,\n  getIPBadge,\n} from '../../../utils/admin/admindataModalsUtils';\n\nconst MetadataTagsCard = () => {\n  const adminContext = useContext(AdminContext);\n\n  const { logData, getUsersLogs, removeUsersLogs } = adminContext;\n  const [adminusers, setAdminUsers] = useState([]);\n  useEffect(() => {\n    getUsersLogs();\n    return () => {\n      removeUsersLogs();\n    };\n  }, []);\n  useEffect(() => {\n    setLogs(logData);\n    // console.log(`use effect add user the value ${adminUsers}`);\n  }, [logData]);\n\n  //Changed the below useeffect for relevant variables\n\n  const [logsdata, setLogs] = useState([]);\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: 'User Logs Data',\n    type: 'admin-users',\n\n    errorname: 'errors',\n\n    tableheaderName: 'Datatable Of Users Logs',\n    metadatatypeFilter: 'logs',\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const setLoadingModal = () => {\n    setLoading({\n      isModalOpen: true,\n      buttonLoading: true,\n    });\n  };\n\n  const removeLoadingModal = () => {\n    setLoading({\n      isModalOpen: true,\n      buttonLoading: false,\n    });\n  };\n\n  const COLUMNS = [\n    {\n      Header: `Log Date`,\n      Footer: `Log Date`,\n      accessor: 'logDate',\n      sticky: 'left',\n    },\n\n    {\n      Header: `User Name`,\n      Footer: `User Name`,\n      accessor: 'username',\n      sticky: 'left',\n    },\n    {\n      Header: 'IP',\n      Footer: 'IP',\n      accessor: 'ip',\n      Cell: ({ value }) => {\n        return getIPBadge(value);\n      },\n    },\n    {\n      Header: 'URL Path',\n      Footer: 'URL Path',\n      accessor: 'path',\n      sticky: 'left',\n    },\n    {\n      Header: 'Request Method',\n      Footer: 'Request Method',\n      accessor: 'requestMethod',\n      sticky: 'left',\n    },\n    {\n      Header: 'User Agent',\n      Footer: 'User Agent',\n      accessor: 'userAgent',\n      sticky: 'left',\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === 'KLA'\n                ? 'card card-outline card-success'\n                : 'card card-outline card-danger'\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: 'white' }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === 'KLA' ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={logsdata}\n                MetadataType={metadatatypeFilter}\n                sear\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default MetadataTagsCard;\n","import React from 'react';\n\nimport Breadcrumbs from '../../utils/Breadcrumbs';\n\nimport AddUserTable from './AddUsers/AddUser';\nimport AddUserLogs from './UserLogs/UserLogs--component';\n\nfunction AdminLandingPage() {\n  return (\n    <div className=\"content-wrapper\">\n      <Breadcrumbs />\n      <AddUserTable />\n      <AddUserLogs />\n    </div>\n  );\n}\n\nexport default AdminLandingPage;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n  //console.log(\"Is Authenticated\", isAuthenticated);\n  //console.log(\"loading\", loading);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        //!isAuthenticated && !loading ? (\n        !isAuthenticated ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n  //console.log(\"Is Authenticated\", isAuthenticated);\n  //console.log(\"loading\", loading);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        //!isAuthenticated && !loading ? (\n        isAuthenticated ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  ADD_BOOK_STRUCT,\n  DELETE_BOOK_STRUCT,\n  CLEAR_BOOK,\n  GET_BOOK_STRUCT_ALL,\n  GET_CURRENT_BOOK_STRUCTURE,\n  BOOK_STRUCT_ERROR,\n  GET_CURRENT_BOOK_STRUCTURE_ERROR,\n  GET_ANNEXURE_FOR_BOOK,\n  ANNEXURE_ERROR,\n  DELETE_ANNEXURE_ID,\n  GET_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_METADATA_SECTION,\n  METADATA_ERROR,\n  GET_METADATA_FOR_BOOK,\n  DELETE_METADATA_ID,\n  GET_CURRENT_METADATA,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_BOOK_STRUCT_ALL:\n      return {\n        ...state,\n        //Change this after refactoring\n        bookSummaryTable: [...action.payload],\n      };\n\n    case GET_CURRENT_BOOK_STRUCTURE:\n      return {\n        ...state,\n        currentBookStructure: action.payload,\n      };\n\n    // Error\n    case BOOK_STRUCT_ERROR:\n    case GET_CURRENT_BOOK_STRUCTURE_ERROR:\n    case ANNEXURE_ERROR:\n    case METADATA_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case GET_ANNEXURE_FOR_BOOK:\n      return {\n        ...state,\n        annexureItems: [...action.payload],\n      };\n\n    case DELETE_ANNEXURE_ID:\n      return {\n        ...state,\n        annexureItems: state.annexureItems.filter(\n          (annexure) => annexure._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_ANNEXURE:\n      return {\n        ...state,\n        currentAnnexure: action.payload[0],\n      };\n\n    case CLEAR_CURRENT_ANNEXURE:\n      return {\n        ...state,\n        currentAnnexure: {},\n      };\n\n    // Metadata Section Action\n\n    case CLEAR_CURRENT_METADATA_SECTION:\n      return {\n        ...state,\n        currentMetadata: {},\n      };\n\n    case GET_METADATA_FOR_BOOK:\n      return {\n        ...state,\n        sectionalMetadataItems: [...action.payload],\n      };\n\n    case DELETE_METADATA_ID:\n      return {\n        ...state,\n        sectionalMetadataItems: state.sectionalMetadataItems.filter(\n          (sectionmetadata) => sectionmetadata._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_METADATA:\n      return {\n        ...state,\n        currentMetadata: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport BookContext from \"./bookContext\";\nimport bookReducer from \"./bookReducer\";\n\nimport {\n  ADD_BOOK_STRUCT,\n  DELETE_BOOK_STRUCT,\n  CLEAR_BOOK,\n  GET_BOOK_STRUCT_ALL,\n  BOOK_STRUCT_ERROR,\n  GET_CURRENT_BOOK_STRUCTURE,\n  GET_CURRENT_BOOK_STRUCTURE_ERROR,\n  GET_ANNEXURE_FOR_BOOK,\n  ANNEXURE_ERROR,\n  DELETE_ANNEXURE_ID,\n  GET_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_ANNEXURE,\n  GET_METADATA_FOR_BOOK,\n  METADATA_ERROR,\n  DELETE_METADATA_ID,\n  GET_CURRENT_METADATA,\n  CLEAR_CURRENT_METADATA_SECTION,\n} from \"../types\";\n\nconst BookState = (props) => {\n  const initialState = {\n    // bookSummaryTable: [\n    //   {\n    //     bookId: 1,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 134,\n    //     sectionCount: 145,\n    //     status: \"Book Created\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 2,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 14,\n    //     pageCount: 134,\n    //     sectionCount: 144,\n    //     status: \"Metadata Completed\",\n    //     bindingStatus: \"Binded\",\n    //   },\n    //   {\n    //     bookId: 3,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 185,\n    //     sectionCount: 165,\n    //     status: \"OCR Process\",\n    //     bindingStatus: \"Binded\",\n    //   },\n    //   {\n    //     bookId: 4,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 185,\n    //     sectionCount: 132,\n    //     status: \"Indexing\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 5,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 146,\n    //     sectionCount: 175,\n    //     status: \"Book Live\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 6,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 146,\n    //     sectionCount: 175,\n    //     status: \"Book Error\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    // ],\n\n    bookSummaryTable: [],\n\n    uploadfilePath: \"\",\n    currentBookStructure: [],\n    loading: false,\n    // annexureItems: [  {\n    //   AnnexureId: 1,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 2,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 3,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 4,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 5,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 6,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 7,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },],\n    annexureItems: [],\n    sectionalMetadataItems: [],\n    currentMetadata: {},\n    currentAnnexure: {},\n\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(bookReducer, initialState);\n\n  //get Book Struct\n\n  const getBookStruct = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.get(\"/api/structbook/all\", config);\n\n      // console.log(\"[DEBUG-GETBOOK] \", res);\n\n      dispatch({ type: GET_BOOK_STRUCT_ALL, payload: res.data });\n      return res.data;\n    } catch (error) {\n      dispatch({\n        type: BOOK_STRUCT_ERROR,\n        payload: error.response.data.addbookStruct,\n      });\n      return error;\n    }\n  };\n\n  // Add Book Structure\n\n  const addBookStruct = async (bookStruct) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.post(\"/api/structbook/new\", bookStruct, config);\n\n      getBookStruct();\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: BOOK_STRUCT_ERROR,\n        payload: error.response.data.addbookStruct,\n      });\n      return error;\n    }\n  };\n\n  // Delete Book Structure\n\n  const deleteBookStruct = (id) => {\n    // Call the url with book structures Object\n    dispatch({\n      type: DELETE_BOOK_STRUCT,\n      payload: id,\n    });\n  };\n\n  const deleteItem = (bookId) => {};\n\n  // Re Index Book\n\n  const reIndexBook = (bookId) => {};\n\n  //  get Current book Item in currentBookStructure\n\n  const getCurrentBook = async (id) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/structbook/${id}`, config);\n\n      dispatch({\n        type: GET_CURRENT_BOOK_STRUCTURE,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_CURRENT_BOOK_STRUCTURE_ERROR,\n        payload: error.response.data.structbook,\n      });\n    }\n  };\n\n  // Annexure Actions //\n  const clearcurrentAnnexure = () => {\n    dispatch({\n      type: CLEAR_CURRENT_ANNEXURE,\n    });\n  };\n\n  const getAnnexureItems = async (bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/annexure/new/${bookId}`, config);\n\n      dispatch({\n        type: GET_ANNEXURE_FOR_BOOK,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n    }\n  };\n  // Adding/Editing  Annexure\n  const addAnnexure = async (annexure, bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.post(\n        `/api/annexure/new/${bookId}`,\n        annexure,\n        config\n      );\n\n      getAnnexureItems(bookId);\n      //Clear the current Annexure\n      clearcurrentAnnexure();\n      return res.data.msg;\n    } catch (error) {\n      clearcurrentAnnexure();\n\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n      return error;\n    }\n  };\n\n  const editAnnexure = async (annexureId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/annexure/${annexureId}`, config);\n\n      //getBookStruct();\n      dispatch({\n        type: GET_CURRENT_ANNEXURE,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n      return error;\n    }\n  };\n\n  const deleteAnnexure = async (annexureid, bookid) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.delete(\n        `/api/annexure/${bookid}/${annexureid}`,\n        config\n      );\n      dispatch({\n        type: DELETE_ANNEXURE_ID,\n        payload: annexureid,\n      });\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n\n      return error.response;\n    }\n  };\n\n  //////////////////////////// Sectional Metadata Actions  //////////////////////\n\n  // const clearcurrentMetadata = () => {\n  //   dispatch({\n  //     type: CLEAR_CURRENT_METADATA,\n  //   });\n  // };\n\n  const getMetadataItems = async (bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // console.info(\"[DEBUG] from getMetadataItems value of bookid\", bookId);\n\n    try {\n      const res = await axios.get(`/api/sectionbook/get/${bookId}`, config);\n      // console.log(\"[DEBUG] get MetDataItem \", res.data);\n      dispatch({\n        type: GET_METADATA_FOR_BOOK,\n        payload: res.data,\n      });\n    } catch (error) {\n      // console.info(\"[DEBUG ERROR] get MetDataItem  error\", error);\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n    }\n  };\n  // Adding/Editing  Sectional Metadata\n  const addSection = async (section, bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //console.info(\"[DEBUG] Current Added Section\", section);\n\n    try {\n      const res = await axios.post(`/api/sectionbook/new`, section, config);\n\n      getMetadataItems(section.book_id);\n      //Clear the current Annexure\n      clearcurrentMetadataSection();\n      return res.data.msg;\n    } catch (error) {\n      clearcurrentMetadataSection();\n\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n      return error;\n    }\n  };\n  const clearcurrentMetadataSection = () => {\n    dispatch({\n      type: CLEAR_CURRENT_METADATA_SECTION,\n    });\n  };\n  const editSection = async (sectionId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/sectionbook/${sectionId}`, config);\n\n      //getBookStruct();\n      dispatch({\n        type: GET_CURRENT_METADATA,\n        payload: res.data,\n      });\n    } catch (error) {\n      //console.info(\"[DEBUG Edit Section Book State] \", error);\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n      return error;\n    }\n  };\n\n  const deleteSection = async (bookid, sectionid) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.delete(\n        `/api/sectionbook/${bookid}/${sectionid}`,\n        config\n      );\n      dispatch({\n        type: DELETE_METADATA_ID,\n        payload: sectionid,\n      });\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n\n      return error.response;\n    }\n  };\n\n  return (\n    <BookContext.Provider\n      value={{\n        bookSummaryTable: state.bookSummaryTable,\n\n        uploadfilePath: state.uploadfilePath,\n\n        loading: state.loading,\n\n        errors: state.errors,\n        currentBookStructure: state.currentBookStructure,\n        currentAnnexure: state.currentAnnexure,\n        annexureItems: state.annexureItems,\n        sectionalMetadataItems: state.sectionalMetadataItems,\n        currentMetadata: state.currentMetadata,\n\n        addBookStruct,\n        deleteItem,\n        reIndexBook,\n        getBookStruct,\n        getCurrentBook,\n        getAnnexureItems,\n        addAnnexure,\n        editAnnexure,\n        deleteAnnexure,\n        clearcurrentAnnexure,\n        getMetadataItems,\n        editSection,\n        deleteSection,\n        addSection,\n        clearcurrentMetadataSection,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      setAuthToken(localStorage.getItem(\"token\"));\n      // console.info(\n      //   \"[DEBUG Auth Reducer Check Token]\",\n      //   localStorage.getItem(\"token\")\n      // );\n      // console.info(\n      //   \"[DEBUG Auth Reducer jwt Check Token]\",\n      //   localStorage.getItem(\"jwtToken\")\n      // );\n\n      return {\n        ...state,\n        ...action.payload, //Why action.payload has been passed token key is in payload\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      //console.info(\"[DEBUG] Auth Reducer \", typeof action.payload);\n      setAuthToken(\"\");\n      let errorValue = action.payload ? action.payload : {};\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        errors: errorValue,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\n\nimport axios from 'axios';\n\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  CLEAR_ERRORS,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Auth Actions\n\n  //Load User\n\n  const loadUser = async () => {\n    //@todo - load token into global headers\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    } else {\n      console.info('[DEBUG] from load user action the token dont exist');\n    }\n\n    try {\n      const res = await axios.get('/api/users/current');\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //Register User\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users/register', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  //Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users/login', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      //loadUser();\n      return res.data;\n    } catch (err) {\n      // console.info('[DEBUG Login] ', JSON.stringify(err));\n      if (Object.keys(err).length !== 0) {\n        dispatch({\n          type: LOGIN_FAIL,\n          payload: err.response.data,\n          //payload: err.response.data.msg,\n        });\n      }\n    }\n  };\n\n  //Logout\n\n  const logout = () => dispatch({ type: LOGOUT });\n\n  //Clear Errors\n  //Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        errors: state.errors,\n        register,\n        clearErrors,\n        login,\n        loadUser,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\n\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = (props) => {\n  const intialState = [];\n\n  //Creating Hooks\n  const [state, dispatch] = useReducer(alertReducer, intialState);\n\n  //Set Alert\n  const setAlert = (msg, type, timeout) => {\n    const id = uuid;\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout((id) => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider value={{ alerts: state, setAlert }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import {\n  ADD_SPEAKER,\n  SPEAKER_ERROR,\n  GET_SPEAKER_ALL,\n  CLEAR_ERRORS,\n  GET_CURRENT_ITEM,\n  GET_CURRENT_ITEM_ERROR,\n  SET_CURRENT_ITEM_NULL,\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  ADD_MEMBER,\n  DELETE_MEMBER,\n  DELETE_SPEAKER,\n  GET_DEBATE_TITLE_ALL,\n  DELETE_DEBATE_TITLE,\n  DEBATE_TITLE_ERROR,\n  GET_PORTFOLIO_ALL,\n  DELETE_PORTFOLIO,\n  PORTFOLIO_ERROR,\n  ISSUES_ERROR,\n  TAGS_ERROR,\n  ADD_ISSUES,\n  GET_ISSUES_ALL,\n  DELETE_ISSUES,\n  ADD_TAGS,\n  GET_TAGS_ALL,\n  DELETE_TAGS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    //Spekars Actions\n    case GET_SPEAKER_ALL:\n      return {\n        ...state,\n        speakersItems: [...action.payload],\n      };\n    case ADD_SPEAKER:\n      return {\n        ...state,\n      };\n\n    case DELETE_SPEAKER:\n      return {\n        ...state,\n        speakersItems: state.speakersItems.filter(\n          (speaker) => speaker._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_ITEM:\n      return {\n        ...state,\n        currentMetadataItem: action.payload,\n      };\n\n    case SET_CURRENT_ITEM_NULL:\n      return {\n        ...state,\n        currentMetadataItem: null,\n      };\n\n    case SPEAKER_ERROR:\n    case GET_CURRENT_ITEM_ERROR:\n    case MEMBER_ERROR:\n    case DEBATE_TITLE_ERROR:\n    case PORTFOLIO_ERROR:\n    case ISSUES_ERROR:\n    case TAGS_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        errors: {},\n      };\n\n    //Member Actions\n    case GET_MEMBER_ALL:\n      return {\n        ...state,\n        debateParticipants: [...action.payload],\n      };\n    case DELETE_MEMBER:\n      return {\n        ...state,\n        debateParticipants: state.debateParticipants.filter(\n          (member) => member._id !== action.payload\n        ),\n      };\n\n    //Debate Title Actions\n    case GET_DEBATE_TITLE_ALL:\n      return {\n        ...state,\n        debateTitles: [...action.payload],\n      };\n    case DELETE_DEBATE_TITLE:\n      return {\n        ...state,\n        debateTitles: state.debateTitles.filter(\n          (debatetitle) => debatetitle._id !== action.payload\n        ),\n      };\n\n    // Portfolio Actions\n\n    case GET_PORTFOLIO_ALL:\n      return {\n        ...state,\n        portfolioItems: [...action.payload],\n      };\n    case DELETE_PORTFOLIO:\n      return {\n        ...state,\n        portfolioItems: state.portfolioItems.filter(\n          (portfolio) => portfolio._id !== action.payload\n        ),\n      };\n\n    // Issues  Actions\n\n    case GET_ISSUES_ALL:\n      return {\n        ...state,\n        issuesItems: [...action.payload],\n      };\n    case DELETE_ISSUES:\n      return {\n        ...state,\n        issuesItems: state.issuesItems.filter(\n          (issues) => issues._id !== action.payload\n        ),\n      };\n\n    // Tags  Actions\n\n    case GET_TAGS_ALL:\n      return {\n        ...state,\n        tagsItems: [...action.payload],\n      };\n    case DELETE_TAGS:\n      return {\n        ...state,\n        tagsItems: state.tagsItems.filter(\n          (tags) => tags._id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport MetadataContext from './metadataContext';\nimport metadataReducer from './metadataReducer';\n\nimport {\n  ADD_SPEAKER,\n  SPEAKER_ERROR,\n  GET_SPEAKER_ALL,\n  CLEAR_ERRORS,\n  GET_CURRENT_ITEM,\n  GET_CURRENT_ITEM_ERROR,\n  SET_CURRENT_ITEM_NULL,\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n} from '../types';\n\nconst MetadataState = (props) => {\n  const initialState = {\n    // speakersItems: [\n    //   {\n    //     nameEnglish: \"Kagodu Thimmappa\",\n    //     nameKannada: \"ಕಾಗೋಡು ತಿಮ್ಮಪ್ಪ\",\n    //     status: true,\n    //     id: 1,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Vishveshwar Hegde Kageri\",\n    //     nameKannada: \"ವಿಶ್ವೇಶ್ವರ ಹೆಗಡೆ ಕಾಗೇರಿ\",\n    //     status: true,\n    //     id: 2,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Vaibhav Sanil\",\n    //     nameKannada: \"ವೈಭವ್ ಸನಿಲ್\",\n    //     status: false,\n    //     id: 3,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Madhavraj A\",\n    //     nameKannada: \"ಮಾಧವರಾಜ್\",\n    //     status: false,\n\n    //     id: 4,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    // ],\n    speakersItems: [],\n    currentSpeaker: null,\n    debateParticipants: [],\n    debateTitles: [],\n    portfolioItems: [],\n    issuesItems: [],\n    tagsItems: [],\n    currentDebateParticipants: null,\n    loading: false,\n    currentMetadataItem: null,\n\n    errors: {},\n    alerts: [],\n  };\n\n  const [state, dispatch] = useReducer(metadataReducer, initialState);\n\n  //////////////////////////////   Actions //////////////////////////////////////\n\n  /******************************** SPEAKER ACTIONS *****************************/\n\n  const clearErrors = async () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  // Get Speaker Item\n\n  //Get Speaker Items\n  const getSpeakerItems = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.get('/api/metadata/speaker/all', config);\n\n      dispatch({ type: GET_SPEAKER_ALL, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: SPEAKER_ERROR,\n        payload: error.response.speakerName,\n      });\n    }\n  };\n\n  // Add Speaker\n  const addSpeaker = async (speaker) => {\n    //setCurrentItemToNull();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.post(\n        '/api/metadata/speaker/new',\n        speaker,\n        config\n      );\n      getSpeakerItems();\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: SPEAKER_ERROR,\n        payload: error.response.data.speakerName,\n      });\n      return error;\n    }\n  };\n\n  // //    EDIT  ITEM General Prurpose Function\n  // const editItem = async (id, metadataType) => {\n  //   console.log(`/api/metadata/${metadataType}/${id}/get`);\n  //   //Set the current speaker item to the current speaker item\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.get(\n  //       `/api/metadata/${metadataType}/${id}/get`,\n  //       config\n  //     );\n  //     console.log(res.data);\n  //     dispatch({\n  //       type: GET_CURRENT_ITEM,\n  //       payload: res.data,\n  //     });\n  //     return res.data;\n  //   } catch (error) {\n  //     // console.log(\"Error Object editItem Action\", error.response);\n  //     dispatch({\n  //       type: GET_CURRENT_ITEM_ERROR,\n  //       payload: error.response.data.speakerName,\n  //     });\n  //     return error;\n  //   }\n  // };\n  // https://medium.com/javascript-in-plain-english/you-definitely-should-be-using-suspense-in-react-code-splitting-and-preloading-b9cbe393a95\n  //https://stackoverflow.com/questions/57221878/react-classname-naming-convention\n\n  /******************************** DEBATE PARTICIPANT ACTIONS *****************************/\n\n  //Get Speaker Items\n  const getItems = async (\n    metadataType,\n    dispatchType,\n    dispatchError,\n    errorName\n  ) => {\n    // /////// MEMBER //////\n    // cases GET_MEMBER_ALL\n    // case ERROR MEMEBER_ERROR\n    // errorName = memberName\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.get(`/api/metadata/${metadataType}/all`, config);\n\n      dispatch({ type: dispatchType, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: dispatchError,\n        // payload: error.response.data[`${errorName}`],\n        payload: error.response,\n      });\n    }\n  };\n\n  // General Add Item Actions\n  const addItem = async (\n    addItemFromObject,\n    metadataType,\n    getTypeReducer, //Call for type in get Action\n    //errorTypeReducer, // Call for Error type in get aC\n\n    dispatchError,\n    errorName\n  ) => {\n    //setCurrentItemToNull();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.post(\n        `/api/metadata/${metadataType}/new`,\n        addItemFromObject,\n        config\n      );\n\n      if (metadataType === 'member') {\n        getItems(metadataType, getTypeReducer, dispatchError, 'memberName');\n      } else if (metadataType === 'debatetitle') {\n        getItems(metadataType, getTypeReducer, dispatchError, 'debateTitle');\n      } else if (metadataType === 'portfolio') {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      } else if (metadataType === 'issues') {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      } else if (metadataType === 'tags') {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      }\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: dispatchError,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  //    EDIT  ITEM General Prurpose Function\n  const editItem = async (\n    id,\n    metadataType,\n\n    errorName\n  ) => {\n    // console.log(`/api/metadata/${metadataType}/${id}/get`);\n    //Set the current speaker item to the current speaker item\n    setCurrentItemToNull();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.get(\n        `/api/metadata/${metadataType}/${id}/get`,\n        config\n      );\n      dispatch({\n        type: GET_CURRENT_ITEM,\n        payload: res.data,\n      });\n      return res.data;\n    } catch (error) {\n      // console.log(\"Error Object editItem Action\", error.response);\n      dispatch({\n        type: GET_CURRENT_ITEM_ERROR,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  //    Delete  ITEM General Prurpose Function\n  const deleteItem = async (\n    id,\n    metadataType,\n    dispatchType,\n    dispatchError,\n    errorName\n  ) => {\n    console.log(\n      `[DEBUG -DeleteDebateTitle] the value of metadata type is ${metadataType}`\n    );\n    console.log(`[DEBUG DELETE ITEM] /api/metadata/${metadataType}/${id}`);\n    //Set the current speaker item to the current speaker item\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.delete(\n        `/api/metadata/${metadataType}/${id}`,\n        config\n      );\n\n      console.log(`[DELETE ITEM] the value of res ${res.data}`);\n      console.log(`[DELETE ITEM] the dispatch type is ${dispatchType}`);\n\n      dispatch({\n        type: dispatchType,\n        payload: id,\n      });\n      return res.data;\n    } catch (error) {\n      // console.log(\"Error Object editItem Action\", error.response);\n      dispatch({\n        type: dispatchError,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  // Set Current Item to Null\n  const setCurrentItemToNull = () => {\n    dispatch({ type: SET_CURRENT_ITEM_NULL });\n  };\n\n  return (\n    <MetadataContext.Provider\n      value={{\n        speakersItems: state.speakersItems,\n        currentSpeaker: state.currentSpeaker,\n        debateParticipants: state.debateParticipants,\n        currentDebateParticipants: state.currentDebateParticipants,\n        loading: state.loading,\n        errors: state.errors,\n        alerts: state.alerts,\n        currentMetadataItem: state.currentMetadataItem,\n        debateTitles: state.debateTitles,\n        portfolioItems: state.portfolioItems,\n        issuesItems: state.issuesItems,\n        tagsItems: state.tagsItems,\n\n        addSpeaker,\n        getSpeakerItems,\n        clearErrors,\n        editItem,\n        setCurrentItemToNull,\n        deleteItem,\n        addItem,\n        getItems,\n      }}\n    >\n      {props.children}\n    </MetadataContext.Provider>\n  );\n};\n\nexport default MetadataState;\n","import {\n  GET_ADMIN_USERS,\n  POST_NEW_ADMIN_USERS,\n  DELETE_NEW_ADMIN_USERS,\n  ADD_USER_ERROR,\n  REMOVE_USER_ERROR,\n  CLEAR_ADMIN_USERS,\n  REGISTER_ADMIN_SUCCESS,\n  GET_USER_LOGS,\n  REMOVE_USER_LOGS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    //Admin Actions\n    case GET_ADMIN_USERS:\n      return {\n        ...state,\n        adminUsers: [...action.payload],\n      };\n\n    case DELETE_NEW_ADMIN_USERS:\n      return {\n        ...state,\n        adminUsers: state.adminUsers.filter(\n          (users) => users._id !== action.payload\n        ),\n      };\n\n    case CLEAR_ADMIN_USERS:\n      return {\n        ...state,\n        adminUsers: [],\n      };\n\n    case ADD_USER_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case REMOVE_USER_ERROR:\n      return {\n        ...state,\n        errors: {},\n      };\n    case REGISTER_ADMIN_SUCCESS:\n      return {\n        ...state,\n      };\n\n    case GET_USER_LOGS:\n      return {\n        ...state,\n        logData: [...action.payload],\n      };\n\n    case REMOVE_USER_LOGS:\n      return {\n        ...state,\n        logData: [],\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\n\nimport axios from 'axios';\n\nimport AdminContext from './adminContext';\nimport AdminReducer from './adminReducer';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  GET_ADMIN_USERS,\n  POST_NEW_ADMIN_USERS,\n  DELETE_NEW_ADMIN_USERS,\n  ADD_USER_ERROR,\n  REMOVE_USER_ERROR,\n  CLEAR_ADMIN_USERS,\n  REGISTER_ADMIN_SUCCESS,\n  GET_USER_LOGS,\n  REMOVE_USER_LOGS,\n} from '../types';\n\nconst AdminState = (props) => {\n  const initialState = {\n    adminUsers: [],\n    currentUser: {},\n    logData: [],\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(AdminReducer, initialState);\n\n  // Auth Actions\n\n  //Load User for Admin roles\n\n  const getUsersAdmin = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.get('api/users/getusers');\n\n      dispatch({ type: GET_ADMIN_USERS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: ADD_USER_ERROR, payload: err.response.data });\n    }\n  };\n\n  //Register User\n\n  const registerUser = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/users/register', formData, config);\n\n      // dispatch({\n      //   type: REGISTER_ADMIN_SUCCESS,\n      //   payload: res.data,\n      // });\n      getUsersAdmin();\n      return res.data;\n    } catch (err) {\n      console.info(`From Error log ${JSON.stringify(err.response.data)}`);\n      return err.response.data;\n      // dispatch({\n      //   type: ADD_USER_ERROR,\n      //   payload: err.response.data,\n      // });\n    }\n  };\n\n  // Delete User\n\n  const deleteUser = async (id) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.delete(`/api/users/${id}`, config);\n      getUsersAdmin();\n      return res;\n    } catch (err) {\n      dispatch({\n        type: ADD_USER_ERROR,\n        payload: err.response.data,\n      });\n    }\n  };\n\n  const getUsersLogs = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.get('api/users/logs');\n\n      dispatch({ type: GET_USER_LOGS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: ADD_USER_ERROR, payload: err.response.data });\n    }\n  };\n\n  const removeUsersLogs = async () => {\n    dispatch({\n      type: REMOVE_USER_LOGS,\n    });\n  };\n\n  //Clear Errors\n  const clearErrors = () => dispatch({ type: REMOVE_USER_ERROR });\n\n  return (\n    <AdminContext.Provider\n      value={{\n        adminUsers: state.adminUsers,\n        logData: state.logData,\n        currentUser: state.currentUser,\n        errors: state.errors,\n\n        getUsersAdmin,\n        registerUser,\n        deleteUser,\n        clearErrors,\n        getUsersLogs,\n        removeUsersLogs,\n      }}\n    >\n      {props.children}\n    </AdminContext.Provider>\n  );\n};\n\nexport default AdminState;\n","import React, { Fragment, useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Menu from './components/layout/Menu';\nimport Content from './components/layout/Content';\nimport Footer from './components/layout/Footer';\n\nimport Login from './components/auth/Login-component';\nimport Register from './components/auth/Register-Component';\nimport BookIndex from './components/book/BookIndex';\nimport MetadataIndex from './components/metadata/MetadataIndex.componenet';\nimport { SearchTableNew } from './utils/SearchTableNew.component';\nimport AdminPage from './components/Admin/AdminLandingPage';\n\n//Importing Private Route\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport CheckLogin from './components/routing/CheckLogin';\n\n// Import Set Auth Token\nimport setAuthToken from './utils/setAuthToken';\n\n// Import Context API State\n\nimport BookState from './context/book/BookState';\nimport AuthState from './context/auth/AuthState';\nimport AlertState from './context/alert/AlertState';\nimport MetadataState from './context/metadata/MetadataState';\nimport AdminState from './context/admin/AdminState';\n\n// Set Auth Context\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  return (\n    <AdminState>\n      <AlertState>\n        <AuthState>\n          <MetadataState>\n            <BookState>\n              <Router>\n                <Fragment>\n                  <Switch>\n                    {/* Check if this rendein can be conditional */}\n                    <CheckLogin path=\"/login\" component={Login} />\n                    {/* <Route exact path=\"/login\" component={Login} /> */}\n                  </Switch>\n                  {/*  <Switch>\n                  <Route exact path=\"/register\" component={Register} />\n                </Switch> */}\n                  <div className=\"wrapper\">\n                    <PrivateRoute\n                      path={[\n                        '/dashboard',\n                        '/bookindex/:id',\n\n                        '/metadata',\n                        '/tabledemo',\n                        '/admin',\n                        '/reports',\n                      ]}\n                      component={Header}\n                    />\n                    <PrivateRoute\n                      path={[\n                        '/dashboard',\n                        '/bookindex/:id',\n\n                        '/metadata',\n                        '/tabledemo',\n                        '/admin',\n                        '/reports',\n                      ]}\n                      component={Menu}\n                    />\n\n                    {/* <Header />\n                  <Menu /> */}\n                    <Switch>\n                      <PrivateRoute\n                        exact\n                        path=\"/dashboard\"\n                        component={Content}\n                      />\n\n                      <PrivateRoute\n                        exact\n                        path=\"/bookindex/:id\"\n                        component={BookIndex}\n                      />\n\n                      <PrivateRoute\n                        exact\n                        path=\"/bookindex\"\n                        component={BookIndex}\n                      />\n\n                      <PrivateRoute\n                        exact\n                        path=\"/metadata\"\n                        component={MetadataIndex}\n                      />\n                      <PrivateRoute exact path=\"/admin\" component={AdminPage} />\n                      <PrivateRoute\n                        exact\n                        path=\"/reports\"\n                        component={MetadataIndex}\n                      />\n\n                      <Route\n                        exact\n                        path=\"/tabledemo\"\n                        component={SearchTableNew}\n                      />\n                    </Switch>\n                    <PrivateRoute\n                      path={[\n                        '/dashboard',\n                        '/bookindex/:id',\n\n                        '/metadata',\n                        '/tabledemo',\n                        '/admin',\n                        '/reports',\n                      ]}\n                      component={Footer}\n                    />\n                    {/* <Footer /> */}\n                  </div>\n                </Fragment>\n              </Router>\n            </BookState>\n          </MetadataState>\n        </AuthState>\n      </AlertState>\n    </AdminState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}