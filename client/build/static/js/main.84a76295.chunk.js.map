{"version":3,"sources":["components/layout/Header.jsx","context/auth/authContext.js","constants/index.js","components/layout/Menu.jsx","components/dashboard/BreadCrumbs-component.jsx","components/dashboard/ContentHeader-component.jsx","context/book/bookContext.js","utils/GlobalFilter.js","utils/SearchTableDashboardNew.jsx","components/common/TextFieldGroup.jsx","components/common/SelectListGroup.jsx","components/common/FileUpload.component.jsx","components/common/MultiSelectDatePicker.jsx","components/common/SingleDate-component.jsx","context/alert/alertContext.jsx","components/modal/AddBookModal.Component.jsx","components/dashboard/TableDashboard-component.jsx","components/layout/Content.jsx","components/layout/Footer.jsx","utils/setAuthToken.js","components/auth/Login-component.jsx","components/book/BookSummary-Top.jsx","utils/SearchTableNew.component.jsx","components/common/TextAreaFieldGroup.jsx","context/metadata/metadataContext.js","components/book/book-sections/BookPart1Modal.component.jsx","context/types.js","components/book/book-sections/BookPart2Modal.component.jsx","components/book/BookMetadataTable.jsx","components/book/book-sections/AnnexureModal.component.jsx","components/book/AnnexureSummary.component.jsx","utils/Breadcrumbs.jsx","components/sideNav/SideNav.jsx","components/book/BookIndex.jsx","utils/metadataModals/MetadataSectionModal.component.jsx","utils/metadataModals/metadataModalsUtils.js","components/metadata/metadatasections/MetadataSpeakersCard.component.jsx","components/modal/AddMemberModal.jsx","components/metadata/metadatasections/MetadataParticiapantsCard.component.jsx","components/modal/AddDebateTitleModal.jsx","components/metadata/metadatasections/MetadataDebateTitleCard.component.jsx","components/modal/AddPortfolio.component.jsx","components/metadata/metadatasections/MetadataPortfoliosCard.component.jsx","components/modal/AddIssues.component.jsx","components/metadata/metadatasections/MetadataIssuesCard.component.jsx","components/modal/AddTags.Component.jsx","components/metadata/metadatasections/MetadataTagsCard.jsx","components/metadata/MetadataIndex.componenet.jsx","components/routing/PrivateRoute.js","components/routing/CheckLogin.jsx","context/book/bookReducer.js","context/book/BookState.js","context/auth/authReducer.js","context/auth/AuthState.js","context/alert/alertReducer.jsx","context/alert/AlertState.jsx","context/metadata/metadataReducer.js","context/metadata/MetadataState.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","data-widget","href","role","type","placeholder","aria-label","data-toggle","src","alt","data-slide","authContext","createContext","getStatusBadge","status","classes","getBindedBadge","binding","getTableActionItems","bookid","to","styleDashBoardCard","margin","marginBottom","modalHeaderBackColour","customer","backgroundColor","bookStateObject","department","bookId","assembly_number","session_number","volume_number","part_number","numofpages","place_session","year_book","dates_session","binding_status","book_returned_date","Date","metadata_given_date","metadata_start_date","metadata_end_date","remarksBook","status_metadata_book","status_of_books","uploadfilePath","metadataStateObject","_id","struct_id","book_id","section_type","start_page","end_page","debate_title_subject","debate_subject_eng","debate_subject_kan","issues_section","tags_array","debate_section_date","question_number","questioner_name","minister_name","minister_portfolio","annexure","debate_participants","path_pdf","modified_user","last_modified_time","getStatusBookSummaryTop","setInputfieldToNull","id_array","console","info","map","id","document","getElementById","setAttribute","changeDateToString","stateObject","dateArray","instanceDateObject","date","undefined","newDate","Menu","useContext","AuthContext","logout","isAuthenticated","user","useEffect","name","data-accordion","style","display","class","onClick","BreadCrumbsDashboard","ContentHeader","bookContext","GlobalFilter","filter","setFilter","metadata","useState","value","setValue","onChange","useAsyncDebounce","marginLeft","marginTop","for","aria-describedby","width","height","float","e","target","SearchTableNewDashboard","tableHeaderName","CUSTOMER","columns_table","table_data","MetadataType","styleDashboardTable","cardHeaderColor","columns","useMemo","data","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","footerGroups","prepareRow","state","setGlobalFilter","globalFilter","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","gotoPage","pageCount","setPageSize","pageSize","metadataType","searchTableName","data-target","overflowY","borderRadius","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","length","row","getRowProps","cells","cell","getCellProps","textAlign","defaultProps","TextFieldGroup","error","label","disabled","labelText","formWidth","required","inline_style","classnames","autocomplete","SelectListGroup","options","selectOptions","option","key","FileUpload","htmlFor","MultiSelectDatePicker","SingleDate","selected","dateFormat","dateLabel","alertContext","AddBook","currentBookState","currentBookSetState","onSubmit","onChangeDate","BookContext","otherCollectionProps","errors","data-dismiss","aria-hidden","TableDashboard","classname","body","classList","contains","replace","addclassbody","bookSummaryTable","addBookStruct","loading","deleteItem","getBookStruct","token","bookStruct","setBookStruct","isModalOpen","buttonLoading","setLoading","initSpeakerState","Footer","accessor","sticky","Cell","dateVarRes","split","preventDefault","then","responseMsg","swal","Content","loadUser","setAuthToken","axios","defaults","common","Login","props","AlertContext","login","setAlert","clearErrors","email","password","setUser","add","localStorage","history","push","fontWeight","color","marginRight","BookSummary","useHistory","getCurrentBook","currentBookStructure","getAnnexureItems","bookState","setBookState","Object","keys","constructor","modified_time_state","setTimeout","data-card-widget","title","SearchTableNew","number_sections","TextAreaFieldGroup","metadataContext","MetadataSectionModal","modalTitle","onChangeMultiSelect","currentItem","setCurrentItem","attribute","AddItem","onDelete","MetadataContext","currentMetadata","clearcurrentMetadataSection","annexureItems","debateParticipants","getItems","debateTitles","issuesItems","portfolioItems","tagsItems","DeleteSectionMetadata","a","formClearSteps","setInputFieldsToNull_array","setState_function_array","input_text_id","stateClearFunction","local_state_clear_array","setstateFunc","setMultiSelectFromState","metadataStateVar","objectMetadata","selectedState","selectedStateFunction","filterFunction","filterObject","metadataState","objectMeta","usestateVar","metaObject","meta","result_selected_values","optionsMultiSelect","data_array","input_box_array","item","input_box_options","name_eng","annexure_title","datesSession","membersSection","debateTitlesObject","issuesObject","portfolioObject","annexureObject","selectedDates","setSelectedDates","selectedMembers","setSelectedMembers","selectedDebateTitle","setSelectedDebateTitle","selectedIssues","setSelectedIssues","selectedQuestioner","setSelectedQuestioner","selectedMinister","setSelectedMinister","selectedPortfolio","setSelectedPortfolio","selectedAnnexure","setSelectedAnnexure","selectDatesInst","format","setMultiSelectFromStateDate","labelledBy","modified_time","buttonValue","MetadataSectionModalPart2","BookMetadataTable","setMetadataState","addSection","editSection","deleteSection","sectionalMetadataItems","getMetadataItems","handleChangeMultiSelect","valueMultiselect","mydateParts","dateinformat","value_array","valueArray","val","initMetadataState","getTableItems","sectiontype","modalTarget","editItemfunc","COLUMNS","original","AddSection","currentItemInstance","DeleteMetadata","text","icon","buttons","dangerMode","willDelete","msg","catch","err","log","speaker","modalLabelNames","modalname","currentAnnexure","clearcurrentAnnexure","book_id_num","currentannexure","AnnexureSummary","addAnnexure","editAnnexure","deleteAnnexure","setAnnexureItem","annexItem","initAnnexureState","AddAnnexure","DeleteAnnexure","SideNav","BookIndex","match","params","AddSpeaker","currentMetadataItem","currentSpeaker","addSpeaker","setCurrentItemToNull","name_kan","MetadataSectionCardSpeaker","speakersItems","getSpeakerItems","editItem","metadatatype","modalplaceholdervalue","placeHolderEnglish","placeHolderKannada","response","speakerName","res","JSON","stringify","labelValues","MetadataParticipantsCard","addItem","initState","getTypeReducer","dispatchError","errorName","memberName","AddEditItemFunc","MetadataDebateTitleCard","getDispatch","deleteDispatch","errorDispatch","errorname","tableheaderName","metadatatypeFilter","currentModalName","modalName","modal","dispatchType","DeleteDebateTitle","english","kannada","MetadataPortfolioCard","cardHeader","modalHeaderName","addButtonValue","modalButtonAttribute","DeleteItem","MetadataIssuesCard","MetadataTagsCard","MetadataIndex","PrivateRoute","Component","component","rest","action","payload","sectionmetadata","BookState","useReducer","bookReducer","dispatch","config","get","addbookStruct","post","structbook","annexureId","annexureid","delete","sectionalbook","section","sectionId","sectionid","Provider","reIndexBook","children","setItem","getItem","removeItem","errorValue","AuthState","authReducer","register","formData","alert","AlertState","alertReducer","alerts","timeout","uuid","member","debatetitle","portfolio","issues","tags","MetadataState","metadataReducer","currentDebateParticipants","addItemFromObject","App","CheckLogin","path","exact","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.84a76295.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n        {/* Left navbar links */}\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"pushmenu\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-bars\" />\n            </a>\n          </li>\n          <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"index3.html\" className=\"nav-link\">\n              Home\n            </a>\n          </li>\n          <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"#\" className=\"nav-link\">\n              Contact\n            </a>\n          </li>\n        </ul>\n        {/* SEARCH FORM */}\n        <form className=\"form-inline ml-3\">\n          <div className=\"input-group input-group-sm\">\n            <input\n              className=\"form-control form-control-navbar\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-navbar\" type=\"submit\">\n                <i className=\"fas fa-search\" />\n              </button>\n            </div>\n          </div>\n        </form>\n        {/* Right navbar links */}\n        <ul className=\"navbar-nav ml-auto\">\n          {/* Messages Dropdown Menu */}\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n              <i className=\"far fa-comments\" />\n              <span className=\"badge badge-danger navbar-badge\">3</span>\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user1-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 mr-3 img-circle\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Brad Diesel\n                      <span className=\"float-right text-sm text-danger\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">Call me whenever you can...</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user8-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      John Pierce\n                      <span className=\"float-right text-sm text-muted\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">I got your message bro</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                {/* Message Start */}\n                <div className=\"media\">\n                  <img\n                    src=\"dist/img/user3-128x128.jpg\"\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Nora Silvester\n                      <span className=\"float-right text-sm text-warning\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">The subject goes here</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                {/* Message End */}\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Messages\n              </a>\n            </div>\n          </li>\n          {/* Notifications Dropdown Menu */}\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n              <i className=\"far fa-bell\" />\n              <span className=\"badge badge-warning navbar-badge\">15</span>\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <span className=\"dropdown-item dropdown-header\">\n                15 Notifications\n              </span>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-envelope mr-2\" /> 4 new messages\n                <span className=\"float-right text-muted text-sm\">3 mins</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-users mr-2\" /> 8 friend requests\n                <span className=\"float-right text-muted text-sm\">12 hours</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-file mr-2\" /> 3 new reports\n                <span className=\"float-right text-muted text-sm\">2 days</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Notifications\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-th-large\" />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n// GLOBAL CONSTANTS\nexport const CUSTOMER = \"KLA\";\n\n// Classes\nexport const CUSTOMER_NAME_COLOUR = \"#46A049\";\nexport const LOGIN_CLASS_BODY = \"login-page\";\n\nexport const MODAL_HEADER_KLA = \"#46A049\";\n\n//Metadata Table Constants\n\nexport const TABLE_HEADER_SPEAKER = [\n  \"Name(English)\",\n  \"Name(Kannada)\",\n  \"Status\",\n  \"Actions\",\n];\n\n//Modal Metadata\n\nexport const ADD_EDIT_SPEAKER_TITLE_MODAL = \"ADD/EDIT SPEAKER\";\n\nexport const ADD_EDIT_CHAIRMAN_TITLE_MODAL = \"ADD/EDIT CHAIRMAN\";\n\n// Dashboard table Items\n\nexport const getStatusBadge = (status) => {\n  let classes = \"badge \";\n  if (status === \"Book Created\" || status === \"CREATED\") {\n    classes += \"badge-info\";\n  } else if (status === \"Metadata Completed\") {\n    classes += \"badge-warning\";\n  } else if (status === \"OCR Process\") {\n    classes += \"badge-primary\";\n  } else if (status === \"Indexing\") {\n    classes += \"badge-secondary\";\n  } else if (status === \"Book Live\") {\n    classes += \"badge-success\";\n  } else if (status === \"Book Error\") {\n    classes += \"badge-danger\";\n  }\n\n  return <span className={classes}>{status}</span>;\n};\n\nexport const getBindedBadge = (binding) => {\n  let classes = \"badge \";\n  if (!binding) {\n    classes += `badge-danger`;\n  } else {\n    classes += \"badge-success\";\n  }\n  return <span className={classes}>{binding ? \"Binded\" : \"UnBinded\"}</span>;\n};\n\nexport const getTableActionItems = (bookid) => (\n  <Link to={`/bookindex/${bookid}`} className=\"btn btn-link\">\n    Edit\n  </Link>\n);\n\n/// Card Styling\nexport const styleDashBoardCard = {\n  margin: \"0 10px\",\n  marginBottom: \"1rem\",\n};\n\nexport const modalHeaderBackColour = (customer) => {\n  const backgroundcolor = customer === \"KLA\" ? \"#c5e1a5\" : \"#DD3D45\";\n  return {\n    backgroundColor: backgroundcolor,\n  };\n};\n\n// Book State Object\n\nexport const bookStateObject = {\n  department: null,\n  bookId: null, //\n  assembly_number: null, //\n  session_number: null, //\n  volume_number: null, //\n  part_number: null, //\n  numofpages: null, //\n  place_session: null, //\n\n  year_book: null, //\n  dates_session: [], //\n\n  binding_status: null, //\n  book_returned_date: new Date(), //\n  metadata_given_date: new Date(), //\n  metadata_start_date: new Date(), //\n  metadata_end_date: new Date(), //\n  remarksBook: null, //\n  status_metadata_book: null, //\n  status_of_books: null, //\n  uploadfilePath: null,\n\n  // loading: false,\n\n  //errors: {},\n};\n\n//Setting the Add Sectional Metadata State\nexport const metadataStateObject = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: null,\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  minister_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_participants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const metadataStateObjectPart1 = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: \"part1\",\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  ministers_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_paticipants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const metadataStateObjectPart2 = {\n  _id: null,\n  struct_id: null,\n  book_id: null,\n  section_type: \"part2\",\n  start_page: null,\n  end_page: null,\n  debate_title_subject: \"\",\n  debate_subject_eng: \"\",\n  debate_subject_kan: \"\",\n  issues_section: [],\n  tags_array: [],\n  debate_section_date: \"\",\n  question_number: null,\n  questioner_name: \"\",\n  ministers_name: null,\n  minister_portfolio: null,\n  annexure: null,\n  status: null,\n\n  debate_participants: [],\n  path_pdf: null,\n  modified_user: null,\n  last_modified_time: null,\n};\n\nexport const getStatusBookSummaryTop = (status) => {\n  let classes = \"btn btn-block btn-sm \";\n  if (status === \"Book Created\" || status === \"CREATED\") {\n    classes += \"bg-gradient-info\";\n  } else if (status === \"Metadata Completed\") {\n    classes += \"bg-gradient-warning\";\n  } else if (status === \"OCR Process\") {\n    classes += \"bg-gradient-primary\";\n  } else if (status === \"Indexing\") {\n    classes += \"bg-gradient-secondary\";\n  } else if (status === \"Book Live\") {\n    classes += \"bg-gradient-success\";\n  } else if (status === \"Book Error\") {\n    classes += \"bg-gradient-danger\";\n  }\n\n  return classes;\n};\n//\nexport const setInputfieldToNull = (id_array) => {\n  //  This method set the form input to null\n  // https://stackoverflow.com/questions/7609130/set-the-value-of-an-input-field\n  console.info(\"[DEBUG] inputfield\", id_array);\n  id_array.map((id) => {\n    document.getElementById(id).setAttribute(\"value\", \"\");\n  });\n};\n\n// get unique elements in the array of objects\nfunction unique_element(arr) {\n  const seen = new Set();\n  // const arr = [\n  //   { id: 1, name: \"test1\" },\n  //   { id: 2, name: \"test2\" },\n  //   { id: 2, name: \"test3\" },\n  //   { id: 3, name: \"test4\" },\n  //   { id: 4, name: \"test5\" },\n  //   { id: 5, name: \"test6\" },\n  //   { id: 5, name: \"test7\" },\n  //   { id: 6, name: \"test8\" },\n  // ];\n\n  const result = arr.filter((el) => {\n    const duplicate = seen.has(el.value);\n    seen.add(el.value);\n    return !duplicate;\n  });\n  return result;\n}\n\n// Function for Book Summary Top to filter the Date Value to ISO String to String\n// [book_returned_date,metadata_end_date,metadata_given_date,metadata_start_date]\nexport function changeDateToString(stateObject, dateArray) {\n  let instanceDateObject = stateObject;\n\n  dateArray.map((date) => {\n    if (\n      !(\n        instanceDateObject[date] === null ||\n        instanceDateObject[date] === undefined\n      )\n    ) {\n      const newDate = new Date(instanceDateObject[date]);\n      // console.info(\"[DEBUG] Book Summary Top newDate \", newDate);\n      //let newDateString = newDate.toString();\n      instanceDateObject[date] = newDate;\n    }\n  });\n  //console.info(\"[DEBUG] Book Summary Top \", instanceDateObject);\n  return instanceDateObject;\n}\n\n// Function to remove the old classes from the body\n\nexport function removeclassbody(classname) {\n  if (document.body.classList.contains(classname)) {\n    document.body.className = document.body.className.replace(classname, \"\");\n  }\n}\nexport function addclassbody(classname) {\n  if (!document.body.classList.contains(classname)) {\n    document.body.className = document.body.className.replace(\n      \"\",\n      \"sidebar-mini \"\n    );\n  }\n}\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nimport { CUSTOMER } from \"../../constants/index\";\n\nconst Menu = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n\n  const onLogout = () => {\n    logout();\n  };\n\n  useEffect(() => {}, [user]);\n  // https://stackoverflow.com/questions/18023493/bootstrap-dropdown-sub-menu-missing?rq=1\n  return (\n    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\n      {/* Brand Logo */}\n      <Link to=\"/dashboard\" className=\"brand-link\">\n        {/* <img\n          src=\"dist/img/AdminLTELogo.png\"\n          alt=\"AdminLTE Logo\"\n          className=\"brand-image img-circle elevation-3\"\n          style={{ opacity: \"0.8\" }}\n        /> */}\n        <span className=\"brand-text font-weight-light\">\n          Legislature{\" \"}\n          {CUSTOMER === \"KLA\" ? <span>Assembly</span> : <span>Council</span>}{\" \"}\n          Ops\n        </span>\n      </Link>\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        {/* Sidebar user panel (optional) */}\n        <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n          <div className=\"image\">\n            <img\n              src=\"https://lh3.googleusercontent.com/ogw/ADGmqu8Gnaw0ZDmdOBUl-LJ6V6QP2zvIzBTNzL2YzwGb=s32-c-mo\"\n              //src=\"\"\n              className=\"img-circle elevation-2\"\n              alt=\"User Image\"\n            />\n          </div>\n          <div className=\"info\">\n            <a href=\"#\" className=\"d-block\">\n              {user ? user.name : \"Vaibhav\"}\n              {/* Vaibhav Sanil */}\n            </a>\n          </div>\n        </div>\n        {/* Sidebar Menu */}\n        <nav className=\"mt-2\">\n          <ul\n            className=\"nav nav-pills nav-sidebar flex-column\"\n            data-widget=\"treeview\"\n            role=\"menu\"\n            data-accordion=\"false\"\n          >\n            {/* Add icons to the links using the .nav-icon class\n         with font-awesome or any other icon font library */}\n            <li className=\"nav-item has-treeview menu-open\">\n              <Link to=\"/dashboard\" className=\"nav-link active\">\n                <i className=\"nav-icon fas fa-tachometer-alt\" />\n                <p>\n                  Dashboard\n                  <i className=\"right fas fa-angle-left\" />\n                </p>\n              </Link>\n              <ul className=\"nav nav-treeview\">\n                <li className=\"nav-item\">\n                  <Link to=\"/dashboard\" className=\"nav-link active\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Dashboard v1</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/dashboard\" className=\"nav-link \">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Dashboard v2</p>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n\n            {/* Start of Debates Menu */}\n\n            <li className=\"nav-item has-treeview menu-open\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i className=\"nav-icon fas fa-copy\" />\n                <p>\n                  Debates Console\n                  <i className=\"fas fa-angle-left right\" />\n                  <span className=\"badge badge-info right\">6</span>\n                </p>\n              </Link>\n              <ul className=\"nav nav-treeview\" style={{ display: \"block\" }}>\n                <li className=\"nav-item\">\n                  <Link to=\"/dashboard\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Dashboard</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/bookindex\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>ADD/EDIT BOOK</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/metadata\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Metadata</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Reports</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Administration</p>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n            {/* End of Debates Menu */}\n            {/* Committee Reports Start */}\n            <li className=\"nav-item has-treeview\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i className=\"nav-icon fas fa-users\" />\n                <p>\n                  Committe Reports\n                  <i className=\"right fas fa-angle-left\" />\n                </p>\n              </Link>\n              <ul className=\"nav nav-treeview\">\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 1</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 2</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 3</p>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n            {/* Committee Reports End */}\n            {/* Budget Speech */}\n            <li className=\"nav-item has-treeview\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i className=\"fas fa-rupee-sign nav-icon\" />\n                <p>\n                  Budget Speech\n                  <i className=\"fas fa-angle-left right\" />\n                </p>\n              </Link>\n              <ul className=\"nav nav-treeview\">\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n\n                    <p>Dashboard</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 2</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 3</p>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n\n            {/* Budget Speech End */}\n            {/* Review Start */}\n            <li className=\"nav-item has-treeview\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i class=\"nav-icon fas fa-book-reader\"></i>\n                <p>\n                  Review\n                  <i className=\"fas fa-angle-left right\" />\n                </p>\n              </Link>\n              <ul className=\"nav nav-treeview\">\n                <li className=\"nav-item\">\n                  <Link to=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Dashboard</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 1</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 2</p>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link href=\"#\" className=\"nav-link\">\n                    <i className=\"far fa-circle nav-icon\" />\n                    <p>Action 3</p>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n            {/* Review End */}\n\n            <li className=\"nav-header\">MISCELLANEOUS</li>\n            <li className=\"nav-item\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i className=\"nav-icon fas fa-file\" />\n                <p>Documentation</p>\n              </Link>\n            </li>\n\n            <li className=\"nav-header\">Action</li>\n            <li className=\"nav-item\">\n              <Link to=\"#\" className=\"nav-link\" onClick={onLogout}>\n                <i class=\"nav-icon fas fa-sign-out-alt text-danger\"></i>\n                <p className=\"text\">Logout</p>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"#\" className=\"nav-link\">\n                <i class=\"nav-icon fas fa-question-circle text-warning\"></i>\n                <p>Contact Support</p>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        {/* /.sidebar-menu */}\n      </div>\n      {/* /.sidebar */}\n    </aside>\n  );\n};\n\nexport default Menu;\n","import React, { useContext } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst BreadCrumbsDashboard = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n  // const breadcrumbItem = (\n\n  // )\n  return (\n    <div className=\"content-header\">\n      <div className=\"container-fluid\">\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-6\">\n            <h1 className=\"m-0 text-dark\">Welcome {user ? user.name : \"\"} </h1>\n          </div>\n          {/* /.col */}\n          <div className=\"col-sm-6\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"#\">Home</a>\n              </li>\n              <li className=\"breadcrumb-item active\">\n                <a href=\"#\">Dashboard V1</a>{\" \"}\n              </li>\n            </ol>\n          </div>\n          {/* /.col */}\n        </div>\n      </div>\n      {/* /.container-fluid */}\n    </div>\n  );\n};\n\nexport default BreadCrumbsDashboard;\n","import React, { Fragment } from \"react\";\n\nimport BreadCrumbsDashboard from \"./BreadCrumbs-component\";\n\nfunction ContentHeader() {\n  return (\n    <Fragment>\n      {/* Content Header (Page header) */}\n      <div className=\"content-header\">\n        <div className=\"container-fluid\">\n          <BreadCrumbsDashboard />\n        </div>\n        {/* /.container-fluid */}\n      </div>\n      {/* /.content-header END */}\n    </Fragment>\n  );\n}\n\nexport default ContentHeader;\n","import { createContext } from \"react\";\n\nconst bookContext = createContext();\n\nexport default bookContext;\n","import React, { useState, Fragment } from \"react\";\nimport { useAsyncDebounce } from \"react-table\";\n\nexport const GlobalFilter = ({ filter, setFilter, metadata }) => {\n  const [value, setValue] = useState(filter);\n  const onChange = useAsyncDebounce((value) => {\n    setFilter(value || undefined);\n  }, 750);\n  return (\n    <div className=\"row\">\n      <div\n        className=\"form-group\"\n        style={{\n          display: \"flex\",\n          marginLeft: \"65%\",\n        }}\n      >\n        <label\n          style={{\n            marginTop: \"2px\",\n            //float: \"right\",\n          }}\n          for=\"tableSearch\"\n        >\n          Search\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"tableSearch\"\n          aria-describedby=\"tableSearch\"\n          placeholder={`Search ${metadata}`}\n          style={{\n            display: \"inline-block\",\n            width: \"200px\",\n            height: \"30px\",\n            marginLeft: \"10px\",\n            float: \"right\",\n          }}\n          value={value || \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  usePagination,\n} from \"react-table\";\n\nimport { GlobalFilter } from \"./GlobalFilter\";\n\nimport \"./SearchTableNew.scss\";\n\nexport const SearchTableNewDashboard = ({\n  tableHeaderName,\n  CUSTOMER,\n  columns_table,\n  table_data,\n  MetadataType,\n  styleDashboardTable,\n  cardHeaderColor,\n}) => {\n  //const columns = useMemo(() => COLUMNS, []);\n  const columns = useMemo(() => columns_table, []);\n\n  //console.log(columns);\n\n  //const data = useMemo(() => table_data, []);\n  const data = table_data;\n\n  // console.log(\n  //   `from Search Table New value of CUSTOMER:${CUSTOMER} & MetadataType : ${MetadataType}`\n  // );\n\n  //console.log(table_data);\n\n  //const data = useMemo(() => MOCK_DATA, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n\n    gotoPage,\n    pageCount,\n    setPageSize,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 2 },\n    },\n\n    useGlobalFilter,\n\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  function addMetadataGlobalFilter(customer, metadataType) {\n    if (metadataType === \"Speaker\") {\n      return customer === \"KLA\" ? \"Speaker's\" : \"Chairman's\";\n    } else if (metadataType === \"Member\") {\n      return customer === \"KLA\" ? \"Member's\" : \"Member's\";\n    } else if (metadataType === \"debateTitle\") {\n      return customer === \"KLA\" ? \"Debate Title's\" : \"Debate Title's\";\n    } else if (metadataType === \"portfolio\") {\n      return customer === \"KLA\" ? \"Portfolio's\" : \"Portfolio's\";\n    } else if (metadataType === \"issues\") {\n      return customer === \"KLA\" ? \"Issues's\" : \"Issues's\";\n    } else if (metadataType === \"tags\") {\n      return customer === \"KLA\" ? \"Tag's\" : \"Tag's\";\n    } else if (metadataType === \"books\") {\n      return customer === \"KLA\" ? \"Book's\" : \"Book's\";\n    }\n  }\n\n  let searchTableName = addMetadataGlobalFilter(CUSTOMER, MetadataType);\n\n  //console.log(searchTableName);\n\n  const tableStyle = {\n    display: \"block\",\n    height: \"400px\",\n    overflowY: \"scroll\",\n    borderRadius: \"2px\",\n  };\n\n  return (\n    <>\n      {/* <div className=\"content-wrapper\"> */}\n      <div className=\"col-12\">\n        <section className=\"action-tables\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\" style={styleDashboardTable}>\n                <div className=\"card-header\" style={cardHeaderColor}>\n                  <h3\n                    className=\"card-title\"\n                    style={{\n                      marginTop: \"6px\",\n                    }}\n                  >\n                    <b> {tableHeaderName} </b>{\" \"}\n                  </h3>\n                  {/* TODO- Conditional Rendering of Buttons for RED Clolour for KLC as per the passed props */}\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-success\"\n                    data-toggle=\"modal\"\n                    data-target=\"#modal-lg\"\n                    style={{\n                      float: \"right\",\n                      width: \"158px\",\n                    }}\n                  >\n                    Add Book\n                  </button>\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  <GlobalFilter\n                    filter={globalFilter}\n                    setFilter={setGlobalFilter}\n                    metadata={searchTableName}\n                  />\n                  <table\n                    // className=\"table table-hover table-condensed table-scrollable\"\n                    className=\"table table-bordered table-striped table-head-fixed text-center\"\n                    {...getTableProps()}\n                    style={tableStyle}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr\n                          style={{\n                            width: \"100%\",\n                          }}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map((column) => (\n                            <th\n                              style={{\n                                width: \"500px\",\n                              }}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render(\"Header\")}\n                              <span style={{ display: \"inline-block\" }}>\n                                {column.isSorted\n                                  ? column.isSortedDesc\n                                    ? \" 🔽\"\n                                    : \" 🔼\"\n                                  : \"\"}\n                              </span>\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    {rows.length !== 0 ? (\n                      <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                          prepareRow(row);\n                          return (\n                            <tr {...row.getRowProps()}>\n                              {row.cells.map((cell) => {\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                    {cell.render(\"Cell\")}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: \"center\",\n                          marginTop: \"15px\",\n                        }}\n                      >\n                        Please Add a Book .....\n                      </h6>\n                    )}\n                    {/* <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody> */}\n                    {/* <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot> */}\n                  </table>\n\n                  {/* <table\n                    id=\"example1\"\n                    className=\"table table-bordered table-striped\"\n                    {...getTableProps()}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                          {headerGroup.headers.map((column) => (\n                            <th {...column.getHeaderProps()}>\n                              {column.render(\"Header\")}\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                    <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot>\n                  </table> */}\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n              {/* Table Searchable Start with Filter */}\n            </div>\n          </div>\n        </section>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nSearchTableNewDashboard.defaultProps = {\n  tableHeaderName: \"Datatable of Added Speakers\",\n  customer: \"KLA\",\n  columns_table: [],\n  MetadataType: \"books\",\n  tableHeaderName: \"Datatable of the Books & Status\",\n};\n\nSearchTableNewDashboard.propTypes = {\n  tableHeaderName: PropTypes.string.isRequired,\n  CUSTOMER: PropTypes.string.isRequired,\n  columns_table: PropTypes.array.isRequired,\n  table_data: PropTypes.array.isRequired,\n  MetadataType: PropTypes.string.isRequired,\n  styleDashboardTable: PropTypes.object.isRequired,\n  cardHeaderColor: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled,\n  id,\n  labelText,\n  formWidth,\n  required,\n  inline_style,\n}) => {\n  return (\n    <div className={`form-group ${inline_style}`}>\n      <label for={id}>{labelText}</label>\n      {/* if(disabled){\n        <input\n          type={type}\n          className={classnames(`form-control form-control ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          required\n\n        />\n      } */}\n\n      {required ? (\n        <input\n          type={type}\n          className={classnames(`form-control form-control  ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          required\n          autocomplete=\"off\"\n        />\n      ) : (\n        <input\n          type={type}\n          className={classnames(`form-control form-control ${formWidth}`, {\n            \"is-invalid\": error,\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n          disabled={disabled}\n          id={id}\n          autocomplete=\"off\"\n        />\n      )}\n\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nTextFieldGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextFieldGroup;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst SelectListGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  onChange,\n  options,\n  labelText,\n  id,\n  formWidth,\n}) => {\n  const selectOptions = options.map((option) => (\n    <option key={option.label} value={option.value}>\n      {option.label}\n    </option>\n  ));\n  return (\n    <div className=\"form-group\">\n      <label for={id}>{labelText}</label>\n      <select\n        className={classnames(`form-control form-control ${formWidth}`, {\n          \"is-invalid\": error,\n        })}\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        {selectOptions}\n      </select>\n\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nSelectListGroup.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\n// TextFieldGroup.defaultProps = {\n//     type: 'text'\n// };\n\nexport default SelectListGroup;\n","import React from \"react\";\n\nconst FileUpload = ({ info, error, labelText }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"exampleInputFile\">{labelText}</label>\n      <div className=\"input-group\">\n        <div className=\"custom-file\">\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"exampleInputFile\"\n          />\n          <label className=\"custom-file-label\" htmlFor=\"exampleInputFile\">\n            Choose file\n          </label>\n        </div>\n        <div className=\"input-group-append\">\n          <button className=\"input-group-text btn btn-outline-success\" id>\n            Upload\n          </button>\n        </div>\n      </div>\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import React, { Fragment } from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport \"./MultiSelectDates.syles.scss\";\n\nconst MultiSelectDatePicker = ({\n  id,\n  labelText,\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled,\n\n  formWidth,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label for={id}>{labelText}</label>\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        type={type}\n        className={classnames(` form-control date ${formWidth}`, {\n          \"is-invalid\": error,\n        })}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n        id={id}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nMultiSelectDatePicker.defaultProps = {\n  type: \"text\",\n};\n\nMultiSelectDatePicker.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n};\n\nexport default MultiSelectDatePicker;\n","import React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst SingleDate = ({\n  selected,\n  onChange,\n  name,\n  dateFormat,\n  id,\n  dateLabel,\n  disabled,\n}) => {\n  //console.log(disabled);\n  return (\n    <div className=\"form-group\">\n      <label for={name} style={{ display: \"block\" }}>\n        {dateLabel}\n      </label>\n      <DatePicker\n        selected={selected}\n        onChange={onChange}\n        name={name}\n        dateFormat={dateFormat}\n        id={id}\n      />\n      {/* \n      {disabled ? (\n        <DatePicker\n          selected={selected}\n          onChange={onChange}\n          name={name}\n          dateFormat={dateFormat}\n          id={id}\n          disabled\n        />\n      ) : (\n        <DatePicker\n          selected={selected}\n          onChange={onChange}\n          name={name}\n          dateFormat={dateFormat}\n          id={id}\n        />\n      )} */}\n    </div>\n  );\n};\n\nexport default SingleDate;\n","import { createContext } from \"react\";\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { Component, useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport FileUploadForm from \"../common/FileUpload.component\";\n// import MultiSelectDate from \"../common/MultiSelectDatePicker\";\nimport MultiSelectDatePicker from \"../common/MultiSelectDatePicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SingleDate from \"../common/SingleDate-component\";\n\n// Import Book Context\n\nimport BookContext from \"../../context/book/bookContext\";\n\n//Import Alert Context\nimport AlertContext from \"../../context/alert/alertContext\";\n\nimport { CUSTOMER, modalHeaderBackColour } from \"../../constants/index\";\n\nconst AddBook = ({\n  currentBookState,\n  currentBookSetState,\n  onChange,\n  onSubmit,\n  onChangeDate,\n}) => {\n  const bookContext = useContext(BookContext);\n  const { bookId, ...otherCollectionProps } = currentBookState;\n\n  const { errors } = bookContext;\n\n  // Select options for status\n  const optionsSession = [\n    { label: \"* Select Place Of Session\", value: 0 },\n    { label: \"Bangalore\", value: \"Bangalore\" },\n    { label: \"Belegavi\", value: \"Belegavi\" },\n  ];\n  const optionsBinding = [\n    { label: \"--Binding Status--\", value: 0 },\n    { label: \"UN-BINDED\", value: false },\n    { label: \"BINDED\", value: true },\n  ];\n\n  return (\n    <div className=\"modal fade\" id=\"modal-lg\">\n      <div className=\"modal-dialog modal-lg\">\n        <form onSubmit={onSubmit}>\n          <div className=\"modal-content\">\n            <div\n              className=\"modal-header\"\n              style={modalHeaderBackColour(CUSTOMER)}\n            >\n              <h4 className=\"modal-title\">Add New Book</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {/* Book ID Row */}\n              <div className=\"row\">\n                <div class=\"col-sm\">\n                  {/* <h4 style={{ marginLeft: \"0 25px\" }}>\n                    Book ID: <span className=\"bookId-number\">54</span>{\" \"}\n                  </h4> */}\n                  <TextFieldGroup\n                    placeholder=\"Book ID\"\n                    name=\"bookId\"\n                    value={otherCollectionProps.bookId}\n                    onChange={onChange}\n                    error={errors.bookId}\n                    id=\"bookId\"\n                    labelText=\"Book Id\"\n                    formWidth=\"col-4\"\n                  />\n                </div>\n                <div class=\"col-sm\"></div>\n                {/* Book ID Row End */}\n              </div>\n              {/* <form onSubmit={onSubmit}> */}\n              <div class=\"row\">\n                <div className=\"col-md-12 mx-auto\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      {CUSTOMER === \"KLA\" ? (\n                        <TextFieldGroup\n                          placeholder=\"AssemblyNumber\"\n                          name=\"assembly_number\"\n                          value={otherCollectionProps.assembly_number}\n                          onChange={onChange}\n                          error={errors.assembly_number}\n                          id=\"assembly_number\"\n                          labelText=\"Assembly Number\"\n                          formWidth=\"col-4\"\n                        />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SelectListGroup\n                        placeholder=\"Binding Status\"\n                        name=\"binding_status\"\n                        value={otherCollectionProps.binding_status}\n                        onChange={onChange}\n                        error={errors.binding_status}\n                        id=\"binding_status\"\n                        labelText=\"Binding Status\"\n                        formWidth=\"col-6\"\n                        options={optionsBinding}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Session Number\"\n                        name=\"session_number\"\n                        value={otherCollectionProps.session_number}\n                        onChange={onChange}\n                        error={errors.session_number}\n                        id=\"session_number\"\n                        labelText=\"Session Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.book_returned_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            book_returned_date: date,\n                          })\n                        }\n                        name=\"book_returned_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"book_returned_date\"\n                        dateLabel=\"Book Returned Date\"\n                        //disabled={this.state.statusBookBinded ? false : true}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Volume Number\"\n                        name=\"volume_number\"\n                        value={otherCollectionProps.volume_number}\n                        onChange={onChange}\n                        error={errors.volume_number}\n                        id=\"volume_number\"\n                        labelText=\"Volume Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_given_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_given_date: date,\n                          })\n                        }\n                        name=\"metadata_given_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_given_date\"\n                        dateLabel=\"Metadata Given Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      {/* required */}\n                      <TextFieldGroup\n                        placeholder=\"Part Number\"\n                        name=\"part_number\"\n                        value={otherCollectionProps.part_number}\n                        onChange={onChange}\n                        error={errors.part_number}\n                        id=\"part_number\"\n                        labelText=\"Part Number\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* not required */}\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_start_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_start_date: date,\n                          })\n                        }\n                        name=\"metadata_start_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_start_date\"\n                        dateLabel=\"Metadata Start Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Number Of Pages\"\n                        name=\"numofpages\"\n                        value={otherCollectionProps.numofpages}\n                        onChange={onChange}\n                        error={errors.numofpages}\n                        id=\"numofpages\"\n                        labelText=\"Number of Pages\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <SingleDate\n                        selected={otherCollectionProps.metadata_end_date}\n                        onChange={(date) =>\n                          currentBookSetState({\n                            ...currentBookState,\n                            metadata_end_date: date,\n                          })\n                        }\n                        name=\"metadata_end_date\"\n                        dateFormat=\"dd-MM-yyyy\"\n                        id=\"metadata_end_date\"\n                        dateLabel=\"Metadata End Date\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <SelectListGroup\n                        placeholder=\"PlaceOfSession\"\n                        name=\"place_session\"\n                        value={otherCollectionProps.place_session}\n                        onChange={onChange}\n                        error={errors.place_session}\n                        id=\"place_session\"\n                        labelText=\"Place Of Session\"\n                        formWidth=\"col-6\"\n                        options={optionsSession}\n                      />\n                    </div>\n\n                    <div className=\"col-sm-6\">\n                      <MultiSelectDatePicker\n                        placeholder=\"Select One or Multiple Dates\"\n                        name=\"dates_session\"\n                        value={otherCollectionProps.dates_session}\n                        onChange={onChangeDate}\n                        error={errors.dates_session}\n                        id=\"dates_session\"\n                        labelText=\"Dates Of Session\"\n                        formWidth=\"col-md\"\n                        info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Year Of Book\"\n                        name=\"year_book\"\n                        value={otherCollectionProps.year_book}\n                        onChange={onChange}\n                        error={errors.year_book}\n                        id=\"year_book\"\n                        labelText=\"Year Of Book\"\n                        formWidth=\"col-4\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {/* TODO - FIle Upload */}\n                      <FileUploadForm\n                        labelText=\"Upload Book Images\"\n                        info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                      <TextFieldGroup\n                        placeholder=\"Remarks\"\n                        name=\"remarksBook\"\n                        value={otherCollectionProps.remarksBook}\n                        onChange={onChange}\n                        error={errors.remarksBook}\n                        id=\"remarksBook\"\n                        labelText=\"Remarks\"\n                        formWidth=\"col-md\"\n                      />\n                    </div>\n                    <div className=\"col-sm-6\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-block btn-outline-success\"\n                        onClick={(e) => onSubmit(e)}\n                        style={{\n                          width: \"36%\",\n                          marginTop: \"1.5rem\",\n                          display: \"none\",\n                        }}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* </form> */}\n            </div>\n            <div className=\"modal-footer justify-content-between\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"submit\"\n                className={\n                  CUSTOMER === \"KLA\"\n                    ? \"btn btn-block btn-outline-success\"\n                    : \"btn btn-block btn-outline-danger\"\n                }\n                data-dismiss=\"modal\"\n                style={{\n                  width: \"36%\",\n                  marginTop: \"1.5rem\",\n                }}\n                onClick={(e) => onSubmit(e)}\n              >\n                Submit\n              </button>\n            </div>\n            {/* End Form here */}\n          </div>\n          {/* /.modal-content */}\n        </form>\n      </div>\n      {/* /.modal-dialog */}\n    </div>\n  );\n};\n\nAddBook.propTypes = {\n  currentBookState: PropTypes.object.isRequired,\n  currentBookSetState: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AddBook;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\n// Import Book Context\n\nimport BookContext from \"../../context/book/bookContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nimport TableDashboardItems from \"../dashboard/TableDashBoardItems\";\nimport { SearchTableNewDashboard } from \"../../utils/SearchTableDashboardNew\";\n\nimport {\n  modalHeaderBackColour,\n  CUSTOMER,\n  getBindedBadge,\n  getStatusBadge,\n  getTableActionItems,\n  styleDashBoardCard,\n  bookStateObject,\n  removeclassbody,\n  addclassbody,\n} from \"../../constants/index\";\n\nimport AddBookModal from \"../modal/AddBookModal.Component\";\n\nconst TableDashboard = () => {\n  useEffect(() => {\n    removeclassbody(\"login-page\");\n    addclassbody(\"sidebar-mini\");\n  }, []);\n  const bookContext = useContext(BookContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    bookSummaryTable,\n    loading,\n    deleteItem,\n    addBookStruct,\n    getBookStruct,\n  } = bookContext;\n\n  const { token } = authContext;\n\n  useEffect(() => {\n    getBookStruct();\n  }, []);\n\n  const [bookStruct, setBookStruct] = useState(bookStateObject);\n  const [buttonloading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  // Initialize the Current Spekaer State\n\n  const initSpeakerState = () => {\n    // Intializing the Speaker State to Null\n    setBookStruct(bookStateObject);\n    setLoading({ buttonLoading: false });\n  };\n\n  const onChange = (e) =>\n    setBookStruct({ ...bookStruct, [e.target.name]: e.target.value });\n\n  const onChangeDate = (e) => {\n    let dateVar = e.target.value;\n    let dateVarRes = dateVar.split(\",\");\n\n    console.info(\"[DEBUG] change date in ADD Book Action\", dateVarRes);\n\n    setBookStruct({\n      ...bookStruct,\n      dates_session: dateVarRes,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading({ buttonLoading: true });\n    //const currentItemInstance = currentItem;\n    // delete currentItem[\"last_modified_time\"];\n    // delete currentItem[\"modified_user\"];\n    // delete currentItem[\"_id\"];\n\n    addBookStruct(bookStruct).then((responseMsg) => {\n      if (responseMsg === \"success\") {\n        initSpeakerState();\n        swal(\n          \"Good job!\",\n          \"The Book Has Been Successfully Added !!!\",\n          \"success\"\n        );\n      } else {\n        initSpeakerState();\n        swal(\n          \"Awww Snap !!!\",\n          \"The Book was not added successfully!!! Please try again\",\n          \"error\"\n        );\n      }\n    });\n  };\n\n  const COLUMNS_CUSTOMER = (customer) =>\n    customer === \"KLA\"\n      ? [\n          {\n            Header: \"Book Id\",\n            Footer: \"Book Id\",\n            accessor: \"bookId\",\n            sticky: \"left\",\n          },\n\n          {\n            Header: \"Assembly Number\",\n            Footer: \"Assembly Number\",\n            accessor: \"assembly_number\",\n            sticky: \"left\",\n          },\n          {\n            Header: \"Session Number\",\n            Footer: \"Session Number\",\n            accessor: \"session_number\",\n            sticky: \"left\",\n          },\n          {\n            Header: \"Part Number\",\n            Footer: \"Part Number\",\n            accessor: \"part_number\",\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: \"Number of Pages\",\n            Footer: \"Number of Pages\",\n            accessor: \"numofpages\",\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: \"Book Status\",\n            Footer: \"Book Status\",\n            accessor: \"status_of_books\",\n            Cell: ({ value }) => {\n              return getStatusBadge(value);\n            },\n          },\n          {\n            Header: \"Binding Status\",\n            Footer: \"Binding Status\",\n            accessor: \"binding_status\",\n            Cell: ({ value }) => {\n              return getBindedBadge(value);\n            },\n          },\n          {\n            Header: \"Actions\",\n            Footer: \"Actions\",\n            accessor: \"_id\",\n            Cell: ({ value }) => {\n              return getTableActionItems(value);\n            },\n          },\n        ]\n      : [\n          {\n            Header: \"Book Id\",\n            Footer: \"Book Id\",\n            accessor: \"bookId\",\n            sticky: \"left\",\n          },\n          {\n            Header: \"Session Number\",\n            Footer: \"Session Number\",\n            accessor: \"session_number\",\n          },\n          {\n            Header: \"Part Number\",\n            Footer: \"Part Number\",\n            accessor: \"part_number\",\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: \"Number of Pages\",\n            Footer: \"Number of Pages\",\n            accessor: \"numofpages\",\n            //   Cell: ({ value }) => {\n            //     return getTableItems(value);\n            //   },\n          },\n          {\n            Header: \"Book Status\",\n            Footer: \"Book Status\",\n            accessor: \"status_of_books\",\n            Cell: ({ value }) => {\n              return getStatusBadge(value);\n            },\n          },\n          {\n            Header: \"Binding Status\",\n            Footer: \"Binding Status\",\n            accessor: \"binding_status\",\n            Cell: ({ value }) => {\n              return getBindedBadge(value);\n            },\n          },\n          {\n            Header: \"Actions\",\n            Footer: \"Actions\",\n            accessor: \"_id\",\n            Cell: ({ value }) => {\n              return getTableActionItems(value);\n            },\n          },\n        ];\n\n  return (\n    <Fragment>\n      {/* Main content */}\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          {/* Small boxes (Stat box) */}\n          <div className=\"row\">\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-info\">\n                <div className=\"inner\">\n                  <h3>150</h3>\n                  <p>Number of Books Completed</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-ios-bookmarks\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-success\">\n                <div className=\"inner\">\n                  <h3>78546</h3>\n                  <p>OCR'ed Pages</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-ios-bookmarks\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-warning\">\n                <div className=\"inner\">\n                  <h3>44</h3>\n                  <p>Book's Binded</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-checkmark-circled\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-danger\">\n                <div className=\"inner\">\n                  <h3>65</h3>\n                  <p>Incomplete Metadata</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-sad\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\">\n                  More info <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n          </div>\n        </div>\n        {/* /.container-fluid */}\n      </section>\n      {/* Search Table New DashBoard */}\n      <SearchTableNewDashboard\n        customer={CUSTOMER}\n        columns_table={COLUMNS_CUSTOMER(CUSTOMER)}\n        table_data={bookSummaryTable}\n        styleDashboardTable={styleDashBoardCard}\n        cardHeaderColor={modalHeaderBackColour(CUSTOMER)}\n      />\n\n      <AddBookModal\n        currentBookState={bookStruct}\n        currentBookSetState={setBookStruct}\n        onChange={onChange}\n        onChangeDate={onChangeDate}\n        onSubmit={onSubmit}\n      />\n    </Fragment>\n  );\n};\n\nexport default TableDashboard;\n","import React, { useContext, useEffect } from \"react\";\n\n// Import Context\nimport AuthContext from \"../../context/auth/authContext\";\n\n// Import Components\n\nimport ContentHeader from \"../dashboard/ContentHeader-component\";\nimport TableDashboard from \"../dashboard/TableDashboard-component\";\nconst Content = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disale-next-line\n  }, []);\n  return (\n    <div className=\"content-wrapper\">\n      <ContentHeader />\n      <TableDashboard />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport {\n  LOGIN_CLASS_BODY,\n  CUSTOMER_NAME_COLOUR,\n  CUSTOMER,\n} from \"../../constants/index\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"main-footer\">\n      <strong>\n        Copyright &copy; 2020-2021\n        <a href=\"\">\n          Karnataka Legislative {CUSTOMER === \"KLA\" ? \"Assembly\" : \"Council\"}{\" \"}\n          Secretariat\n        </a>\n        .\n      </strong>\n      All rights reserved.\n      <div class=\"float-right d-none d-sm-inline-block\">\n        <b>Version</b> 1.0.2\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","//import React, { useContext } from \"react\";\nimport axios from \"axios\";\n\n// import AuthContext from \"../context/auth/authContext\";\n// const authContext = useContext(AuthContext);\n\n// console.info(authContext);\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport classnames from \"classnames\";\nimport {\n  LOGIN_CLASS_BODY,\n  CUSTOMER_NAME_COLOUR,\n  CUSTOMER,\n} from \"../../constants/index\";\n\nconst Login = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, errors, clearErrors, isAuthenticated, loadUser } = authContext;\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    // errors: {},\n  });\n\n  const { email, password } = user;\n\n  useEffect(() => {\n    document.body.classList.add(LOGIN_CLASS_BODY);\n    // Setting wrapper class to display none\n    //var items = document.getElementsByClassName(\"wrapper\");\n    // console.info(\"[DEBUG] Login-Component css \", items);\n    //items[0].style.display = \"none\";\n    //console.log(items);\n\n    if (errors) {\n      // Set Alert on errors\n      //setAlert(errors, \"danger\");\n\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [errors]);\n\n  useEffect(() => {\n    document.body.className = document.body.className.replace(\n      \"sidebar-mini\",\n      \"\"\n    );\n    if (localStorage.token) {\n      loadUser();\n    }\n\n    if (authContext.token) {\n      // var items = document.getElementsByClassName(\"wrapper\");\n      // // console.info(\"[DEBUG] Login-Component css \", items);\n      // items[0].style.removeProperty(\"display\");\n      //items[0].style.display = \"inline\";\n      setAuthToken(localStorage.token);\n      props.history.push(\"/dashboard\");\n      //sidebar-mini\n    }\n  }, [authContext]);\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  //Customer Head Styles\n  const CustomerHeaderStyleKLA = {\n    fontWeight: \"500\",\n    color: \"#42A846 \",\n    marginRight: \"15px\",\n  };\n\n  const CustomerHeaderStyleKLC = {\n    fontWeight: \"500\",\n    color: \"#46A049 \",\n    marginRight: \"15px\",\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login({\n      email,\n      password,\n    });\n\n    // Promise.all([login]).then((values) => {\n    //   console.info(\"[DASHBOARD] Loging Component \", values);\n    //   if (authContext.isAuthenticated) {\n    //     // var items = document.getElementsByClassName(\"wrapper\");\n    //     // // console.info(\"[DEBUG] Login-Component css \", items);\n    //     // items[0].style.removeProperty(\"display\");\n    //     //items[0].style.display = \"inline\";\n    //     props.history.push(\"/dashboard\");\n    //     //sidebar-mini\n    //   }\n    // });\n  };\n\n  return (\n    <div className=\"login-box\">\n      <div className=\"login-logo\">\n        <a href=\"#\">\n          {CUSTOMER === \"KLA\" ? (\n            <span style={CustomerHeaderStyleKLA}> {CUSTOMER}</span>\n          ) : (\n            <span style={CustomerHeaderStyleKLC}> {CUSTOMER}</span>\n          )}\n          Digitization Operations Console\n        </a>\n      </div>\n      {/* /.login-logo */}\n      <div className=\"card\">\n        <div className=\"card-body login-card-body\">\n          <p className=\"login-box-msg\">Sign in to start your session</p>\n          <form onSubmit={onSubmit}>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"email\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.email,\n                })}\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={onChange}\n              />\n              <div className=\"input-group-append\">\n                <div className=\"input-group-text\">\n                  <span className=\"fas fa-envelope\" />\n                </div>\n              </div>\n\n              {errors.email ? (\n                <div className=\"invalid-feedback\">{errors.email}</div>\n              ) : null}\n            </div>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"password\"\n                className={classnames(\"form-control\", {\n                  \"is-invalid\": errors.password,\n                })}\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={onChange}\n              />\n              <div className=\"input-group-append\">\n                <div className=\"input-group-text\">\n                  <span className=\"fas fa-lock\" />\n                </div>\n              </div>\n              {errors.password && (\n                <div className=\"invalid-feedback\">{errors.password}</div>\n              )}\n            </div>\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"icheck-primary\">\n                  <input type=\"checkbox\" id=\"remember\" />\n                  <label htmlFor=\"remember\">Remember Me</label>\n                </div>\n              </div>\n              {/* /.col */}\n              <div className=\"col-4\">\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                  Sign In\n                </button>\n              </div>\n              {/* /.col */}\n            </div>\n          </form>\n          <div className=\"social-auth-links text-center mb-3\">\n            <p>- OR -</p>\n            {/* <a href=\"#\" className=\"btn btn-block btn-primary\">\n                 <i className=\"fab fa-facebook mr-2\" /> Sign in using Facebook\n               </a> */}\n            <a href=\"#\" className=\"btn btn-block btn-danger\">\n              <i className=\"fab fa-google-plus mr-2\" /> Sign in using Google\n            </a>\n          </div>\n          {/* /.social-auth-links */}\n          <p className=\"mb-1\">\n            <a href=\"#\">I forgot my password</a>\n          </p>\n          <p className=\"mb-0\">\n            <a href=\"#\" className=\"text-center\">\n              Register\n            </a>\n          </p>\n        </div>\n        {/* /.login-card-body */}\n      </div>\n    </div>\n  );\n};\n\n// class Login extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n\n//       errors: {},\n//     };\n//   }\n\n//   onChange = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n\n//   componentDidMount() {\n//     document.body.classList.add(LOGIN_CLASS_BODY);\n//     // Setting wrapper class to display none\n//     var items = document.getElementsByClassName(\"wrapper\");\n//     items[0].style.display = \"none\";\n//     //console.log(items);\n//   }\n\n//   componentWillUnmount() {\n//     document.body.classList.remove(LOGIN_CLASS_BODY);\n//   }\n\n//   render() {\n//     const { email, password, errors } = this.state;\n\n//     //Customer Head Styles\n//     const CustomerHeaderStyle = {\n//       fontWeight: \"500\",\n//       color: CUSTOMER_NAME_COLOUR,\n//     };\n//     return (\n//       <div className=\"login-box\">\n//         <div className=\"login-logo\">\n//           <a href=\"../../index2.html\">\n//             <span style={CustomerHeaderStyle}>{CUSTOMER}</span> Digitization\n//             Operations Console\n//           </a>\n//         </div>\n//         {/* /.login-logo */}\n//         <div className=\"card\">\n//           <div className=\"card-body login-card-body\">\n//             <p className=\"login-box-msg\">Sign in to start your session</p>\n//             <form onSubmit={onSubmit}>\n//               <div className=\"input-group mb-3\">\n//                 <input\n//                   type=\"email\"\n//                   className={classnames(\"form-control\", {\n//                     \"is-invalid\": errors.email,\n//                   })}\n//                   name=\"email\"\n//                   placeholder=\"Email\"\n//                   onChange={onChange}\n//                 />\n//                 <div className=\"input-group-append\">\n//                   <div className=\"input-group-text\">\n//                     <span className=\"fas fa-envelope\" />\n//                   </div>\n//                 </div>\n\n//                 {errors.email ? (\n//                   <div className=\"invalid-feedback\">{errors.email}</div>\n//                 ) : null}\n//               </div>\n//               <div className=\"input-group mb-3\">\n//                 <input\n//                   type=\"password\"\n//                   className={classnames(\"form-control\", {\n//                     \"is-invalid\": errors.password,\n//                   })}\n//                   name=\"password\"\n//                   placeholder=\"Password\"\n//                   onChange={onChange}\n//                 />\n//                 <div className=\"input-group-append\">\n//                   <div className=\"input-group-text\">\n//                     <span className=\"fas fa-lock\" />\n//                   </div>\n//                 </div>\n//                 {errors.password && (\n//                   <div className=\"invalid-feedback\">{errors.password}</div>\n//                 )}\n//               </div>\n//               <div className=\"row\">\n//                 <div className=\"col-8\">\n//                   <div className=\"icheck-primary\">\n//                     <input type=\"checkbox\" id=\"remember\" />\n//                     <label htmlFor=\"remember\">Remember Me</label>\n//                   </div>\n//                 </div>\n//                 {/* /.col */}\n//                 <div className=\"col-4\">\n//                   <button type=\"submit\" className=\"btn btn-primary btn-block\">\n//                     Sign In\n//                   </button>\n//                 </div>\n//                 {/* /.col */}\n//               </div>\n//             </form>\n//             <div className=\"social-auth-links text-center mb-3\">\n//               <p>- OR -</p>\n//               {/* <a href=\"#\" className=\"btn btn-block btn-primary\">\n//                 <i className=\"fab fa-facebook mr-2\" /> Sign in using Facebook\n//               </a> */}\n//               <a href=\"#\" className=\"btn btn-block btn-danger\">\n//                 <i className=\"fab fa-google-plus mr-2\" /> Sign in using Google\n//               </a>\n//             </div>\n//             {/* /.social-auth-links */}\n//             <p className=\"mb-1\">\n//               <a href=\"forgot-password.html\">I forgot my password</a>\n//             </p>\n//             <p className=\"mb-0\">\n//               <a href=\"register.html\" className=\"text-center\">\n//                 Register\n//               </a>\n//             </p>\n//           </div>\n//           {/* /.login-card-body */}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Login;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport swal from \"sweetalert\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\nimport FileUploadForm from \"../common/FileUpload.component\";\n// import MultiSelectDate from \"../common/MultiSelectDatePicker\";\nimport MultiSelectDatePicker from \"../common/MultiSelectDatePicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SingleDate from \"../common/SingleDate-component\";\n\n// Import Context\nimport BookContext from \"../../context/book/bookContext\";\n\nimport {\n  bookStateObject,\n  modalHeaderBackColour,\n  styleDashBoardCard,\n  CUSTOMER,\n  getStatusBookSummaryTop,\n  changeDateToString,\n} from \"../../constants/index\";\n\nexport const BookSummary = ({ id }) => {\n  const bookContext = useContext(BookContext);\n  let history = useHistory();\n  const {\n    errors,\n    getCurrentBook,\n    currentBookStructure,\n    addBookStruct,\n    getAnnexureItems,\n  } = bookContext;\n\n  const [bookState, setBookState] = useState(bookStateObject);\n  const [buttonloading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && errors.constructor === Object) {\n      getCurrentBook(id);\n      // .then((currentBook) => {\n      //   if (typeof currentBook === \"object\") {\n      //     console.log(\n      //       \"[DEBUG -BookSummaryTop-ERROR] the current Book Structure\",\n      //       currentBook\n      //     );\n      //   } else {\n      //     getAnnexureItems(currentBookStructure.bookId);\n      //   }\n      // });\n      const modified_time_state = changeDateToString(currentBookStructure, [\n        \"book_returned_date\",\n        \"metadata_end_date\",\n        \"metadata_given_date\",\n        \"metadata_start_date\",\n      ]);\n      // console.info(\n      //   \"[DEBUG the book state is ERROR modified_time_state] \",\n      //   modified_time_state\n      // );\n      setBookState(modified_time_state);\n\n      // console.info(\"[DEBUG the book state is error] \", bookState);\n    } else {\n      swal(\"Oops\", \"The Book Cannot Be Fetched  !!!\", \"error\");\n      setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n    }\n    // if (errors.length !== 0) {\n    //   swal(\"Oops\", \"The Book Cannot Be Fetched !!!\", \"error\");\n    //   // setTimeout(() => {\n    //   //   history.push(\"/dashboard\");\n    //   // }, 1000);\n    // }\n  }, [errors]);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && errors.constructor === Object) {\n      // getCurrentBook(id)\n      const modified_time_state = changeDateToString(currentBookStructure, [\n        \"book_returned_date\",\n        \"metadata_end_date\",\n        \"metadata_given_date\",\n        \"metadata_start_date\",\n      ]);\n      console.info(\n        \"[DEBUG the book state the value of modified_time] \",\n        modified_time_state\n      );\n\n      if (\n        Object.keys(modified_time_state).length > 0 &&\n        modified_time_state.constructor === Object\n      ) {\n        setBookState(currentBookStructure);\n        console.info(\n          \"[DEBUG the book state is current Book structure] \",\n          bookState\n        );\n      }\n\n      console.info(\n        \"[DEBUG the book state is current Book structure] \",\n        bookState\n      );\n    } else {\n      swal(\"Oops\", \"The Book Cannot Be Fetched from the state !!!\", \"error\");\n      // setTimeout(() => {\n      //   history.push(\"/dashboard\");\n      // }, 1000);\n    }\n    // if (errors.length !== 0) {\n    //   swal(\"Oops\", \"The Book Cannot Be Fetched !!!\", \"error\");\n    //   // setTimeout(() => {\n    //   //   history.push(\"/dashboard\");\n    //   // }, 1000);\n    // }\n  }, [currentBookStructure]);\n\n  const onChange = (e) => {\n    //console.log(e.target);\n\n    setBookState({ ...bookState, [e.target.name]: e.target.value });\n  };\n\n  // const onChangeDate = (date) => {\n  //   this.setState({\n  //     bookReturnedDate: date,\n  //   });\n  // };\n\n  const onChangeDate = (e) => {\n    let dateVar = e.target.value;\n    let dateVarRes = dateVar.split(\",\");\n\n    console.info(\"[DEBUG] change date in ADD Book Action\", dateVarRes);\n\n    setBookState({\n      ...bookState,\n      dates_session: dateVarRes,\n    });\n  };\n\n  const optionsSession = [\n    { label: \"* Select Place Of Session\", value: 0 },\n    { label: \"Bangalore\", value: \"bangalore\" },\n    { label: \"Belegavi\", value: \"belegavi\" },\n  ];\n  const optionsBinding = [\n    { label: \"--Binding Status--\", value: false },\n    { label: \"UN-BINDED\", value: false },\n    { label: \"BINDED\", value: true },\n  ];\n\n  const onSubmit = (e) => {\n    //Call the Submit Action\n    addBookStruct(bookState).then((responseMsg) => {\n      if (responseMsg === \"success\") {\n        // initMetadataState();\n        // clearcurrentMetadataSection();\n        getCurrentBook(id);\n        const modified_time_state = changeDateToString(currentBookStructure, [\n          \"book_returned_date\",\n          \"metadata_end_date\",\n          \"metadata_given_date\",\n          \"metadata_start_date\",\n        ]);\n\n        setBookState(modified_time_state);\n        swal(\n          \"Good job!\",\n          \"The Book Structural Metadata edited Successfully!!!\",\n          \"success\"\n        );\n      } else {\n        // initMetadataState();\n        swal(\n          \"Awww Snap !!!\",\n          \"Book Section not edited successfully !!! Please Try Again \",\n          \"error\"\n        );\n      }\n    });\n    // // Call the success\n    // console.log(res);\n  };\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <div className=\"card-tools\"></div>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Summary</b>{\" \"}\n        </h3>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n      {/* Form Element Should Start Here */}\n\n      <div className=\"card-body\">\n        {/* Book Summary Introduction Row */}\n        <div className=\"row\">\n          <div class=\"col-sm\">\n            <h4 style={{ marginLeft: \"0 25px\" }}>\n              Book ID: <span className=\"bookId-number\">{bookState.bookId}</span>{\" \"}\n            </h4>\n          </div>\n          <div class=\"col-sm\">\n            <button\n              type=\"button\"\n              style={{\n                width: \"123px\",\n                margin: \"0 auto\",\n              }}\n              disabled=\"true\"\n              className={getStatusBookSummaryTop(\n                currentBookStructure.status_of_books\n              )}\n            >\n              {\" \"}\n              {bookState.status_of_books}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div className=\"col-md-10 mx-auto\">\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                {CUSTOMER === \"KLA\" ? (\n                  <TextFieldGroup\n                    placeholder=\"AssemblyNumber\"\n                    name=\"assembly_number\"\n                    value={bookState.assembly_number}\n                    onChange={onChange}\n                    error={errors.assembly_number}\n                    id=\"assembly_number\"\n                    labelText=\"Assembly Number\"\n                    formWidth=\"col-4\"\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\"col-sm-6\">\n                <SelectListGroup\n                  placeholder=\"Binding Status\"\n                  name=\"binding_status\"\n                  value={bookState.binding_status}\n                  onChange={onChange}\n                  error={errors.binding_status}\n                  id=\"binding_status\"\n                  labelText=\"Binding Status\"\n                  formWidth=\"col-6\"\n                  options={optionsBinding}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Session Number\"\n                  name=\"session_number\"\n                  value={bookState.session_number}\n                  onChange={onChange}\n                  error={errors.session_number}\n                  id=\"session_number\"\n                  labelText=\"Session Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.book_returned_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      book_returned_date: date,\n                    })\n                  }\n                  name=\"book_returned_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"book_returned_date\"\n                  dateLabel=\"Book Returned Date\"\n                  //disabled={bookState.statusBookBinded ? false : true}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Volume Number\"\n                  name=\"volume_number\"\n                  value={bookState.volume_number}\n                  onChange={onChange}\n                  error={errors.volume_number}\n                  id=\"volume_number\"\n                  labelText=\"Volume Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_given_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_given_date: date,\n                    })\n                  }\n                  name=\"metadata_given_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_given_date\"\n                  dateLabel=\"Metadata Given Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Part Number\"\n                  name=\"part_number\"\n                  value={bookState.part_number}\n                  onChange={onChange}\n                  error={errors.part_number}\n                  id=\"part_number\"\n                  labelText=\"Part Number\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_start_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_start_date: date,\n                    })\n                  }\n                  name=\"metadata_start_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_start_date\"\n                  dateLabel=\"Metadata Start Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Number Of Pages\"\n                  name=\"numofpages\"\n                  value={bookState.numofpages}\n                  onChange={onChange}\n                  error={errors.numofpages}\n                  id=\"numofpages\"\n                  labelText=\"Number of Pages\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <SingleDate\n                  selected={bookState.metadata_end_date}\n                  onChange={(date) =>\n                    setBookState({\n                      ...bookState,\n                      metadata_end_date: date,\n                    })\n                  }\n                  name=\"metadata_end_date\"\n                  dateFormat=\"dd-MM-yyyy\"\n                  id=\"metadata_end_date\"\n                  dateLabel=\"Metadata End Date\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <SelectListGroup\n                  placeholder=\"PlaceOfSession\"\n                  name=\"place_session\"\n                  value={bookState.place_session}\n                  onChange={onChange}\n                  error={errors.place_session}\n                  id=\"place_session\"\n                  labelText=\"Place Of Session\"\n                  formWidth=\"col-4\"\n                  options={optionsSession}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <MultiSelectDatePicker\n                  placeholder=\"Select One or Multiple Dates\"\n                  name=\"dates_session\"\n                  value={bookState.dates_session}\n                  onChange={onChangeDate}\n                  error={errors.dates_session}\n                  id=\"dates_session\"\n                  labelText=\"Dates Of Session\"\n                  formWidth=\"col-md\"\n                  info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Year Of Book\"\n                  name=\"year_book\"\n                  value={bookState.year_book}\n                  onChange={onChange}\n                  error={errors.year_book}\n                  id=\"year_book\"\n                  labelText=\"Year Of Book\"\n                  formWidth=\"col-4\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                {/* TODO - FIle Upload */}\n                <FileUploadForm\n                  labelText=\"Upload Book Images\"\n                  info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextFieldGroup\n                  placeholder=\"Remarks\"\n                  name=\"remarksBook\"\n                  value={bookState.remarksBook}\n                  onChange={onChange}\n                  error={errors.remarksBook}\n                  id=\"remarksBook\"\n                  labelText=\"Remarks\"\n                  formWidth=\"col-md\"\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-block btn-outline-success\"\n                  style={{\n                    width: \"36%\",\n                    marginTop: \"1.7rem\",\n                  }}\n                  onClick={(e) => {\n                    onSubmit(e);\n                  }}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Card Body End */}\n      {/* /.card-body */}\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n      {/* Form element Should End Here */}\n      {/* /.card-footer*/}\n    </div>\n  );\n};\n\n// class BookSummary extends Component {\n//   constructor() {\n//     super();\n//     bookState = {\n//       department: \"KLA\",\n//       bookId: 54,\n//       assemblyNumber: 1,\n//       sessionNumber: 3,\n//       volumeNumber: 4,\n//       partNumber: 5,\n//       numberPages: 1123,\n//       placeSession: \"\",\n\n//       yearBook: 2013,\n//       datesSession: [\"12-03-2012\", \"13-03-2012\"],\n\n//       statusBookBinded: \"UNBINDED\",\n//       bookReturnedDate: null,\n//       metadataGivenDate: null,\n//       metadataStartDate: null,\n//       metadataEndDate: null,\n//       remarksBook: \"\",\n//       metadataStatus: \"INCOMPLETE\",\n//       bookStatus: \"INDEXED\",\n//       uploadfilePath: \"\",\n\n//       loading: false,\n\n//       errors: {},\n//     };\n//   }\n\n//   onChange = (e) => {\n//     //console.log(e.target);\n\n//     setState({ [e.target.name]: e.target.value });\n//   };\n\n//   onChangeDate = (date) => {\n//     this.setState({\n//       bookReturnedDate: date,\n//     });\n//   };\n\n//   render() {\n//     const { errors } = this.state;\n\n//     //const { onChangeDate, onChange } = this.state;\n\n//     // Select options for status\n//     const optionsSession = [\n//       { label: \"* Select Place Of Session\", value: 0 },\n//       { label: \"Bangalore\", value: \"Bangalore\" },\n//       { label: \"Belegavi\", value: \"Belegavi\" },\n//     ];\n//     const optionsBinding = [\n//       { label: \"--Binding Status--\", value: false },\n//       { label: \"UN-BINDED\", value: false },\n//       { label: \"BINDED\", value: true },\n//     ];\n\n//     // Dummy Data\n\n//     return (\n//       <div className=\"card\">\n//         {/* Card Header Start */}\n//         <div className=\"card-header\">\n//           <div className=\"card-tools\"></div>\n//           <h3 className=\"card-title\">\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-tool\"\n//               data-card-widget=\"collapse\"\n//               data-toggle=\"tooltip\"\n//               title=\"Collapse\"\n//             >\n//               <i className=\"fas fa-minus\" />\n//             </button>{\" \"}\n//             <b> Book Summary</b>{\" \"}\n//           </h3>\n//         </div>\n//         {/* Card Header End */}\n//         {/* Card Body Start */}\n//         {/* Form Element Should Start Here */}\n\n//         <div className=\"card-body\">\n//           {/* Book Summary Introduction Row */}\n//           <div className=\"row\">\n//             <div class=\"col-sm\">\n//               <h4 style={{ marginLeft: \"0 25px\" }}>\n//                 Book ID: <span className=\"bookId-number\">54</span>{\" \"}\n//               </h4>\n//             </div>\n//             <div class=\"col-sm\">\n//               <button\n//                 type=\"button\"\n//                 class=\"btn btn-block bg-gradient-success btn-sm status__button \"\n//               >\n//                 {\" \"}\n//                 Book Indexed\n//               </button>\n//             </div>\n//           </div>\n//           <form onSubmit={this.onSubmit}>\n//             <div class=\"row\">\n//               <div className=\"col-md-10 mx-auto\">\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"AssemblyNumber\"\n//                       name=\"assemblyNumber\"\n//                       value={this.state.assmeblyNumber}\n//                       onChange={this.onChange}\n//                       error={errors.assemblyNumber}\n//                       id=\"assemblyNumber\"\n//                       labelText=\"Assembly Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SelectListGroup\n//                       placeholder=\"Binding Status\"\n//                       name=\"statusBookBinded\"\n//                       value={this.state.statusBookBinded}\n//                       onChange={this.onChange}\n//                       error={errors.statusBookBinded}\n//                       id=\"statusBookBinded\"\n//                       labelText=\"Binding Status\"\n//                       formWidth=\"col-6\"\n//                       options={optionsBinding}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Session Number\"\n//                       name=\"sessionNumber\"\n//                       value={this.state.sessionNumber}\n//                       onChange={this.onChange}\n//                       error={errors.sessionNumber}\n//                       id=\"sessionNumber\"\n//                       labelText=\"Session Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.bookReturnedDate}\n//                       onChange={() => this.onChangeDate}\n//                       name=\"bookReturnedDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"bookReturnedDate\"\n//                       dateLabel=\"Book Returned Date\"\n//                       //disabled={this.state.statusBookBinded ? false : true}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Volume Number\"\n//                       name=\"volumeNumber\"\n//                       value={this.state.volumeNumber}\n//                       onChange={this.onChange}\n//                       error={errors.volumeNumber}\n//                       id=\"volumeNumber\"\n//                       labelText=\"Volume Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataGivenDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataGivenDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataGivenDate\"\n//                       dateLabel=\"Metadata Given Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Part Number\"\n//                       name=\"partNumber\"\n//                       value={this.state.partNumber}\n//                       onChange={this.onChange}\n//                       error={errors.partNumber}\n//                       id=\"partNumber\"\n//                       labelText=\"Part Number\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataStartDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataStartDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataStartDate\"\n//                       dateLabel=\"Metadata Start Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Number Of Pages\"\n//                       name=\"numPages\"\n//                       value={this.state.numberPages}\n//                       onChange={this.onChange}\n//                       error={errors.numberPages}\n//                       id=\"numPages\"\n//                       labelText=\"Number of Pages\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <SingleDate\n//                       selected={this.state.metadataEndDate}\n//                       onChange={this.onChangeDate}\n//                       name=\"metadataEndDate\"\n//                       dateFormat=\"dd-MM-yyyy\"\n//                       id=\"metadataEndDate\"\n//                       dateLabel=\"Metadata End Date\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <SelectListGroup\n//                       placeholder=\"PlaceOfSession\"\n//                       name=\"placeSession\"\n//                       value={this.state.placeofSession}\n//                       onChange={this.onChange}\n//                       error={errors.placeofSession}\n//                       id=\"placeofSession\"\n//                       labelText=\"Place Of Session\"\n//                       formWidth=\"col-4\"\n//                       options={optionsSession}\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <MultiSelectDatePicker\n//                       placeholder=\"Select One or Multiple Dates\"\n//                       name=\"datesSession\"\n//                       value={this.state.datesSession}\n//                       onChange={this.onChange}\n//                       error={errors.datesSession}\n//                       id=\"datesSession\"\n//                       labelText=\"Dates Of Session\"\n//                       formWidth=\"col-md\"\n//                       info=\"* Please Enter Dates seperated by , in dd-MM-yyyy \"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Year Of Book\"\n//                       name=\"yearBook\"\n//                       value={this.state.yearBook}\n//                       onChange={this.onChange}\n//                       error={errors.yearBook}\n//                       id=\"yearBook\"\n//                       labelText=\"Year Of Book\"\n//                       formWidth=\"col-4\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     {/* TODO - FIle Upload */}\n//                     <FileUploadForm\n//                       labelText=\"Upload Book Images\"\n//                       info=\"* Upload the Scanned Images in zip file with filename of Book ID\"\n//                     />\n//                   </div>\n//                 </div>\n//                 <div className=\"row\">\n//                   <div className=\"col-sm-6\">\n//                     <TextFieldGroup\n//                       placeholder=\"Remarks\"\n//                       name=\"remarksBook\"\n//                       value={this.state.remarksBook}\n//                       onChange={this.onChange}\n//                       error={errors.remarksBook}\n//                       id=\"remarksBook\"\n//                       labelText=\"Remarks\"\n//                       formWidth=\"col-md\"\n//                     />\n//                   </div>\n//                   <div className=\"col-sm-6\">\n//                     <button\n//                       type=\"submit\"\n//                       class=\"btn btn-block btn-outline-success\"\n//                       style={{\n//                         width: \"36%\",\n//                         marginTop: \"1.5rem\",\n//                       }}\n//                     >\n//                       Submit\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//           </form>\n//         </div>\n//         {/* Card Body End */}\n//         {/* /.card-body */}\n//         <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n//         {/* Form element Should End Here */}\n//         {/* /.card-footer*/}\n//       </div>\n//     );\n//   }\n//}\n\nBookSummary.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default BookSummary;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useTable,\n  useSortBy,\n  useGlobalFilter,\n  usePagination,\n} from \"react-table\";\n\nimport { GlobalFilter } from \"./GlobalFilter\";\n\nimport \"./SearchTableNew.scss\";\n\n//import MOCK_DATA from \"./MOCK_DATA.json\";\n//import { COLUMNS, GROUPED_COLUMNS } from \"./columns\";\n\n//import TableItems from \"./TableItem.Components\";\n\nexport const SearchTableNew = ({\n  tableHeaderName,\n  CUSTOMER,\n  columns_table,\n  table_data,\n  MetadataType,\n  number_sections,\n}) => {\n  //const columns = useMemo(() => COLUMNS, []);\n  const columns = useMemo(() => columns_table, []);\n\n  //const data = useMemo(() => table_data, []);\n  const data = table_data;\n  //console.log(columns);\n\n  // console.log(\n  //   `from Search Table New value of CUSTOMER:${CUSTOMER} & MetadataType : ${MetadataType}`\n  // );\n\n  //console.log(table_data);\n\n  //const data = useMemo(() => MOCK_DATA, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n\n    gotoPage,\n    pageCount,\n    setPageSize,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 2 },\n    },\n\n    useGlobalFilter,\n\n    useSortBy,\n    usePagination\n  );\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  function addMetadataGlobalFilter(customer, metadataType) {\n    if (metadataType === \"Speaker\") {\n      return customer === \"KLA\" ? \"Speaker's\" : \"Chairman's\";\n    } else if (metadataType === \"Member\") {\n      return customer === \"KLA\" ? \"Member's\" : \"Member's\";\n    } else if (metadataType === \"debateTitle\") {\n      return customer === \"KLA\" ? \"Debate Title's\" : \"Debate Title's\";\n    } else if (metadataType === \"portfolio\") {\n      return customer === \"KLA\" ? \"Portfolio's\" : \"Portfolio's\";\n    } else if (metadataType === \"issues\") {\n      return customer === \"KLA\" ? \"Issues's\" : \"Issues's\";\n    } else if (metadataType === \"tags\") {\n      return customer === \"KLA\" ? \"Tag's\" : \"Tag's\";\n    } else if (metadataType === \"annexure\") {\n      return \"Annexure's\";\n    } else if (metadataType === \"metadata\") {\n      return \"Metadata \";\n    }\n  }\n\n  let searchTableName = addMetadataGlobalFilter(CUSTOMER, MetadataType);\n\n  //console.log(searchTableName);\n\n  const tableStyle = {\n    display: \"block\",\n    height: \"400px\",\n    overflowY: \"scroll\",\n    borderRadius: \"2px\",\n  };\n\n  return (\n    <>\n      {/* <div className=\"content-wrapper\"> */}\n      <div className=\"col-12\">\n        <section className=\"action-tables\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3\n                    className=\"card-title\"\n                    style={{\n                      marginTop: \"6px\",\n                    }}\n                  >\n                    <b> {tableHeaderName} </b>{\" \"}\n                  </h3>\n                  {/* TODO- Conditional Rendering of Buttons for RED Clolour for KLC as per the passed props */}\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  {number_sections && number_sections > 0 ? (\n                    <div className=\"row\" style={{ display: \"flex\" }}>\n                      <div className=\"col-5\">\n                        <h5>\n                          Number of Section's in the Book: {number_sections}\n                        </h5>\n                      </div>\n                      <div\n                        className=\"col-7 mr-1\"\n                        style={{ marginBottom: \"6px\", marginLeft: \"-15%\" }}\n                      >\n                        <GlobalFilter\n                          filter={globalFilter}\n                          setFilter={setGlobalFilter}\n                          metadata={searchTableName}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"row\">\n                      <div className=\"col-8\" style={{ marginLeft: \"243px\" }}>\n                        <GlobalFilter\n                          filter={globalFilter}\n                          setFilter={setGlobalFilter}\n                          metadata={searchTableName}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  <table\n                    // className=\"table table-hover table-condensed table-scrollable\"\n                    className=\"table table-bordered table-striped table-head-fixed text-center\"\n                    {...getTableProps()}\n                    style={tableStyle}\n                  >\n                    <thead>\n                      {headerGroups.map((headerGroup) => (\n                        <tr\n                          style={{\n                            width: \"100%\",\n                          }}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map((column) => (\n                            <th\n                              style={{\n                                width: \"500px\",\n                              }}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render(\"Header\")}\n                              <span style={{ display: \"inline-block\" }}>\n                                {column.isSorted\n                                  ? column.isSortedDesc\n                                    ? \" 🔽\"\n                                    : \" 🔼\"\n                                  : \"\"}\n                              </span>\n                            </th>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    {rows.length !== 0 ? (\n                      <tbody {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                          prepareRow(row);\n                          return (\n                            <tr {...row.getRowProps()}>\n                              {row.cells.map((cell) => {\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                    {cell.render(\"Cell\")}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    ) : (\n                      <h6\n                        style={{\n                          textAlign: \"center\",\n                          marginTop: \"15px\",\n                        }}\n                      >\n                        There are no items in the Table ... Please Add One\n                      </h6>\n                    )}\n                    {/* <tbody {...getTableBodyProps()}>\n                      {rows.map((row) => {\n                        prepareRow(row);\n                        return (\n                          <tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => {\n                              return (\n                                <td {...cell.getCellProps()}>\n                                  {cell.render(\"Cell\")}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody> */}\n                    {/* <tfoot>\n                      {footerGroups.map((footerGroup) => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                          {footerGroup.headers.map((column) => (\n                            <td {...column.getFooterProps()}>\n                              {column.render(\"Footer\")}\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </tfoot> */}\n                  </table>\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n              {/* Table Searchable Start with Filter */}\n            </div>\n          </div>\n        </section>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nSearchTableNew.defaultProps = {\n  tableHeaderName: \"Datatable of Added Speakers\",\n  customer: \"KLA\",\n  columns_table: [],\n};\n\nSearchTableNew.propTypes = {\n  tableHeaderName: PropTypes.string.isRequired,\n  CUSTOMER: PropTypes.string.isRequired,\n  columns_table: PropTypes.array.isRequired,\n  table_data: PropTypes.array.isRequired,\n  number_sections: PropTypes.number,\n  MetadataType: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaFieldGroup = ({\n  name,\n  placeholder,\n  value,\n\n  error,\n  info,\n  onChange,\n  id,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <textarea\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        id={id}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextAreaFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  //type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n// TextFieldGroup.defaultProps = {\n//     type: 'text'\n// };\n\nexport default TextAreaFieldGroup;\n","import { createContext } from \"react\";\n\nconst metadataContext = createContext();\n\nexport default metadataContext;\n","import React, { useEffect, useContext, Fragment, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { format } from \"date-fns\";\n// https://github.com/harshzalavadiya/react-multi-select-component#readme\n// https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport TextAreaField from \"../../common/TextAreaFieldGroup\";\n\nimport SelectListGroup from \"../../common/SelectListGroup\";\nimport MultiSelectInput from \"../../common/MultiSelectInputGroup.component\";\nimport MultiSelectInputMember from \"../../common/MultiSelectInputGroupMember.component\";\n\nimport BookContext from \"../../../context/book/bookContext\";\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  metadataStateObject,\n  metadataStateObjectPart1,\n  setInputfieldToNull,\n} from \"../../../constants/index\";\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n} from \"../../../context/types\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  onChange,\n  onChangeMultiSelect,\n  currentItem,\n  setCurrentItem,\n  attribute,\n  loading,\n  setLoading,\n  AddItem,\n  onDelete,\n}) => {\n  const bookContext = useContext(BookContext);\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadata,\n    clearcurrentMetadataSection,\n    currentBookStructure,\n    annexureItems,\n  } = bookContext;\n\n  const {\n    debateParticipants,\n    getItems,\n    debateTitles,\n    issuesItems,\n    tagsItems,\n    portfolioItems,\n\n    //[{\"status\":true,\"_id\":\"5fc0dde916ba283e4af4e72b\",\"book_id_num\":1,\"annexure_title\":\"Cauvery Issue\",\"start_page\":12,\"end_page\":13,\"last_modified_time\":\"2020-11-27T11:07:21.595Z\",\"__v\":0}]\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  // Const Add Section\n\n  const AddSectionMetadata = () => {\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n    AddItem();\n  };\n  // Const Delete Section\n  const DeleteSectionMetadata = async () => {\n    await onDelete();\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n  };\n\n  const setInputFieldsToNull_array = [\n    \"start_page\",\n    \"end_page\",\n    \"text_field\",\n    \"question_number\",\n  ];\n\n  const formClearSteps = (\n    input_text_id,\n    stateClearFunction,\n    local_state_clear_array\n  ) => {\n    //  This function will clear all input fields & input state after the submission or cancel\n    //setInputfieldToNull(input_text_id);\n    setCurrentItem(metadataStateObject);\n    setInputfieldToNull(input_text_id);\n    stateClearFunction();\n    local_state_clear_array.map((setstateFunc) => {\n      setstateFunc([]);\n    });\n  };\n\n  const setMultiSelectFromState = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState,\n    selectedStateFunction,\n    filterFunction\n  ) => {\n    // Design the function to compare the object id in the metadata state with the objectmetadata\n\n    function filterObject(metadataState, objectMeta, usestateVar) {\n      let metaObject;\n\n      objectMeta.map((meta) => {\n        if (meta.value === metadataState) {\n          metaObject = meta;\n        } else {\n          //      console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n\n    // Set Selected Debate Title\n    if (typeof metadataStateVar === \"string\") {\n      // let result_selected_values_array = [];\n      let result_selected_values = filterObject(\n        metadataStateVar,\n        objectMetadata,\n        selectedState\n      );\n\n      //console.info(\"[DEBUG] for set state to part1\", result_selected_values);\n\n      if (result_selected_values) {\n        selectedState.push(result_selected_values);\n        // return result_selected_values;\n      }\n    } else if (typeof metadataStateVar === \"object\") {\n      metadataStateVar.map((state) => {\n        let result_selected_values = filterObject(\n          state,\n          objectMetadata,\n          selectedState\n        );\n        if (\n          result_selected_values != undefined ||\n          result_selected_values != null\n        ) {\n          // selectedState.map((item) => {\n          //   if (item.value != result_selected_values.value) {\n          //     selectedState.push(result_selected_values);\n          //   }\n          // });\n          if (result_selected_values) {\n            selectedState.push(result_selected_values);\n          }\n        }\n      });\n      // console.info(\"[DEBUG] Selected State for given State is\", selectedState);\n      //let newState = filterFunction(selectedState);\n      // selectedState = newState;\n      //return newState;\n      //console.info(\"[DEBUG] Selected State Array \", selectedState);\n      // selectedStateFunction([]);\n      // newState.map((item) => selectedState.push(item));\n\n      // selectedStateFunction([...newState]);\n    }\n  };\n\n  const setMultiSelectFromStateDate = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState\n  ) => {\n    function filterObject(metadataState, objectMeta) {\n      let metaObject;\n      let newDate = format(new Date(metadataState), \"dd-MM-yyyy\");\n\n      objectMeta.map((meta) => {\n        if (meta.value === newDate) {\n          metaObject = meta;\n        } else {\n          // console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n    // console.info(\n    //   \"[DEBUG filterObject Dates] the value of Objectmeta \",\n    //   objectMetadata\n    // );\n    let result_selected_values = filterObject(metadataStateVar, objectMetadata);\n    selectedState.push(result_selected_values);\n  };\n\n  useEffect(() => {\n    //https://stackoverflow.com/questions/47019199/why-does-async-await-work-with-react-setstate\n    if (\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) {\n      setCurrentItem(metadataStateObject);\n\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    } else {\n      setCurrentItem(currentMetadata);\n\n      // setMultiSelectFromState(currentMetadata);\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    }\n  }, [currentMetadata]);\n\n  const buttonValue = (currentMetadata, attribute) => {\n    if (!(Object.keys(currentMetadata).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentMetadata).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  const headerStyle = {\n    backgroundColor: \"#7BE495\",\n  };\n\n  const onSelect = (data) => {\n    console.log(data);\n  };\n\n  const onRemove = (data) => {\n    console.log(data);\n  };\n\n  function optionsMultiSelect(data_array, type) {\n    // TODO Refactory the repeated code in the repeated block\n    var input_box_array = [];\n\n    //console.log(\"[OPTION MULTI SELECT] array value\", data_array);\n    if (type === \"dates\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        input_box_options.label = item;\n        input_box_options.value = item;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"members\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"debatetitle\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"issues\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"annexure\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, annexure_title } = item;\n        input_box_options.label = annexure_title;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"portfolio\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    }\n    // console.info(\"[OPTION MULTI SELECT] output value\", input_box_array);\n    return input_box_array;\n  }\n\n  // Dates Session Value\n\n  const datesSession = currentBookStructure.dates_session\n    ? optionsMultiSelect(currentBookStructure.dates_session, \"dates\")\n    : [];\n\n  // Members Session Value\n  const membersSection = debateParticipants\n    ? optionsMultiSelect(debateParticipants, \"members\")\n    : [];\n\n  // Debate Title Value\n  const debateTitlesObject = debateTitles\n    ? optionsMultiSelect(debateTitles, \"debatetitle\")\n    : [];\n\n  // Issues Value\n  const issuesObject = issuesItems\n    ? optionsMultiSelect(issuesItems, \"issues\")\n    : [];\n\n  // Portfolio Value\n  const portfolioObject = portfolioItems\n    ? optionsMultiSelect(portfolioItems, \"portfolio\")\n    : [];\n\n  const annexureObject = annexureItems\n    ? optionsMultiSelect(annexureItems, \"annexure\")\n    : [];\n\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [selectedDebateTitle, setSelectedDebateTitle] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedIssues, setSelectedIssues] = useState([]);\n  const [selectedQuestioner, setSelectedQuestioner] = useState([]);\n  const [selectedMinister, setSelectedMinister] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState([]);\n  const [selectedAnnexure, setSelectedAnnexure] = useState([]);\n  // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n  function getUniqueListBy(arr, key) {\n    //  Array to remove the duplicate entries in the object\n    return [...new Map(arr.map((item) => [item[key], item])).values()];\n  }\n\n  useEffect(() => {\n    const selectDatesInst = selectedDates ? selectedDates[0] : \"\";\n    onChangeMultiSelect(selectDatesInst, \"dates\");\n    //setSelectedDates(getUniqueListBy(selectedDates, \"value\"));\n  }, [selectedDates]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMembers, \"members\");\n    // setSelectedDates(getUniqueListBy(selectedMembers, \"value\"));\n  }, [selectedMembers]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedDebateTitle, \"debatetitle\");\n  }, [selectedDebateTitle]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedIssues, \"issues\");\n  }, [selectedIssues]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedQuestioner, \"questioner\");\n  }, [selectedQuestioner]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMinister, \"minister\");\n  }, [selectedMinister]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedPortfolio, \"portfolio\");\n  }, [selectedPortfolio]);\n\n  useEffect(() => {\n    onChangeMultiSelect(selectedAnnexure, \"annexure\");\n  }, [selectedAnnexure]);\n\n  useEffect(() => {\n    // console.log(\"[Aneexure Items] \", annexureItems);\n  }, [annexureItems]);\n\n  if (\n    !(\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) &&\n    currentItem.debate_title_subject != \"\" &&\n    !selectedDebateTitle.length >= 1\n  ) {\n    // Select Debate Title\n    const debate_title_state = setMultiSelectFromState(\n      currentItem.debate_title_subject,\n      debateTitlesObject,\n      selectedDebateTitle,\n      setSelectedDebateTitle\n    );\n    // setSelectedDebateTitle([]);\n    // debate_title_state.map((item) => selectedDebateTitle.push(item));\n\n    // // Select Minister Portfolio\n    setMultiSelectFromState(\n      currentItem.minister_portfolio,\n      portfolioObject,\n      selectedPortfolio,\n      setSelectedPortfolio\n    );\n    // //setSelectedPortfolio(unique_element(selectedPortfolio));\n\n    // // Select Minister Name\n    setMultiSelectFromState(\n      currentItem.minister_name,\n      membersSection,\n      selectedMinister,\n      setSelectedMinister\n    );\n    // //setSelectedMinister((selectedMinister));\n\n    // // Select Questioner's Name\n    setMultiSelectFromState(\n      currentItem.questioner_name,\n      membersSection,\n      selectedQuestioner,\n      setSelectedQuestioner\n    );\n\n    // //setSelectedQuestioner((selectedQuestioner));\n\n    // // Select Debate Participants Name\n    setMultiSelectFromState(\n      currentItem.debate_participants,\n      membersSection,\n      selectedMembers,\n      setSelectedMembers\n    );\n\n    // // setSelectedMembers((selectedMembers));\n\n    // // Select Annexure's\n    setMultiSelectFromState(\n      currentItem.annexure,\n      annexureObject,\n      selectedAnnexure,\n      setSelectedAnnexure\n    );\n    // //setSelectedAnnexure((selectedAnnexure));\n    // // Select Issues\n    setMultiSelectFromState(\n      currentItem.issues_section,\n      issuesObject,\n      selectedIssues,\n      setSelectedIssues\n    );\n\n    // // setSelectedIssues((selectedIssues));\n\n    // // Select Dates\n    setMultiSelectFromStateDate(\n      currentItem.debate_section_date,\n      datesSession,\n      selectedDates,\n      setSelectedDates\n    );\n    //setSelectedDates((selectedDates));\n  }\n\n  const setState_function_array = [\n    setSelectedDates,\n    setSelectedMembers,\n    setSelectedDebateTitle,\n    setSelectedIssues,\n    setSelectedQuestioner,\n    setSelectedQuestioner,\n    setSelectedMinister,\n    setSelectedPortfolio,\n    setSelectedAnnexure,\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addPart1-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={headerStyle}>\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() =>\n                  formClearSteps(\n                    setInputFieldsToNull_array,\n                    clearcurrentMetadataSection,\n                    setState_function_array\n                  )\n                }\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Start Page\"\n                  name=\"start_page\"\n                  value={currentItem.start_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"start_page\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Start Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n\n                <TextFieldGroup\n                  //placeholder={placeholderValue.placeHolderKannada}\n                  placeholder=\"End Page\"\n                  name=\"end_page\"\n                  value={currentItem.end_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"end_page\"\n                  //labelText={placeholderValue.placeHolderKannada}\n                  labelText=\"End Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  inline_style=\"ml-4\"\n                />\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Date</label>\n                    <MultiSelect\n                      options={datesSession}\n                      value={selectedDates}\n                      onChange={setSelectedDates}\n                      labelledBy={\"Select Date\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Participants</label>\n                    <MultiSelect\n                      options={membersSection}\n                      value={selectedMembers}\n                      onChange={setSelectedMembers}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Title</label>\n                    <MultiSelect\n                      options={debateTitlesObject}\n                      value={selectedDebateTitle}\n                      onChange={setSelectedDebateTitle}\n                      labelledBy={\"Select Debate Title Subject\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Debate Subject</label>\n                    <TextAreaField\n                      name=\"debate_subject_kan\"\n                      placeholder=\"Enter the Debate Subject\"\n                      value={currentItem.debate_subject_kan}\n                      onChange={onChange}\n                      id=\"text_field\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Issues</label>\n                    <MultiSelect\n                      options={issuesObject}\n                      value={selectedIssues}\n                      onChange={setSelectedIssues}\n                      labelledBy={\"Select Issues's\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\" style={{ display: \"flex\" }}>\n                  <div className=\"col-6\">\n                    <TextFieldGroup\n                      // placeholder={placeholderValue.placeHolderEnglish}\n                      placeholder=\"Question Number\"\n                      name=\"question_number\"\n                      value={currentItem.question_number}\n                      onChange={onChange}\n                      error={false}\n                      id=\"question_number\"\n                      // labelText={placeholderValue.placeHolderEnglish}\n                      labelText=\"Question Number\"\n                      formWidth=\"col-md\"\n                      required={true}\n                    />\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Questioner Name</label>\n                      <MultiSelect\n                        options={membersSection}\n                        value={selectedQuestioner}\n                        onChange={setSelectedQuestioner}\n                        labelledBy={\"Select Debate Participants\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\" style={{ display: \"flex\" }}>\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Minister's Name</label>\n                      <MultiSelect\n                        options={membersSection}\n                        value={selectedMinister}\n                        onChange={setSelectedMinister}\n                        labelledBy={\"Select Minister's Name\"}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-6\">\n                    <div className=\"form-group\">\n                      <label>Minister's Portfolio</label>\n                      <MultiSelect\n                        options={portfolioObject}\n                        value={selectedPortfolio}\n                        onChange={setSelectedPortfolio}\n                        labelledBy={\"Select Portfolio\"}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Annexure's</label>\n                    {\n                      //console.info(\"[annexure object]\", annexureObject)\n                    }\n                    <MultiSelect\n                      options={annexureObject}\n                      value={selectedAnnexure}\n                      onChange={setSelectedAnnexure}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={format(\n                    new Date(currentItem.modified_time),\n                    \"dd/MM/yyyy\"\n                  )}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={DeleteSectionMetadata}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() =>\n                    formClearSteps(\n                      setInputFieldsToNull_array,\n                      clearcurrentMetadataSection,\n                      setState_function_array\n                    )\n                  }\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSectionMetadata}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadata,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n};\n\nexport default MetadataSectionModal;\n","// Book Types\n\nexport const ADD_BOOK_STRUCT = \"ADD_BOOK_STRUCT\";\nexport const DELETE_BOOK_STRUCT = \"DELETE_BOOK_STRUCT\";\nexport const GET_BOOK_STRUCT_ALL = \"GET_BOOK_STRUCT_ALL\";\nexport const BOOK_STRUCT_ERROR = \"BOOK_STRUCT_ERROR\";\n\n//Auth Types\n\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n\n// Alert Types\n\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n\n// Error Types\n\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const REMOVE_ERROR = \"REMOVE ERRORS\";\n\n// METADATA SPEAKER ERRORS\n\nexport const ADD_SPEAKER = \"ADD_SPEAKER\";\nexport const SPEAKER_ERROR = \"SPEAKER_ERROR\";\nexport const GET_SPEAKER_ALL = \"GET_SPEAKER_ALL\";\nexport const DELETE_SPEAKER = \"DELETE_SPEAKER\";\n\n// GET CURRENT METADATA ITEM\n\nexport const GET_CURRENT_ITEM = \"GET_CURRENT_ITEM\";\nexport const GET_CURRENT_ITEM_ERROR = \"GET_CURRENT_ITEM_ERROR\";\nexport const SET_CURRENT_ITEM_NULL = \"SET_CURRENT_ITEM_NULL\";\n\n// METADATA MEMBER PARTICIAPANTS\n\nexport const ADD_MEMBER = \"ADD_MEMBER\";\nexport const MEMBER_ERROR = \"MEMBER_ERROR\";\nexport const GET_MEMBER_ALL = \"GET_MEMBER_ALL\";\nexport const DELETE_MEMBER = \"DELETE_MEMBER\";\n\n// Metadata Debate Title\n\nexport const ADD_DEBATE_TITLE = \"ADD_DEBATE_TITLE\";\nexport const DEBATE_TITLE_ERROR = \"DEBATE_TITLE_ERROR\";\nexport const GET_DEBATE_TITLE_ALL = \"GET_DEBATE_TITLE_ALL\";\nexport const DELETE_DEBATE_TITLE = \"DELETE_DEBATE_TITLE\";\n\n// Metadata Ministries/Portfolio\n\nexport const ADD_PORTFOLIO = \"ADD_DEBATE_TITLE\";\nexport const PORTFOLIO_ERROR = \"PORTFOLIO_ERROR\";\nexport const GET_PORTFOLIO_ALL = \"GET_PORTFOLIO_ALL\";\nexport const DELETE_PORTFOLIO = \"DELETE_PORTFOLIO\";\n\n// Metadata Issues\n\nexport const ADD_ISSUES = \"ADD_ISSUES\";\nexport const ISSUES_ERROR = \"ISSUES_ERROR\";\nexport const GET_ISSUES_ALL = \"GET_ISSUES_ALL\";\nexport const DELETE_ISSUES = \"DELETE_ISSUES\";\n\n// Metadata Tags\n\nexport const ADD_TAGS = \"ADD_TAGS\";\nexport const TAGS_ERROR = \"TAGS_ERROR\";\nexport const GET_TAGS_ALL = \"GET_TAGS_ALL\";\nexport const DELETE_TAGS = \"DELETE_TAGS\";\n\n// GET CURRENT BOOK\n\nexport const GET_CURRENT_BOOK_STRUCTURE = \"GET_CURRENT_BOOK_STRUCTURE\";\nexport const GET_CURRENT_BOOK_STRUCTURE_ERROR =\n  \"GET_CURRENT_BOOK_STRUCTURE_ERROR\";\n\n//Add Annexure's\n\nexport const GET_ANNEXURE_FOR_BOOK = \"GET_ANNEXURE_FOR_BOOK\";\nexport const ANNEXURE_ERROR = \"ANNEXURE_ERROR\";\nexport const DELETE_ANNEXURE_ID = \"DELETE_ANNEXURE_ID\";\nexport const GET_CURRENT_ANNEXURE = \"GET_CURRENT_ANNEXURE\";\nexport const CLEAR_CURRENT_ANNEXURE = \"CLEAR_CURRENT_ANNEXURE\";\n\n//Add Metadata Actions\n\nexport const GET_METADATA_FOR_BOOK = \"GET_METADATA_FOR_BOOK\";\nexport const METADATA_ERROR = \"METADATA_ERROR\";\nexport const DELETE_METADATA_ID = \"DELETE_METADATA_ID\";\nexport const GET_CURRENT_METADATA = \"GET_CURRENT_METADATA\";\nexport const CLEAR_CURRENT_METADATA_SECTION = \"CLEAR_CURRENT_METADATA_SECTION\";\n","import React, { useEffect, useContext, Fragment, useState } from \"react\";\nimport swal from \"sweetalert\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { format } from \"date-fns\";\n// https://github.com/harshzalavadiya/react-multi-select-component#readme\n// https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport TextAreaField from \"../../common/TextAreaFieldGroup\";\n\nimport SelectListGroup from \"../../common/SelectListGroup\";\nimport MultiSelectInput from \"../../common/MultiSelectInputGroup.component\";\nimport MultiSelectInputMember from \"../../common/MultiSelectInputGroupMember.component\";\n\nimport BookContext from \"../../../context/book/bookContext\";\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  metadataStateObject,\n  metadataStateObjectPart1,\n  setInputfieldToNull,\n} from \"../../../constants/index\";\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n} from \"../../../context/types\";\n\nconst MetadataSectionModalPart2 = ({\n  modalTitle,\n  onChange,\n  onChangeMultiSelect,\n  currentItem,\n  setCurrentItem,\n  attribute,\n  loading,\n  setLoading,\n  AddItem,\n  onDelete,\n}) => {\n  const bookContext = useContext(BookContext);\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadata,\n    clearcurrentMetadataSection,\n    currentBookStructure,\n    annexureItems,\n  } = bookContext;\n\n  const {\n    debateParticipants,\n    getItems,\n    debateTitles,\n    issuesItems,\n    tagsItems,\n    portfolioItems,\n\n    //[{\"status\":true,\"_id\":\"5fc0dde916ba283e4af4e72b\",\"book_id_num\":1,\"annexure_title\":\"Cauvery Issue\",\"start_page\":12,\"end_page\":13,\"last_modified_time\":\"2020-11-27T11:07:21.595Z\",\"__v\":0}]\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  // Const Add Section\n\n  const AddSectionMetadata = () => {\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n    AddItem();\n  };\n  // Const Delete Section\n  const DeleteSectionMetadata = async () => {\n    await onDelete();\n    formClearSteps(\n      setInputFieldsToNull_array,\n      clearcurrentMetadataSection,\n      setState_function_array\n    );\n  };\n\n  const setInputFieldsToNull_array = [\n    \"start_page\",\n    \"end_page\",\n    \"text_field\",\n    \"question_number\",\n  ];\n\n  const formClearSteps = (\n    input_text_id,\n    stateClearFunction,\n    local_state_clear_array\n  ) => {\n    //  This function will clear all input fields & input state after the submission or cancel\n    //setInputfieldToNull(input_text_id);\n    setCurrentItem(metadataStateObject);\n    setInputfieldToNull(input_text_id);\n    stateClearFunction();\n    local_state_clear_array.map((setstateFunc) => {\n      setstateFunc([]);\n    });\n  };\n\n  const setMultiSelectFromState = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState,\n    selectedStateFunction,\n    filterFunction\n  ) => {\n    // Design the function to compare the object id in the metadata state with the objectmetadata\n\n    function filterObject(metadataState, objectMeta, usestateVar) {\n      let metaObject;\n\n      objectMeta.map((meta) => {\n        if (meta.value === metadataState) {\n          metaObject = meta;\n        } else {\n          //      console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n\n    // Set Selected Debate Title\n    if (typeof metadataStateVar === \"string\") {\n      // let result_selected_values_array = [];\n      let result_selected_values = filterObject(\n        metadataStateVar,\n        objectMetadata,\n        selectedState\n      );\n\n      //console.info(\"[DEBUG] for set state to part1\", result_selected_values);\n\n      if (result_selected_values) {\n        selectedState.push(result_selected_values);\n        // return result_selected_values;\n      }\n    } else if (typeof metadataStateVar === \"object\") {\n      metadataStateVar.map((state) => {\n        let result_selected_values = filterObject(\n          state,\n          objectMetadata,\n          selectedState\n        );\n        if (\n          result_selected_values != undefined ||\n          result_selected_values != null\n        ) {\n          // selectedState.map((item) => {\n          //   if (item.value != result_selected_values.value) {\n          //     selectedState.push(result_selected_values);\n          //   }\n          // });\n          if (result_selected_values) {\n            selectedState.push(result_selected_values);\n          }\n        }\n      });\n      // console.info(\"[DEBUG] Selected State for given State is\", selectedState);\n      //let newState = filterFunction(selectedState);\n      // selectedState = newState;\n      //return newState;\n      //console.info(\"[DEBUG] Selected State Array \", selectedState);\n      // selectedStateFunction([]);\n      // newState.map((item) => selectedState.push(item));\n\n      // selectedStateFunction([...newState]);\n    }\n  };\n\n  const setMultiSelectFromStateDate = (\n    metadataStateVar,\n    objectMetadata,\n    selectedState\n  ) => {\n    function filterObject(metadataState, objectMeta) {\n      let metaObject;\n      let newDate = format(new Date(metadataState), \"dd-MM-yyyy\");\n\n      objectMeta.map((meta) => {\n        if (meta.value === newDate) {\n          metaObject = meta;\n        } else {\n          // console.info(\"[DEBUG filterObject] the value of the if Test Failed \");\n        }\n      });\n\n      return metaObject;\n    }\n    // console.info(\n    //   \"[DEBUG filterObject Dates] the value of Objectmeta \",\n    //   objectMetadata\n    // );\n    let result_selected_values = filterObject(metadataStateVar, objectMetadata);\n    selectedState.push(result_selected_values);\n  };\n\n  useEffect(() => {\n    //https://stackoverflow.com/questions/47019199/why-does-async-await-work-with-react-setstate\n    if (\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) {\n      setCurrentItem(metadataStateObject);\n\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    } else {\n      setCurrentItem(currentMetadata);\n\n      // setMultiSelectFromState(currentMetadata);\n      getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n      getItems(\n        \"debatetitle\",\n        GET_DEBATE_TITLE_ALL,\n        DEBATE_TITLE_ERROR,\n        \"debateTitle\"\n      );\n      getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n      getItems(\n        \"portfolio\",\n        GET_PORTFOLIO_ALL,\n        PORTFOLIO_ERROR,\n        \"portfolioMinistry\"\n      );\n    }\n  }, [currentMetadata]);\n\n  const buttonValue = (currentMetadata, attribute) => {\n    if (!(Object.keys(currentMetadata).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentMetadata).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  const headerStyle = {\n    backgroundColor: \"#f44336\",\n  };\n\n  const onSelect = (data) => {\n    console.log(data);\n  };\n\n  const onRemove = (data) => {\n    console.log(data);\n  };\n\n  function optionsMultiSelect(data_array, type) {\n    // TODO Refactory the repeated code in the repeated block\n    var input_box_array = [];\n\n    //console.log(\"[OPTION MULTI SELECT] array value\", data_array);\n    if (type === \"dates\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        input_box_options.label = item;\n        input_box_options.value = item;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"members\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"debatetitle\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"issues\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"annexure\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, annexure_title } = item;\n        input_box_options.label = annexure_title;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    } else if (type === \"portfolio\") {\n      data_array.map((item) => {\n        var input_box_options = {};\n        const { _id, name_eng } = item;\n        input_box_options.label = name_eng;\n        input_box_options.value = _id;\n        input_box_array.push(input_box_options);\n      });\n    }\n    // console.info(\"[OPTION MULTI SELECT] output value\", input_box_array);\n    return input_box_array;\n  }\n\n  // Dates Session Value\n\n  const datesSession = currentBookStructure.dates_session\n    ? optionsMultiSelect(currentBookStructure.dates_session, \"dates\")\n    : [];\n\n  // Members Session Value\n  const membersSection = debateParticipants\n    ? optionsMultiSelect(debateParticipants, \"members\")\n    : [];\n\n  // Debate Title Value\n  const debateTitlesObject = debateTitles\n    ? optionsMultiSelect(debateTitles, \"debatetitle\")\n    : [];\n\n  // Issues Value\n  const issuesObject = issuesItems\n    ? optionsMultiSelect(issuesItems, \"issues\")\n    : [];\n\n  // Portfolio Value\n  const portfolioObject = portfolioItems\n    ? optionsMultiSelect(portfolioItems, \"portfolio\")\n    : [];\n\n  const annexureObject = annexureItems\n    ? optionsMultiSelect(annexureItems, \"annexure\")\n    : [];\n\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [selectedDebateTitle, setSelectedDebateTitle] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedIssues, setSelectedIssues] = useState([]);\n  const [selectedQuestioner, setSelectedQuestioner] = useState([]);\n  const [selectedMinister, setSelectedMinister] = useState([]);\n  const [selectedPortfolio, setSelectedPortfolio] = useState([]);\n  const [selectedAnnexure, setSelectedAnnexure] = useState([]);\n  // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n\n  // function getUniqueListBy(arr, key) {\n  //   //  Array to remove the duplicate entries in the object\n  //   return [...new Map(arr.map((item) => [item[key], item])).values()];\n  // }\n\n  useEffect(() => {\n    const selectDatesInst = selectedDates ? selectedDates[0] : \"\";\n    onChangeMultiSelect(selectDatesInst, \"dates\");\n    //setSelectedDates(getUniqueListBy(selectedDates, \"value\"));\n  }, [selectedDates]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMembers, \"members\");\n    // setSelectedDates(getUniqueListBy(selectedMembers, \"value\"));\n  }, [selectedMembers]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedDebateTitle, \"debatetitle\");\n  }, [selectedDebateTitle]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedIssues, \"issues\");\n  }, [selectedIssues]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedQuestioner, \"questioner\");\n  }, [selectedQuestioner]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedMinister, \"minister\");\n  }, [selectedMinister]);\n  useEffect(() => {\n    onChangeMultiSelect(selectedPortfolio, \"portfolio\");\n  }, [selectedPortfolio]);\n\n  useEffect(() => {\n    onChangeMultiSelect(selectedAnnexure, \"annexure\");\n  }, [selectedAnnexure]);\n\n  useEffect(() => {\n    // console.log(\"[Aneexure Items] \", annexureItems);\n  }, [annexureItems]);\n\n  if (\n    !(\n      Object.keys(currentMetadata).length === 0 &&\n      currentMetadata.constructor === Object\n    ) &&\n    currentItem.debate_title_subject != \"\" &&\n    !selectedDebateTitle.length >= 1\n  ) {\n    // Select Debate Title\n    const debate_title_state = setMultiSelectFromState(\n      currentItem.debate_title_subject,\n      debateTitlesObject,\n      selectedDebateTitle,\n      setSelectedDebateTitle\n    );\n    // setSelectedDebateTitle([]);\n    // debate_title_state.map((item) => selectedDebateTitle.push(item));\n\n    // // Select Minister Portfolio\n    setMultiSelectFromState(\n      currentItem.minister_portfolio,\n      portfolioObject,\n      selectedPortfolio,\n      setSelectedPortfolio\n    );\n    // //setSelectedPortfolio(unique_element(selectedPortfolio));\n\n    // // Select Minister Name\n    setMultiSelectFromState(\n      currentItem.minister_name,\n      membersSection,\n      selectedMinister,\n      setSelectedMinister\n    );\n    // //setSelectedMinister((selectedMinister));\n\n    // // Select Questioner's Name\n    setMultiSelectFromState(\n      currentItem.questioner_name,\n      membersSection,\n      selectedQuestioner,\n      setSelectedQuestioner\n    );\n\n    // //setSelectedQuestioner((selectedQuestioner));\n\n    // // Select Debate Participants Name\n    setMultiSelectFromState(\n      currentItem.debate_participants,\n      membersSection,\n      selectedMembers,\n      setSelectedMembers\n    );\n\n    // // setSelectedMembers((selectedMembers));\n\n    // // Select Annexure's\n    setMultiSelectFromState(\n      currentItem.annexure,\n      annexureObject,\n      selectedAnnexure,\n      setSelectedAnnexure\n    );\n    // //setSelectedAnnexure((selectedAnnexure));\n    // // Select Issues\n    setMultiSelectFromState(\n      currentItem.issues_section,\n      issuesObject,\n      selectedIssues,\n      setSelectedIssues\n    );\n\n    // // setSelectedIssues((selectedIssues));\n\n    // // Select Dates\n    setMultiSelectFromStateDate(\n      currentItem.debate_section_date,\n      datesSession,\n      selectedDates,\n      setSelectedDates\n    );\n    //setSelectedDates((selectedDates));\n  }\n\n  const setState_function_array = [\n    setSelectedDates,\n    setSelectedMembers,\n    setSelectedDebateTitle,\n    setSelectedIssues,\n    setSelectedQuestioner,\n    setSelectedQuestioner,\n    setSelectedMinister,\n    setSelectedPortfolio,\n    setSelectedAnnexure,\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addPart2-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={headerStyle}>\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() =>\n                  formClearSteps(\n                    setInputFieldsToNull_array,\n                    clearcurrentMetadataSection,\n                    setState_function_array\n                  )\n                }\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Start Page\"\n                  name=\"start_page\"\n                  value={currentItem.start_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"start_page\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Start Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n\n                <TextFieldGroup\n                  //placeholder={placeholderValue.placeHolderKannada}\n                  placeholder=\"End Page\"\n                  name=\"end_page\"\n                  value={currentItem.end_page}\n                  onChange={onChange}\n                  error={false}\n                  id=\"end_page\"\n                  //labelText={placeholderValue.placeHolderKannada}\n                  labelText=\"End Page\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  inline_style=\"ml-4\"\n                />\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Date</label>\n                    <MultiSelect\n                      options={datesSession}\n                      value={selectedDates}\n                      onChange={setSelectedDates}\n                      labelledBy={\"Select Date\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Participants</label>\n                    <MultiSelect\n                      options={membersSection}\n                      value={selectedMembers}\n                      onChange={setSelectedMembers}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Title</label>\n                    <MultiSelect\n                      options={debateTitlesObject}\n                      value={selectedDebateTitle}\n                      onChange={setSelectedDebateTitle}\n                      labelledBy={\"Select Debate Title Subject\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Debate Subject</label>\n                    <TextAreaField\n                      name=\"debate_subject_kan\"\n                      placeholder=\"Enter the Debate Subject\"\n                      value={currentItem.debate_subject_kan}\n                      onChange={onChange}\n                      id=\"text_field\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Issues</label>\n                    <MultiSelect\n                      options={issuesObject}\n                      value={selectedIssues}\n                      onChange={setSelectedIssues}\n                      labelledBy={\"Select Issues's\"}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Ministry</label>\n                    <MultiSelect\n                      options={portfolioObject}\n                      value={selectedPortfolio}\n                      onChange={setSelectedPortfolio}\n                      labelledBy={\"Select Portfolio\"}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"form-group\">\n                    <label>Select Debate Annexure's</label>\n                    {\n                      //console.info(\"[annexure object]\", annexureObject)\n                    }\n                    <MultiSelect\n                      options={annexureObject}\n                      value={selectedAnnexure}\n                      onChange={setSelectedAnnexure}\n                      labelledBy={\"Select Debate Participants\"}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={format(\n                    new Date(currentItem.modified_time),\n                    \"dd/MM/yyyy\"\n                  )}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={DeleteSectionMetadata}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() =>\n                    formClearSteps(\n                      setInputFieldsToNull_array,\n                      clearcurrentMetadataSection,\n                      setState_function_array\n                    )\n                  }\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSectionMetadata}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadata,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModalPart2.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n};\n\nexport default MetadataSectionModalPart2;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport swal from \"sweetalert\";\nimport { format } from \"date-fns\";\n\nimport { SearchTableNew } from \"../../utils/SearchTableNew.component\";\nimport { modalHeaderBackColour } from \"../../constants\";\nimport BookContext from \"../../context/book/bookContext\";\nimport { metadataStateObject } from \"../../constants/index\";\nimport BookPart1Modal from \"./book-sections/BookPart1Modal.component\";\nimport BookPart2Modal from \"./book-sections/BookPart2Modal.component\";\n\nimport { CUSTOMER, styleDashBoardCard } from \"../../constants/index\";\n\nconst BookMetadataTable = () => {\n  const [metadataState, setMetadataState] = useState(metadataStateObject);\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const bookContext = useContext(BookContext);\n  const {\n    addSection,\n    editSection,\n    currentMetadata,\n    currentBookStructure,\n    clearcurrentMetadataSection,\n    deleteSection,\n    errors,\n    sectionalMetadataItems,\n    getMetadataItems,\n  } = bookContext;\n\n  useEffect(() => {\n    if (currentBookStructure.length !== 0) {\n      getMetadataItems(currentBookStructure.bookId);\n      // setAnnexureItem({\n      //   ...annexItem,\n      //   book_id_num: currentBookStructure.bookId,\n      // });\n    }\n  }, [currentBookStructure]);\n\n  // setMetadataState({\n  //   ...metadataState,\n  //   book_id: currentBookStructure.bookId,\n  // });\n\n  // if (currentBookStructure) {\n  //   console.info(\n  //     \"[DEBUG] Current BookStructure with book id \",\n  //     currentBookStructure.bookId\n  //   );\n\n  //   setMetadataState({\n  //     ...metadataState,\n  //     book_id: currentBookStructure.bookId,\n  //   });\n  // }\n\n  // console.info(\n  //   (\"2020-06-12T18:30:00.000Z\").toDateString())\n  // );\n\n  const onChange = (e) => {\n    setMetadataState({ ...metadataState, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeMultiSelect = (valueMultiselect, type) => {\n    // Refer https://stackoverflow.com/questions/5619202/converting-a-string-to-a-date-in-javascript\n\n    // To filter out duplicate arrays\n    function uniq_array(a) {\n      return Array.from(new Set(a));\n    }\n\n    if (valueMultiselect) {\n      if (type === \"dates\") {\n        const { value } = valueMultiselect;\n        // console.info(\"[DEBUG] Handle Multiselect Dates to String value\", value);\n        let mydateParts = value.split(\"-\");\n        // Please pay attention to the month (parts[1]); JavaScript counts months from 0:\n        // January - 0, February - 1, etc.\n        let dateinformat = new Date(\n          mydateParts[2],\n          mydateParts[1] - 1,\n          mydateParts[0]\n        );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String value\",\n        //   dateinformat\n        // );\n        setMetadataState({\n          ...metadataState,\n          debate_section_date: dateinformat,\n        });\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat.toISOString()\n        // );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat\n        // );\n        // console.info(\n        //   \"[DEBUG] Handle Multiselect Dates to String format\",\n        //   dateinformat.toDateString()\n        // );\n      }\n\n      if (type === \"members\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n\n        // let value_array_set = Array.from(new Set(value_array));\n\n        setMetadataState({\n          ...metadataState,\n          debate_participants: value_array,\n        });\n      }\n      if (type === \"debatetitle\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          debate_title_subject: value_array[0],\n        });\n      }\n      if (type === \"issues\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          issues_section: value_array,\n        });\n      }\n\n      if (type === \"questioner\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          questioner_name: value_array[0],\n        });\n      }\n\n      if (type === \"minister\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          minister_name: value_array[0],\n        });\n      }\n      if (type === \"portfolio\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          minister_portfolio: value_array[0],\n        });\n      }\n\n      if (type === \"annexure\") {\n        let value_array = [];\n\n        valueMultiselect.map((valueArray) => {\n          let val;\n          val = valueArray.value;\n\n          value_array.push(val);\n        });\n        setMetadataState({\n          ...metadataState,\n          annexure: value_array[0],\n        });\n      }\n    }\n\n    // let value = Array.from(e.target.selectedOptions, (option) => option.value);\n    // console.log(\"[Handle Changer] the value parameter\", value);\n\n    // setMetadataState({ ...metadataState, [e.target.name]: value });\n  };\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editSection(_id);\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const initMetadataState = () => {\n    // Intializing the Sectional Metadata State\n    setMetadataState(metadataStateObject);\n    setLoading({ buttonLoading: false });\n  };\n\n  const getTableItems = (_id, sectiontype) => {\n    let modalTarget;\n    if (sectiontype === \"part1\") {\n      modalTarget = \"#addPart1-modal-metadata\";\n    } else {\n      modalTarget = \"#addPart2-modal-metadata\";\n    }\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target={modalTarget}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Book Id\",\n      Footer: \"Book Id\",\n      accessor: \"book_id\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Section Type\",\n      Footer: \"Section Type\",\n      accessor: \"section_type\",\n      sticky: \"left\",\n      Cell: ({ value }) => {\n        let classes = \"badge \";\n        if (value === \"part1\") {\n          classes += `badge-danger`;\n        } else {\n          classes += \"badge-success\";\n        }\n        return (\n          <span className={classes}>\n            {value === \"part1\" ? \"Part1 Q & A\" : \"Part2 Other Q & A\"}\n          </span>\n        );\n      },\n    },\n    {\n      Header: \"Debate Title\",\n      Footer: \"Debate Title\",\n      accessor: \"debate_title_subject\",\n      Cell: ({ value }) => {\n        if (value === undefined) {\n          return \"NA\";\n        } else {\n          return value.name_eng;\n        }\n      },\n    },\n    {\n      Header: \"Debate Subject\",\n      Footer: \"Debate Subject\",\n      accessor: \"debate_subject_kan\",\n    },\n    {\n      Header: \"Debate Date\",\n      Footer: \"Debate Date\",\n      accessor: \"debate_section_date\",\n      Cell: ({ value }) => {\n        return format(new Date(value), \"dd/MM/yyyy\");\n      },\n    },\n    // {\n    //   Header: \"Debate Participants\",\n    //   Footer: \"Debate Participants\",\n    //   accessor: \"debate_participants\",\n    //   Cell: ({ value }) => {\n    //     // console.info(\"[Table Debate Particiapant] \", value);\n    //     let itemArray = [];\n    //     value.map((item) => {\n    //       // console.info(\"[Table Debate Particiapant Map] \", item);\n    //       itemArray.push(item.name_eng);\n    //     });\n    //     //console.info(\"[Table Debate Particiapant ItemArray] \", itemArray);\n    //     const members = itemArray.join(\", \");\n    //     return members;\n    //   },\n    // },\n\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: (props) => {\n        // console.info(\n        //   \" [DEBUG Action Column Table ]\",\n        //   props.cell.row.original.section_type\n        // );\n        //  Access Section Type in props props.cell.row.original.section_type\n        return getTableItems(props.value, props.cell.row.original.section_type);\n      },\n    },\n  ];\n\n  const setSectionTypeState = (type) => {\n    if (type === \"part1\") {\n      setMetadataState({\n        ...metadataState,\n        section_type: type,\n      });\n      // console.info(\"[SET SECTION TYPE] call \", metadataState);\n    } else {\n      setMetadataState({\n        ...metadataState,\n        section_type: type,\n      });\n    }\n  };\n\n  const AddSection = (bookid, sectiontype) => {\n    // Edit Book Section Action\n\n    if (Object.keys(currentMetadata).length !== 0) {\n      setLoading({ buttonLoading: true });\n\n      //setSectionTypeState(sectiontype);\n      // Setting Section type Part1 Q & A or Other than Q & A\n      // if (sectiontype == \"part1\") {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part1\",\n      //   });\n      // } else {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part2\",\n      //   });\n      // }\n      const currentItemInstance = metadataState;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_v\"];\n      currentItemInstance.book_id = currentBookStructure.bookId;\n      currentItemInstance.struct_id = currentBookStructure._id;\n\n      //     struct_id: currentBookStructure._id,\n      if (sectiontype === \"part1\") {\n        currentItemInstance.section_type = \"part1\";\n      } else {\n        currentItemInstance.section_type = \"part2\";\n      }\n\n      addSection(\n        currentItemInstance,\n        metadataState.book_id,\n        metadataState._id\n      ).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initMetadataState();\n          clearcurrentMetadataSection();\n          swal(\n            \"Good job!\",\n            \"The Book Section edited Successfully!!!\",\n            \"success\"\n          );\n          setMetadataState(metadataStateObject);\n        } else {\n          initMetadataState();\n          swal(\n            \"Awww Snap !!!\",\n            \"Book Section not edited successfully !!! Please Try Again \",\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Book Section\n\n      setLoading({ buttonLoading: true });\n\n      //setSectionTypeState(sectiontype);\n      // // Setting Section type Part1 Q & A or Other than Q & A\n      // if (sectiontype == \"part1\") {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part1\",\n      //   });\n      // } else {\n      //   setMetadataState({\n      //     ...metadataState,\n      //     section_type: \"part2\",\n      //   });\n      // }\n\n      const currentItemInstance = metadataState;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_id\"];\n      currentItemInstance.book_id = currentBookStructure.bookId;\n      currentItemInstance.struct_id = currentBookStructure._id;\n      if (sectiontype === \"part1\") {\n        currentItemInstance.section_type = \"part1\";\n      } else {\n        currentItemInstance.section_type = \"part2\";\n      }\n\n      //      console.info(\"[Call from Book Set Action] \", metadataState);\n\n      addSection(currentItemInstance, currentItemInstance.bookid).then(\n        (responseMsg) => {\n          if (responseMsg === \"success\") {\n            initMetadataState();\n            swal(\n              \"Good job!\",\n              \"The Book Section Added is added successfully !!!\",\n              \"success\"\n            );\n            setMetadataState(metadataStateObject);\n          } else {\n            initMetadataState();\n            swal(\n              \"Awww Snap !!!\",\n              \"The Book Section was not added successfully,Please Try Again !!!\",\n              \"error\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  const DeleteMetadata = () => {\n    //const _id = currentMetadata._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadata.debate_subject_kan} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteSection(currentBookStructure.bookId, currentMetadata._id)\n          .then((msg) => {\n            if (msg === \"success\") {\n              clearcurrentMetadataSection();\n              swal(\n                `${currentMetadata.debate_subject_kan}  has been deleted !!!`,\n                {\n                  icon: \"success\",\n                }\n              );\n            } else {\n              swal(\n                `Poof! ${currentMetadata.debate_subject_kan} cannot be deleted .Contact System Administrator   `,\n                {\n                  icon: \"error\",\n                }\n              );\n            }\n          })\n          .catch((err) =>\n            console.log(\"[DEBUG-Delete Metadata] Logging info \", err)\n          );\n      } else {\n        swal(` ${currentMetadata.debate_title_subject}  is safe!`);\n      }\n    });\n  };\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Sections's</b>{\" \"}\n        </h3>\n        <div className=\"card-tools\"></div>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n\n      <div className=\"card-body\">\n        <SearchTableNew\n          tableHeaderName=\"Added Metadata Section's\"\n          CUSTOMER={CUSTOMER}\n          MetadataType=\"metadata\"\n          columns_table={COLUMNS}\n          table_data={sectionalMetadataItems}\n          number_sections={sectionalMetadataItems.length}\n        />\n      </div>\n\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n      <BookPart1Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part1] Question & Answer's\"\n            : \"Add [Part1] Question & Answer's\"\n        }\n        onChange={onChange}\n        onChangeMultiSelect={handleChangeMultiSelect}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Question & Answer's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(metadataState.book_id, \"part1\")}\n        onDelete={(e) => DeleteMetadata()}\n      />\n      <BookPart2Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part2]Other than Question & Answer's\"\n            : \"Add [Part2]Other than Question & Answer's\"\n        }\n        onChange={onChange}\n        onChangeMultiSelect={handleChangeMultiSelect}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Other Question & Answer's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(metadataState.book_id, \"part2\")}\n        onDelete={(e) => DeleteMetadata()}\n      />\n      {/* /.card-footer*/}\n      {/* <BookPart2Modal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"Add [Part2] Other than Question & Answer's\"\n            : \"Add [Part2] Other than Question & Answer's\"\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={metadataState}\n        attribute=\"Other than (Q & A)\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setMetadataState}\n        setLoading={setLoading}\n        AddItem={(e) => AddSection(currentBookStructure.bookId)}\n        onDelete={(e) => DeleteMetadata()}\n      /> */}\n    </div>\n  );\n};\n\nexport default BookMetadataTable;\n","import React, { useEffect, useContext, Fragment } from \"react\";\nimport swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../common/TextFieldGroup\";\nimport SelectListGroup from \"../../common/SelectListGroup\";\n\nimport BookContext from \"../../../context/book/bookContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const bookContext = useContext(BookContext);\n\n  const {\n    currentAnnexure,\n    clearcurrentAnnexure,\n    currentBookStructure,\n  } = bookContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n\n  useEffect(() => {\n    if (\n      Object.keys(currentAnnexure).length === 0 &&\n      currentAnnexure.constructor === Object\n    ) {\n      setCurrentItem({\n        _id: null,\n        book_id_num: null,\n        annexure_title: null,\n        start_page: null,\n        end_page: null,\n        status: null,\n\n        last_modified_time: null,\n        modified_user: null,\n      });\n    } else {\n      setCurrentItem(currentAnnexure);\n    }\n  }, [currentAnnexure]);\n\n  const buttonValue = (currentannexure, attribute) => {\n    if (!(Object.keys(currentannexure).length === 0)) {\n      return `Edit ${attribute}`;\n    } else if (Object.keys(currentannexure).length === 0) {\n      return `Add ${attribute}`;\n    }\n    // } else if (!Object.keys(currentAnnexure).length === 0 && buttonLoading) {\n    //   return `Editing ${attribute} ...`;\n    // } else if (currentAnnexure && buttonLoading) {\n    //   return `Adding Annexure ...`;\n    // }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addAnnexure-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => clearcurrentAnnexure()}\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Book Id\"\n                  name=\"bookId\"\n                  value={currentBookStructure.bookId}\n                  onChange={onChange}\n                  error={false}\n                  id=\"bookId\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Book ID\"\n                  formWidth=\"col-md\"\n                  required={true}\n                  disabled=\"true\"\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Annexure Title\"\n                name=\"annexure_title\"\n                value={currentItem.annexure_title}\n                onChange={onChange}\n                error={false}\n                id=\"annexure_title\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Annexure Title\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Start Page\"\n                name=\"start_page\"\n                value={currentItem.start_page}\n                onChange={onChange}\n                error={false}\n                id=\"start_page\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Start Page\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"End Page\"\n                name=\"end_page\"\n                value={currentItem.end_page}\n                onChange={onChange}\n                error={false}\n                id=\"end_page\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"End Page\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentAnnexure,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { useState, useEffect, useContext } from \"react\";\n// import ReactFlexyTable from \"react-flexy-table\";\nimport swal from \"sweetalert\";\n//import \"react-flexy-table/dist/index.css\";\n//import deleteIcon from \"../icons/icons8-delete-24.png\";\n//import editIcon from \"../icons/icons8-eye-30.png\";\n\nimport { SearchTableNew } from \"../../utils/SearchTableNew.component\";\n\n//Import Book Context from Context\nimport BookContext from \"../../context/book/bookContext\";\n\n// Import Add Annexure Modal\n\nimport AnnexureModal from \"./book-sections/AnnexureModal.component\";\n\nimport {\n  CUSTOMER,\n  styleDashBoardCard,\n  modalHeaderBackColour,\n} from \"../../constants/index\";\nimport { CLEAR_CURRENT_ANNEXURE } from \"../../context/types\";\n\nconst AnnexureSummary = () => {\n  const bookContext = useContext(BookContext);\n  const {\n    annexureItems,\n    currentAnnexure,\n    currentBookStructure,\n    addAnnexure,\n    getAnnexureItems,\n    editAnnexure,\n    deleteAnnexure,\n    clearcurrentAnnexure,\n  } = bookContext;\n\n  useEffect(() => {\n    if (currentBookStructure.length !== 0) {\n      getAnnexureItems(currentBookStructure.bookId);\n      setAnnexureItem({\n        ...annexItem,\n        book_id_num: currentBookStructure.bookId,\n      });\n    }\n  }, [currentBookStructure]);\n\n  useEffect(() => {}, [annexureItems]);\n\n  const [annexItem, setAnnexureItem] = useState({\n    _id: null,\n    book_id_num: null,\n    annexure_title: null,\n    start_page: null,\n    end_page: null,\n    status: null,\n\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const onChange = (e) => {\n    setAnnexureItem({ ...annexItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editAnnexure(_id);\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addAnnexure-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initAnnexureState = () => {\n    // Intializing the Speaker State to Null\n    setAnnexureItem({\n      _id: null,\n      book_id_num: \"\",\n      annexure_title: \"\",\n      start_page: null,\n      end_page: null,\n      status: null,\n\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddAnnexure = (bookid) => {\n    // Edit Annexure Action\n\n    if (currentAnnexure) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = annexItem;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_v\"];\n\n      addAnnexure(currentItemInstance, bookid).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initAnnexureState();\n          clearcurrentAnnexure();\n          swal(\"Good job!\", \"The Annexure edited Successfully!!!\", \"success\");\n        } else {\n          initAnnexureState();\n          swal(\n            \"Awww Snap !!!\",\n            \"Annexure not edited successfully !!! Please Try Again \",\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = annexItem;\n      delete currentItemInstance[\"last_modified_time\"];\n      delete currentItemInstance[\"modified_user\"];\n      delete currentItemInstance[\"_id\"];\n\n      addAnnexure(currentItemInstance, bookid).then((responseMsg) => {\n        if (responseMsg === \"success\") {\n          initAnnexureState();\n          swal(\n            \"Good job!\",\n            \"The Annexure was added successfully !!!\",\n            \"success\"\n          );\n        } else {\n          initAnnexureState();\n          swal(\n            \"Awww Snap !!!\",\n            \"The Annexure was not added successfully !!!\",\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteAnnexure = () => {\n    const _id = currentAnnexure._id;\n    swal({\n      title: `Are you sure you want to delete ${currentAnnexure.annexure_title} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        deleteAnnexure(currentAnnexure._id, currentAnnexure.book_id_num)\n          .then((msg) => {\n            if (msg === \"success\") {\n              clearcurrentAnnexure();\n              swal(`${currentAnnexure.annexure_title}  has been deleted !!!`, {\n                icon: \"success\",\n              });\n            } else {\n              swal(\n                `Poof! ${currentAnnexure.annexure_title} cannot be deleted .Contact System Administrator   `,\n                {\n                  icon: \"error\",\n                }\n              );\n            }\n          })\n          .catch((err) =>\n            console.log(\"[DEBUG-Delete Annexure] Logging into \", err)\n          );\n      } else {\n        swal(` ${currentAnnexure.annexure_title}  is safe!`);\n      }\n    });\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Book Id (English)\",\n      Footer: \"Book Id (English)\",\n      accessor: \"book_id_num\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Annexure Title\",\n      Footer: \"Annexure Title\",\n      accessor: \"annexure_title\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Start Page\",\n      Footer: \"Start Page\",\n      accessor: \"start_page\",\n    },\n    {\n      Header: \"End Page\",\n      Footer: \"End Page\",\n      accessor: \"end_page\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  return (\n    <div className=\"card\" style={styleDashBoardCard}>\n      {/* Card Header Start */}\n      <div className=\"card-header\" style={modalHeaderBackColour(CUSTOMER)}>\n        <h3 className=\"card-title\">\n          <button\n            type=\"button\"\n            className=\"btn btn-tool\"\n            data-card-widget=\"collapse\"\n            data-toggle=\"tooltip\"\n            title=\"Collapse\"\n          >\n            <i className=\"fas fa-minus\" />\n          </button>{\" \"}\n          <b> Book Annexure's</b>{\" \"}\n        </h3>\n        <div className=\"card-tools\"></div>\n      </div>\n      {/* Card Header End */}\n      {/* Card Body Start */}\n\n      <div className=\"card-body\">\n        <SearchTableNew\n          tableHeaderName=\"Added Annexure's Table\"\n          CUSTOMER={CUSTOMER}\n          MetadataType=\"annexure\"\n          columns_table={COLUMNS}\n          table_data={annexureItems}\n        />\n      </div>\n\n      <div className=\"card-footer\">{/* Empty Footer */}</div>\n\n      {/* /.card-footer*/}\n      <AnnexureModal\n        modalTitle={CUSTOMER === \"KLA\" ? \"Add Annexure's\" : \"Add Annexure's\"}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={annexItem}\n        attribute=\"Annexure's\"\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setAnnexureItem}\n        setLoading={setLoading}\n        AddItem={(e) => AddAnnexure(currentBookStructure.bookId)}\n        onDelete={(e) => DeleteAnnexure()}\n      />\n    </div>\n  );\n};\n\nexport default AnnexureSummary;\n","import React, { useContext } from \"react\";\nimport AuthContext from \"../context/auth/authContext\";\n\nconst BreadCrumbsDashboard = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, logout, user } = authContext;\n  // const breadcrumbItem = (\n\n  // )\n  return (\n    <div className=\"content-header\">\n      <div className=\"container-fluid\">\n        <div className=\"row mb-2\">\n          <div className=\"col-sm-6\">\n            <h1 className=\"m-0 text-dark\">Welcome {user ? user.name : \"\"} </h1>\n          </div>\n          {/* /.col */}\n          <div className=\"col-sm-6\">\n            <ol className=\"breadcrumb float-sm-right\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"#\">Home</a>\n              </li>\n              <li className=\"breadcrumb-item active\">\n                <a href=\"#\">Dashboard V1</a>{\" \"}\n              </li>\n            </ol>\n          </div>\n          {/* /.col */}\n        </div>\n      </div>\n      {/* /.container-fluid */}\n    </div>\n  );\n};\n\nexport default BreadCrumbsDashboard;\n","import React from \"react\";\n\nimport \"./SidNav.styles.scss\";\n\nconst SideNav = () => {\n  return (\n    <div className=\"sideNav-content\">\n      <div id=\"mySidenav\" className=\"sidenav\">\n        <a\n          href=\"#\"\n          id=\"addAnnexure\"\n          data-toggle=\"modal\"\n          data-target=\"#addAnnexure-modal-metadata\"\n        >\n          Add Annexure\n        </a>\n        <a\n          href=\"#\"\n          id=\"part1\"\n          data-toggle=\"modal\"\n          data-target=\"#addPart1-modal-metadata\"\n        >\n          Add Part1(Q & A)\n        </a>\n        <a\n          href=\"#\"\n          id=\"part2\"\n          data-toggle=\"modal\"\n          data-target=\"#addPart2-modal-metadata\"\n        >\n          Add Part2 (Other than Q & A)\n        </a>\n        <a href=\"#\" id=\"completed\">\n          Mark as Completed\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { Component, Fragment, useEffect, useContext } from \"react\";\n\nimport \"./BookIndex.styles.scss\";\n\nimport BookSummary from \"./BookSummary-Top\";\nimport BookTable from \"./BookMetadataTable\";\nimport AnnexureSummary from \"./AnnexureSummary.component\";\nimport BreadCrumbs from \"../../utils/Breadcrumbs\";\n\nimport SideNav from \"../sideNav/SideNav\";\n\n// Import Book Context\nimport BookContext from \"../../context/book/bookContext\";\n\nimport {\n  modalHeaderBackColour,\n  styleDashBoardCard,\n  CUSTOMER,\n} from \"../../constants/index\";\nimport { useBlockLayout } from \"react-table\";\n\nconst BookIndex = (props) => {\n  //let { id } = useParams();\n  const { id } = props.match.params;\n  const bookContext = useContext(BookContext);\n  const {\n    currentBookStructure,\n    getCurrentBook,\n    getAnnexureItems,\n  } = bookContext;\n\n  // useEffect(() => {\n  //   getAnnexureItems();\n  // }, []);\n\n  return (\n    <div className=\"content-wrapper\">\n      <BreadCrumbs />\n      <BookSummary id={id} />\n      <SideNav />\n      <AnnexureSummary />\n      <BookTable />\n    </div>\n  );\n};\n\n// class BookIndex extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       department: \"KLA\",\n//       bookId: 54,\n//       assemblyNumber: 1,\n//       sessionNumber: 3,\n//       volumeNumber: 4,\n//       partNumber: 5,\n//       numberPages: 1123,\n//       placeSession: \"\",\n\n//       yearBook: 2013,\n//       datesSession: [\"12-03-2012\", \"13-03-2012\"],\n\n//       statusBookBinded: \"UNBINDED\",\n//       bookReturnedDate: null,\n//       metadataGivenDate: null,\n//       metadataStartDate: null,\n//       metadataEndDate: null,\n//       remarksBook: \"\",\n//       metadataStatus: \"INCOMPLETE\",\n//       bookStatus: \"INDEXED\",\n//       uploadfilePath: \"\",\n\n//       loading: false,\n\n//       errors: {},\n//     };\n//   }\n\n//   // onChange = (e) => {\n//   //   //console.log(e.target);\n\n//   //   this.setState({ [e.target.name]: e.target.value });\n//   // };\n\n//   // onChangeDate = (date) => {\n//   //   this.setState({\n//   //     bookReturnedDate: date,\n//   //   });\n//   // };\n//   render() {\n//     return (\n//       <div className=\"content-wrapper\">\n//         <BreadCrumbs />\n//         <BookSummary />\n//         <SideNav />\n//         <AnnexureSummary />\n//         <BookTable />\n//       </div>\n//     );\n//   }\n// }\n\nexport default BookIndex;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddSpeaker,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addSpeaker-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Speaker'sName (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Speaker'sName (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Speaker's Name (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Speaker's Name (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddSpeaker}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  \"Speaker\"\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddSpeaker: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React from \"react\";\n\nexport const modalplaceholderLabelValue = (metadatatype) => {\n  if (metadatatype === \"speaker\") {\n    return {\n      placeHolderEnglish: \"Speaker's Name (English)\",\n      placeHolderKannada: \"Speaker's Name (Kannada)\",\n    };\n  } else if (metadatatype === \"member\") {\n    return {\n      placeHolderEnglish: \"Member's Name (English)\",\n      placeHolderKannada: \"Member's Name (Kannada)\",\n    };\n  } else {\n    console.log(\"placehollder function metadatatype value\", metadatatype);\n  }\n};\n\nexport const getStatusBadge = (status) => {\n  if (status) {\n    return <span className=\"badge badge-success\">Live</span>;\n  } else {\n    return <span className=\"badge badge-danger\">Not Live</span>;\n  }\n};\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\n\nimport TableSectionSpeakers from \"../../../utils/SearchTable.component\";\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddMetadataItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\n//Imported Add Speaker Functions\nimport { modalplaceholderLabelValue } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\n//import AddItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\n//Import the Context\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { DELETE_SPEAKER, SPEAKER_ERROR } from \"../../../context/types\";\n\nimport {\n  TABLE_HEADER_SPEAKER,\n  CUSTOMER,\n  ADD_EDIT_SPEAKER_TITLE_MODAL,\n  ADD_EDIT_CHAIRMAN_TITLE_MODAL,\n} from \"../../../constants/index\";\n\nconst MetadataSectionCardSpeaker = () => {\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadataItem,\n    errors,\n    getSpeakerItems,\n    speakersItems,\n    addSpeaker,\n    editItem,\n    deleteItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  // const [speaker, setSpeaker] = useState({\n  //   name_eng: \"\",\n  //   name_kan: \"\",\n  //   status: null,\n  //   id: null,\n  //   lastModifiedAt: \"\",\n  //   lastModifiedBy: \"  \",\n  // });\n\n  useEffect(() => {}, [errors, speakersItems]);\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const editItemfunc = (e, _id) => {\n    // console.log(\"In Edit Item for : \", _id);\n    editItem(_id, \"speaker\", \"speakerName\");\n  };\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addSpeaker-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initSpeakerState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddSpeaker = () => {\n    if (currentMetadataItem) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addSpeaker(currentItemInstance).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initSpeakerState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initSpeakerState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.speakerName, \"error\");\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addSpeaker(currentItemInstance).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initSpeakerState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initSpeakerState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.speakerName, \"error\");\n        }\n      });\n    }\n  };\n\n  const modalplaceholdervalue = modalplaceholderLabelValue(\"speaker\");\n\n  const COLUMNS = [\n    {\n      Header: \"Speakers Name (English)\",\n      Footer: \"Speakers Name (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Speaker's Name (Kannada)\",\n      Footer: \"Speaker's Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  const DeleteSpeaker = () => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            \"speaker\",\n            DELETE_SPEAKER,\n            SPEAKER_ERROR,\n            \"speakerName\"\n          );\n          console.log(\"[DELETE-SPEAKER] response\", JSON.stringify(res));\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? \"SPEAKER\" : \"CHAIRMAN\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addSpeaker-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Speaker\" : \"Add Chairman\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={\n                  CUSTOMER === \"KLA\"\n                    ? \"DATATABLE OF ADDED SPEAKER'S\"\n                    : \"DATATABLE OF ADDED CHAIRMAN'S\"\n                }\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={speakersItems}\n                MetadataType=\"Speaker\"\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n      {/* <AddItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n      /> */}\n      <AddMetadataItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddSpeaker={AddSpeaker}\n        onDelete={DeleteSpeaker}\n        attribute=\"speaker\"\n        labelValues={modalplaceholdervalue}\n      />\n    </Fragment>\n  );\n};\n\nMetadataSectionCardSpeaker.propTypes = {};\n\nexport default MetadataSectionCardSpeaker;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addMember-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Member's Name (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Member's Name (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Member's Name (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Member's Name (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.modified_user && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  \"Member\"\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddMetadataItemModal from \"../../modal/AddMemberModal\";\n\n//Imported Add Speaker Functions\n// import {\n//   AddSpeaker,\n//   initSpeakerState,\n// } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\n//import AddItemModal from \"../../../utils/metadataModals/MetadataSectionModal.component\";\n\nimport {\n  MEMBER_ERROR,\n  DELETE_MEMBER,\n  GET_MEMBER_ALL,\n} from \"../../../context/types\";\n\n//Import the Context\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport {\n  TABLE_HEADER_SPEAKER,\n  CUSTOMER,\n  ADD_EDIT_SPEAKER_TITLE_MODAL,\n  ADD_EDIT_CHAIRMAN_TITLE_MODAL,\n} from \"../../../constants/index\";\n\nconst MetadataParticipantsCard = () => {\n  const metadataContext = useContext(MetadataContext);\n  const {\n    currentMetadataItem,\n    errors,\n\n    debateParticipants,\n    addSpeaker,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n  } = metadataContext;\n\n  // const [speaker, setSpeaker] = useState({\n  //   name_eng: \"\",\n  //   name_kan: \"\",\n  //   status: null,\n  //   id: null,\n  //   lastModifiedAt: \"\",\n  //   lastModifiedBy: \"  \",\n  // });\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n\n  const editItemfunc = (e, _id) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, \"member\", \"memberName\");\n  };\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const getStatusBadge = (status) => {\n    if (status) {\n      return <span className=\"badge badge-success\">Live</span>;\n    } else {\n      return <span className=\"badge badge-danger\">Not Live</span>;\n    }\n  };\n\n  const getTableItems = (_id) => {\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id)}\n        data-toggle=\"modal\"\n        data-target=\"#addMember-modal-metadata\"\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.memberName, \"error\");\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\"Awww Snap !!!\", responseMsg.response.data.memberName, \"error\");\n        }\n      });\n    }\n  };\n\n  const DeleteMember = () => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            \"member\",\n            DELETE_MEMBER,\n            MEMBER_ERROR,\n            \"speakerName\"\n          );\n          console.log(\"[DELETE-SPEAKER] response\", JSON.stringify(res));\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Member's Name (English)\",\n      Footer: \"Member's Name (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Member's Name (Kannada)\",\n      Footer: \"Speaker's Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(value);\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\"\n                  ? \"DEBATE PARTICIPANTS\"\n                  : \"DEBATE PARTICIPANTS\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addMember-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Member\" : \"Add Member\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName=\"DATATABLE OF ADDED DEBATE PARTICIPANTS\"\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={debateParticipants}\n                MetadataType=\"Member\"\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n      {/* <AddItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? ADD_EDIT_SPEAKER_TITLE_MODAL\n            : ADD_EDIT_CHAIRMAN_TITLE_MODAL\n        }\n      /> */}\n\n      <AddMetadataItemModal\n        modalTitle={\n          CUSTOMER === \"KLA\"\n            ? \"ADD/EDIT Member Particiapnts\"\n            : \"ADD/EDIT Member Particiapnts\"\n        }\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddItem={(e) =>\n          AddEditItemFunc(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\")\n        }\n        onDelete={DeleteMember}\n      />\n    </Fragment>\n  );\n};\n\nMetadataParticipantsCard.propTypes = {};\n\nexport default MetadataParticipantsCard;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id=\"addDebateTitle-modal-metadata\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder=\"Debates Title's (English)\"\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText=\"Debates Title's (English)\"\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder=\"Debates Title's (Kannada)\"\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText=\"Debates Title's (Kannada)\"\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  \"DebateTitle\"\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddDebateTitleMetadataModal from \"../../modal/AddDebateTitleModal\";\n\nimport {\n  DEBATE_TITLE_ERROR,\n  DELETE_DEBATE_TITLE,\n  GET_DEBATE_TITLE_ALL,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataDebateTitleCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    debateTitles,\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n  } = metadataContext;\n\n  useEffect(() => {}, [debateTitles]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    type: \"debatetitle\",\n    getDispatch: GET_DEBATE_TITLE_ALL,\n    errorDispatch: DEBATE_TITLE_ERROR,\n    deleteDispatch: DELETE_DEBATE_TITLE,\n    errorname: \"debateTitle\",\n    modalname: \"addDebateTitle\",\n    tableheaderName: \"DATATABLE OF ADDED DEBATE TITLE'S\",\n    metadatatypeFilter: \"debateTitle\",\n    currentModalName: \"ADD/EDIT Debate Title's\",\n  };\n\n  const {\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    currentModalName,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteDebateTitle = (type, dispatchType, dispatchError, errorName) => {\n    console.log(`[DEBUG -DeleteDebateTitle-CARD] the value of type is ${type}`);\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: \"Debates Title (English)\",\n      Footer: \"Debates Title (English)\",\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: \"Debates Title Name (Kannada)\",\n      Footer: \"Debates Title Name (Kannada)\",\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? \"Debate Titles\" : \"Debate Titles\"}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target=\"#addDebateTitle-modal-metadata\"\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? \"Add Debate Title\" : \"Add Debate Title\"}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={debateTitles}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddDebateTitleMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? currentModalName : currentModalName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteDebateTitle(\n            type,\n            deleteDispatch,\n            //DELETE_DEBATE_TITLE,\n            //DEBATE_TITLE_ERROR,\n            errorDispatch,\n            errorname\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default MetadataDebateTitleCard;\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddPortfolioMetadataModal from \"../../modal/AddPortfolio.component\";\n\nimport {\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n  DELETE_PORTFOLIO,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataPortfolioCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    portfolioItems,\n  } = metadataContext;\n\n  useEffect(() => {}, [portfolioItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Portfolio's\",\n    type: \"portfolio\",\n    getDispatch: GET_PORTFOLIO_ALL,\n    errorDispatch: PORTFOLIO_ERROR,\n    deleteDispatch: DELETE_PORTFOLIO,\n    errorname: \"portfolioMinistry\",\n    modalname: \"addPortfolio\",\n    tableheaderName: \"Datatable Of Added Ministry'S\",\n    metadatatypeFilter: \"portfolio\",\n    modalHeaderName: \"ADD/EDIT Ministries\",\n    modalLabelNames: {\n      english: \"Ministry Name (English)\",\n      kannada: \"Ministry Name (Kannada)\",\n    },\n    addButtonValue: \"Add Portfolio\",\n    modalButtonAttribute: \"Portfolio\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={portfolioItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddPortfolioMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataPortfolioCard;\n","import React, { useEffect, useContext, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../../components/common/TextFieldGroup\";\nimport SelectListGroup from \"../../components/common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddIssuesMetadataModal from \"../../modal/AddIssues.component\";\n\nimport {\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  DELETE_ISSUES,\n} from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataIssuesCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    issuesItems,\n  } = metadataContext;\n\n  //Changed the below useeffect for relevant variables\n\n  useEffect(() => {}, [issuesItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Issue's\",\n    type: \"issues\",\n    getDispatch: GET_ISSUES_ALL,\n    errorDispatch: ISSUES_ERROR,\n    deleteDispatch: DELETE_ISSUES,\n    errorname: \"issuesFields\",\n    modalname: \"addIssues\",\n    tableheaderName: \"Datatable Of Added Issues'S\",\n    metadatatypeFilter: \"issues\",\n    modalHeaderName: \"ADD/EDIT Issue's\",\n    modalLabelNames: {\n      english: \"Issues Name (English)\",\n      kannada: \"Issues Name (Kannada)\",\n    },\n    addButtonValue: \"Add Issues\",\n    modalButtonAttribute: \"Issues\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={issuesItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddIssuesMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataIssuesCard;\n","import React, { useEffect, useContext, Fragment } from \"react\";\n//import swal from \"sweetalert\";\n\nimport PropTypes from \"prop-types\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\nimport SelectListGroup from \"../common/SelectListGroup\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst MetadataSectionModal = ({\n  modalTitle,\n  speaker,\n  // setSpeaker,\n  setCurrentItem,\n  loading,\n  setLoading,\n  AddItem,\n  onChange,\n  currentItem,\n  onDelete,\n  attribute,\n  modalLabelNames,\n  modalname,\n\n  //  labelValues,\n}) => {\n  const metadataContext = useContext(MetadataContext);\n  //const alertContext = useContext(AlertContext);\n  const {\n    currentSpeaker,\n    errors,\n    addSpeaker,\n    currentMetadataItem,\n    setCurrentItemToNull,\n  } = metadataContext;\n\n  const { buttonLoading, isModalOpen } = loading;\n  //  console.log(\"The Label Values passed from modal\", labelValues);\n  //const placeholderValue = labelValues;\n  //console.log(\n  //  \"The placeholderValue Values passed from modal\",\n  //  placeholderValue\n  //);\n\n  useEffect(() => {\n    //  console.log(\"Use Effect Metadata Section Modal Called\");\n    if (currentMetadataItem != null) {\n      setCurrentItem(currentMetadataItem);\n    } else {\n      setCurrentItem({\n        name_eng: \"\",\n        name_kan: \"\",\n        status: null,\n        id: null,\n        last_modified_time: null,\n        modified_user: null,\n      });\n      // placeholderValue = placeholderLabelValue(attribute);\n      // console.log(\"Placeholder Value from useEffect \", placeholderValue);\n      //console.log(\"Attribute Value from useEffect \", attribute);\n    }\n  }, [currentMetadataItem]);\n\n  const modalplaceholderLabelValue = (metadatatype) => {\n    if (metadatatype === \"speaker\") {\n      return {\n        placeHolderEnglish: \"Speaker's Name (English)\",\n        placeHolderKannada: \"Speaker's Name (Kannada)\",\n      };\n    } else if (metadatatype === \"member\") {\n      return {\n        placeHolderEnglish: \"Member's Name (English)\",\n        placeHolderKannada: \"Member's Name (Kannada)\",\n      };\n    } else {\n      console.log(\"placehollder function metadatatype value\", metadatatype);\n    }\n  };\n\n  // const placeholderValue = placeholderLabelValue(attribute);\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  //console.log(\"placeholderValue\", placeholderValue);\n\n  //let { placeHolderEnglish, placeHolderKannada } = placeholderValue;\n\n  // const buttonValueSubmit = (metadataType) => {\n  //   if (attribute === \"speaker\") {\n  //     return \"Speaker\";\n  //   } else if (attribute === \"member\") {\n  //     return \"Member\";\n  //   }\n  // };\n\n  //const buttonValueModal = buttonValueSubmit(attribute);\n\n  const buttonValue = (currentMetadataItem, buttonLoading, attribute) => {\n    if (currentMetadataItem && !buttonLoading) {\n      return `Edit ${attribute}`;\n    } else if (!currentMetadataItem && !buttonLoading) {\n      return `Add ${attribute}`;\n    } else if (currentMetadataItem && buttonLoading) {\n      return `Editing ${attribute} ...`;\n    } else if (!currentMetadataItem && buttonLoading) {\n      return `Adding Speaker ...`;\n    }\n  };\n\n  const optionsStatus = [\n    { label: \"Not-Live\", value: false },\n    { label: \"Live\", value: true },\n  ];\n\n  return (\n    <Fragment>\n      <div className=\"modal fade\" id={`${modalname}-modal-metadata`}>\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">{modalTitle}</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">×</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"row\">\n                <TextFieldGroup\n                  // placeholder={placeholderValue.placeHolderEnglish}\n                  placeholder={modalLabelNames.english}\n                  name=\"name_eng\"\n                  value={currentItem.name_eng}\n                  onChange={onChange}\n                  error={false}\n                  id=\"name_eng\"\n                  // labelText={placeholderValue.placeHolderEnglish}\n                  labelText={modalLabelNames.english}\n                  formWidth=\"col-md\"\n                  required={true}\n                />\n              </div>\n              <TextFieldGroup\n                //placeholder={placeholderValue.placeHolderKannada}\n                placeholder={modalLabelNames.kannada}\n                name=\"name_kan\"\n                value={currentItem.name_kan}\n                onChange={onChange}\n                error={false}\n                id=\"name_kan\"\n                //labelText={placeholderValue.placeHolderKannada}\n                labelText={modalLabelNames.kannada}\n                formWidth=\"col-md\"\n                required={true}\n              />\n              <SelectListGroup\n                placeholder=\"Status\"\n                name=\"status\"\n                value={currentItem.status}\n                onChange={onChange}\n                error={false}\n                id=\"speakerStatus\"\n                labelText=\"Status\"\n                formWidth=\"col-6\"\n                options={optionsStatus}\n              />\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedAt\"\n                  value={currentItem.last_modified_time}\n                  onChange={onChange}\n                  // error={errors.last_modified_time}\n                  id=\"lastmodifiedat\"\n                  labelText=\"Last Modified At\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n\n              {currentItem.last_modified_time && (\n                <TextFieldGroup\n                  placeholder=\"\"\n                  name=\"lastModifiedBy\"\n                  value={currentItem.modified_user}\n                  onChange={onChange}\n                  //   error={errors.modified_user}\n                  id=\"lastmodifiedby\"\n                  labelText=\"Last Modified By\"\n                  formWidth=\"col-md\"\n                  disabled=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"justify-content-between\">\n              {currentItem.last_modified_time ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  data-dismiss=\"modal\"\n                  onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Delete\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  //onClick={onDelete}\n                  style={{\n                    margin: \"10px\",\n                  }}\n                >\n                  Cancel\n                </button>\n              )}\n\n              <input\n                type=\"submit\"\n                className={\n                  buttonLoading\n                    ? \"btn btn-primary disabled\"\n                    : \"btn btn-primary \"\n                }\n                onClick={AddItem}\n                data-dismiss=\"modal\"\n                //value={currentSpeaker ? \"Edit Speaker\" : \"Add Speaker\"}\n                value={buttonValue(\n                  currentMetadataItem,\n                  buttonLoading,\n                  attribute\n                  //buttonValue\n                )}\n                style={{\n                  float: \"right\",\n                  margin: \"10px\",\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer justify-content-between\"></div>\n        </div>\n        {/* /.modal-content */}\n      </div>\n      {/* /.modal-dialog */}\n    </Fragment>\n  );\n};\n\nMetadataSectionModal.propTypes = {\n  modalTitle: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  //speaker: PropTypes.object.isRequired,\n  // currentSpeaker: PropTypes.object.isRequired,\n  loading: PropTypes.object.isRequired,\n  setLoading: PropTypes.func.isRequired,\n  AddItem: PropTypes.func.isRequired,\n  setCurrentItem: PropTypes.func.isRequired,\n  currentItem: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  attribute: PropTypes.string.isRequired,\n  modalLabelNames: PropTypes.object.isRequired,\n  //  labelValues: PropTypes.object.isRequired,\n};\n\nexport default MetadataSectionModal;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport swal from \"sweetalert\";\n\nimport { SearchTableNew } from \"../../../utils/SearchTableNew.component\";\nimport AddTagsMetadataModal from \"../../modal/AddTags.Component\";\n\nimport { GET_TAGS_ALL, TAGS_ERROR, DELETE_TAGS } from \"../../../context/types\";\n\nimport MetadataContext from \"../../../context/metadata/metadataContext\";\n\nimport { CUSTOMER } from \"../../../constants/index\";\n\n// Import Modal Utility Functions\n\nimport { getStatusBadge } from \"../../../utils/metadataModals/metadataModalsUtils\";\n\nconst MetadataTagsCard = () => {\n  const metadataContext = useContext(MetadataContext);\n\n  const {\n    currentMetadataItem,\n    errors,\n    editItem,\n    setCurrentItemToNull,\n    addItem,\n    deleteItem,\n    tagsItems,\n  } = metadataContext;\n\n  //Changed the below useeffect for relevant variables\n\n  useEffect(() => {}, [tagsItems]);\n\n  const [currentItem, setCurrentItem] = useState({\n    name_eng: \"\",\n    name_kan: \"\",\n    status: null,\n    _id: null,\n    last_modified_time: null,\n    modified_user: null,\n  });\n\n  const [loading, setLoading] = useState({\n    isModalOpen: true,\n    buttonLoading: false,\n  });\n  // Card Configuration\n  const configMetadata = {\n    cardHeader: \"Tag's\",\n    type: \"tags\",\n    getDispatch: GET_TAGS_ALL,\n    errorDispatch: TAGS_ERROR,\n    deleteDispatch: DELETE_TAGS,\n    errorname: \"tagsFields\",\n    modalname: \"addTags\",\n    tableheaderName: \"Datatable Of Added Tag's\",\n    metadatatypeFilter: \"tags\",\n    modalHeaderName: \"ADD/EDIT Tag's\",\n    modalLabelNames: {\n      english: \"Tags Name (English)\",\n      kannada: \"Tags Name (Kannada)\",\n    },\n    addButtonValue: \"Add Tags\",\n    modalButtonAttribute: \"Tags\",\n  };\n\n  const {\n    cardHeader,\n    type,\n    getDispatch,\n    deleteDispatch,\n    errorDispatch,\n    errorname,\n    modalname,\n    tableheaderName,\n    metadatatypeFilter,\n    modalHeaderName,\n    modalLabelNames,\n    addButtonValue,\n    modalButtonAttribute,\n  } = configMetadata; //ConfigMetadata Destrucutring\n\n  const onChange = (e) => {\n    setCurrentItem({ ...currentItem, [e.target.name]: e.target.value });\n  };\n\n  const initState = () => {\n    // Intializing the Speaker State to Null\n    setCurrentItem({\n      name_eng: \"\",\n      name_kan: \"\",\n      status: null,\n      _id: null,\n      last_modified_time: null,\n      modified_user: null,\n    });\n    setLoading({ buttonLoading: false });\n  };\n\n  const editItemfunc = (e, _id, metadataType, errorName) => {\n    //console.log(\"In Edit Item for : \", _id);\n    editItem(_id, metadataType, errorName);\n  };\n\n  const AddEditItemFunc = (\n    type,\n    getTypeReducer,\n\n    dispatchError,\n    errorName\n  ) => {\n    if (currentMetadataItem) {\n      //Call for Edit Action\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    } else {\n      //Call the Add Speaker Action\n\n      setLoading({ buttonLoading: true });\n      const currentItemInstance = currentItem;\n      delete currentItem[\"last_modified_time\"];\n      delete currentItem[\"modified_user\"];\n      delete currentItem[\"_id\"];\n\n      addItem(\n        currentItemInstance,\n        type,\n        getTypeReducer,\n        dispatchError,\n        errorName\n      ).then((responseMsg) => {\n        console.log(\n          `[DEBUG-ADDItemFunc] the response message is ${responseMsg}`\n        );\n        console.log(\n          `[DEBUG-ADDItemFunc] the type of response message is ${typeof responseMsg}`\n        );\n        if (typeof responseMsg === \"string\") {\n          initState();\n          swal(\"Good job!\", responseMsg, \"success\");\n        } else {\n          initState();\n          swal(\n            \"Awww Snap !!!\",\n            responseMsg.response.data[\"errorName\"],\n            \"error\"\n          );\n        }\n      });\n    }\n  };\n\n  const DeleteItem = (type, dispatchType, dispatchError, errorName) => {\n    const _id = currentMetadataItem._id;\n    swal({\n      title: `Are you sure you want to delete ${currentMetadataItem.name_eng} ?`,\n      text: \"Once deleted, you will not be able to recover this field!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        try {\n          const res = await deleteItem(\n            _id,\n            type,\n            dispatchType,\n            dispatchError,\n            errorName\n          );\n\n          if (res.msg === \"success\") {\n            swal(`${currentMetadataItem.name_eng}  has been deleted !!!`, {\n              icon: \"success\",\n            });\n          } else {\n            swal(\n              `Poof! ${currentMetadataItem.name_eng} cannot be deleted .Contact System Administrator   `,\n              {\n                icon: \"error\",\n              }\n            );\n          }\n        } catch (err) {}\n      } else {\n        swal(` ${currentMetadataItem.name_eng}  is safe!`);\n      }\n    });\n  };\n\n  const getTableItems = (\n    _id,\n    metadataType,\n\n    errorName,\n    modalName\n  ) => {\n    const modal = `#${modalName}-modal-metadata`;\n    return (\n      <button\n        type=\"button\"\n        className=\"btn btn-link\"\n        onClick={(e) => editItemfunc(e, _id, metadataType, errorName)}\n        data-toggle=\"modal\"\n        data-target={modal}\n      >\n        Edit\n      </button>\n    );\n  };\n\n  const COLUMNS = [\n    {\n      Header: `${modalLabelNames.english}`,\n      Footer: `${modalLabelNames.english}`,\n      accessor: \"name_eng\",\n      sticky: \"left\",\n    },\n\n    {\n      Header: `${modalLabelNames.kannada}`,\n      Footer: `${modalLabelNames.kannada}`,\n      accessor: \"name_kan\",\n      sticky: \"left\",\n    },\n    {\n      Header: \"Status\",\n      Footer: \"Status\",\n      accessor: \"status\",\n      Cell: ({ value }) => {\n        return getStatusBadge(value);\n      },\n    },\n    {\n      Header: \"Actions\",\n      Footer: \"Actions\",\n      accessor: \"_id\",\n      Cell: ({ value }) => {\n        return getTableItems(\n          value,\n          //\"debatetitle\",\n          type,\n          //\"debateTitle\",\n          errorname,\n          //\"addDebateTitle\"\n          modalname\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"row mt-2\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-10\">\n          <div\n            className={\n              CUSTOMER === \"KLA\"\n                ? \"card card-outline card-success\"\n                : \"card card-outline card-danger\"\n            }\n          >\n            <div className=\"card-header\" style={{ backgroundColor: \"white\" }}>\n              <h3 className=\"card-title\">\n                {CUSTOMER === \"KLA\" ? cardHeader : cardHeader}\n              </h3>\n              <div className=\"card-tools\">\n                <button\n                  className={\n                    CUSTOMER === \"KLA\"\n                      ? \"btn btn-outline-success mr-2\"\n                      : \"btn btn-outline-danger mr-2\"\n                  }\n                  data-toggle=\"modal\"\n                  data-target={`#${modalname}-modal-metadata`}\n                  onClick={() => setCurrentItemToNull()}\n                >\n                  {CUSTOMER === \"KLA\" ? addButtonValue : addButtonValue}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"maximize\"\n                >\n                  <i className=\"fas fa-expand\"></i>\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-tool\"\n                  data-card-widget=\"collapse\"\n                >\n                  <i className=\"fas fa-minus\" />\n                </button>\n              </div>\n              {/* /.card-tools */}\n            </div>\n            {/* /.card-header */}\n            <div className=\"card-body\">\n              <SearchTableNew\n                tableHeaderName={tableheaderName}\n                CUSTOMER={CUSTOMER}\n                columns_table={COLUMNS}\n                loading={loading}\n                table_data={tagsItems}\n                MetadataType={metadatatypeFilter}\n              />\n\n              {/* <TableSectionSpeakers\n                tableHeaderName=\"DATATABLE OF ADDED SPEAKERS\"\n                customer={CUSTOMER}\n                tableHeader={TABLE_HEADER_SPEAKER}\n                loading={loading}\n              /> */}\n            </div>\n            {/* /.card-body */}\n          </div>\n          {/* /.card */}\n        </div>\n        <div className=\"col-md-1\"></div>\n      </div>\n\n      <AddTagsMetadataModal\n        modalTitle={CUSTOMER === \"KLA\" ? modalHeaderName : modalHeaderName}\n        onChange={onChange}\n        //speaker={speaker}\n        currentItem={currentItem}\n        loading={loading}\n        //setSpeaker={setSpeaker}\n        setCurrentItem={setCurrentItem}\n        setLoading={setLoading}\n        modalLabelNames={modalLabelNames}\n        AddItem={(e) =>\n          AddEditItemFunc(\n            type,\n            // \"debatetitle\",\n            getDispatch,\n            // GET_DEBATE_TITLE_ALL,\n            errorDispatch,\n            errorname\n          )\n        }\n        onDelete={(e) =>\n          DeleteItem(type, deleteDispatch, errorDispatch, errorname)\n        }\n        modalname={modalname}\n        attribute={modalButtonAttribute}\n      />\n    </>\n  );\n};\n\nexport default MetadataTagsCard;\n","import React, { useEffect, useContext } from \"react\";\n\nimport BreadCrumbs from \"../../utils/Breadcrumbs\";\nimport MetadataSpeakerSection from \"./metadatasections/MetadataSpeakersCard.component\";\nimport MetadataParticipantsSection from \"./metadatasections/MetadataParticiapantsCard.component\";\nimport MetadataDebateTitleCard from \"./metadatasections/MetadataDebateTitleCard.component\";\nimport MetadataPortfolioCard from \"./metadatasections/MetadataPortfoliosCard.component\";\nimport MetadataIssuesCard from \"./metadatasections/MetadataIssuesCard.component\";\nimport MetadataTagsCard from \"./metadatasections/MetadataTagsCard\";\n\nimport {\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  GET_DEBATE_TITLE_ALL,\n  DEBATE_TITLE_ERROR,\n  GET_PORTFOLIO_ALL,\n  PORTFOLIO_ERROR,\n  GET_ISSUES_ALL,\n  ISSUES_ERROR,\n  GET_TAGS_ALL,\n  TAGS_ERROR,\n} from \"../../context/types\";\n\nimport MetadataContext from \"../../context/metadata/metadataContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst MetadataIndex = () => {\n  const metadataContext = useContext(MetadataContext);\n  const authContext = useContext(AuthContext);\n\n  const {\n    getSpeakerItems,\n    getItems,\n    speakersItems,\n    debateParticipants,\n  } = metadataContext;\n\n  useEffect(() => {\n    getSpeakerItems();\n    getItems(\"member\", GET_MEMBER_ALL, MEMBER_ERROR, \"memberName\");\n    getItems(\n      \"debatetitle\",\n      GET_DEBATE_TITLE_ALL,\n      DEBATE_TITLE_ERROR,\n      \"debateTitle\"\n    );\n    //Get Ministry Portfolio\n    getItems(\n      \"portfolio\",\n      GET_PORTFOLIO_ALL,\n      PORTFOLIO_ERROR,\n      \"portfolioMinistry\"\n    );\n    //Get Issues\n    getItems(\"issues\", GET_ISSUES_ALL, ISSUES_ERROR, \"issuesFields\");\n\n    // Get Tags\n    getItems(\"tags\", GET_TAGS_ALL, TAGS_ERROR, \"tagsFields\");\n  }, []);\n\n  return (\n    <div className=\"content-wrapper\">\n      <BreadCrumbs />\n      <MetadataSpeakerSection />\n      <MetadataParticipantsSection />\n      <MetadataDebateTitleCard />\n      <MetadataPortfolioCard />\n      <MetadataIssuesCard />\n      <MetadataTagsCard />\n    </div>\n  );\n};\n\nexport default MetadataIndex;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n  //console.log(\"Is Authenticated\", isAuthenticated);\n  //console.log(\"loading\", loading);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        //!isAuthenticated && !loading ? (\n        !isAuthenticated ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n  //console.log(\"Is Authenticated\", isAuthenticated);\n  //console.log(\"loading\", loading);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        //!isAuthenticated && !loading ? (\n        isAuthenticated ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  ADD_BOOK_STRUCT,\n  DELETE_BOOK_STRUCT,\n  CLEAR_BOOK,\n  GET_BOOK_STRUCT_ALL,\n  GET_CURRENT_BOOK_STRUCTURE,\n  BOOK_STRUCT_ERROR,\n  GET_CURRENT_BOOK_STRUCTURE_ERROR,\n  GET_ANNEXURE_FOR_BOOK,\n  ANNEXURE_ERROR,\n  DELETE_ANNEXURE_ID,\n  GET_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_METADATA_SECTION,\n  METADATA_ERROR,\n  GET_METADATA_FOR_BOOK,\n  DELETE_METADATA_ID,\n  GET_CURRENT_METADATA,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_BOOK_STRUCT_ALL:\n      return {\n        ...state,\n        //Change this after refactoring\n        bookSummaryTable: [...action.payload],\n      };\n\n    case GET_CURRENT_BOOK_STRUCTURE:\n      return {\n        ...state,\n        currentBookStructure: action.payload,\n      };\n\n    // Error\n    case BOOK_STRUCT_ERROR:\n    case GET_CURRENT_BOOK_STRUCTURE_ERROR:\n    case ANNEXURE_ERROR:\n    case METADATA_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n\n    case GET_ANNEXURE_FOR_BOOK:\n      return {\n        ...state,\n        annexureItems: [...action.payload],\n      };\n\n    case DELETE_ANNEXURE_ID:\n      return {\n        ...state,\n        annexureItems: state.annexureItems.filter(\n          (annexure) => annexure._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_ANNEXURE:\n      return {\n        ...state,\n        currentAnnexure: action.payload[0],\n      };\n\n    case CLEAR_CURRENT_ANNEXURE:\n      return {\n        ...state,\n        currentAnnexure: {},\n      };\n\n    // Metadata Section Action\n\n    case CLEAR_CURRENT_METADATA_SECTION:\n      return {\n        ...state,\n        currentMetadata: {},\n      };\n\n    case GET_METADATA_FOR_BOOK:\n      return {\n        ...state,\n        sectionalMetadataItems: [...action.payload],\n      };\n\n    case DELETE_METADATA_ID:\n      return {\n        ...state,\n        sectionalMetadataItems: state.sectionalMetadataItems.filter(\n          (sectionmetadata) => sectionmetadata._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_METADATA:\n      return {\n        ...state,\n        currentMetadata: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport BookContext from \"./bookContext\";\nimport bookReducer from \"./bookReducer\";\n\nimport {\n  ADD_BOOK_STRUCT,\n  DELETE_BOOK_STRUCT,\n  CLEAR_BOOK,\n  GET_BOOK_STRUCT_ALL,\n  BOOK_STRUCT_ERROR,\n  GET_CURRENT_BOOK_STRUCTURE,\n  GET_CURRENT_BOOK_STRUCTURE_ERROR,\n  GET_ANNEXURE_FOR_BOOK,\n  ANNEXURE_ERROR,\n  DELETE_ANNEXURE_ID,\n  GET_CURRENT_ANNEXURE,\n  CLEAR_CURRENT_ANNEXURE,\n  GET_METADATA_FOR_BOOK,\n  METADATA_ERROR,\n  DELETE_METADATA_ID,\n  GET_CURRENT_METADATA,\n  CLEAR_CURRENT_METADATA_SECTION,\n} from \"../types\";\n\nconst BookState = (props) => {\n  const initialState = {\n    // bookSummaryTable: [\n    //   {\n    //     bookId: 1,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 134,\n    //     sectionCount: 145,\n    //     status: \"Book Created\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 2,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 14,\n    //     pageCount: 134,\n    //     sectionCount: 144,\n    //     status: \"Metadata Completed\",\n    //     bindingStatus: \"Binded\",\n    //   },\n    //   {\n    //     bookId: 3,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 185,\n    //     sectionCount: 165,\n    //     status: \"OCR Process\",\n    //     bindingStatus: \"Binded\",\n    //   },\n    //   {\n    //     bookId: 4,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 185,\n    //     sectionCount: 132,\n    //     status: \"Indexing\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 5,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 146,\n    //     sectionCount: 175,\n    //     status: \"Book Live\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    //   {\n    //     bookId: 6,\n    //     assemblyNumber: 13,\n    //     sessionNumber: 12,\n    //     pageCount: 146,\n    //     sectionCount: 175,\n    //     status: \"Book Error\",\n    //     bindingStatus: \"Unbinded\",\n    //   },\n    // ],\n\n    bookSummaryTable: [],\n\n    uploadfilePath: \"\",\n    currentBookStructure: [],\n    loading: false,\n    // annexureItems: [  {\n    //   AnnexureId: 1,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 2,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 3,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 4,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 5,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 6,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },\n    // {\n    //   AnnexureId: 7,\n    //   SessionNumber: \"3[2009]\",\n    //   BookId: 11,\n    //   StartPage: 441,\n    //   EndPage: 442,\n    //   Title: \"2009-10ನೇ ಸಾಲಿನ ಬೇಡಿಕೆಗಳ ಮಂಡನೆ\",\n    // },],\n    annexureItems: [],\n    sectionalMetadataItems: [],\n    currentMetadata: {},\n    currentAnnexure: {},\n\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(bookReducer, initialState);\n\n  //get Book Struct\n\n  const getBookStruct = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.get(\"/api/structbook/all\", config);\n\n      // console.log(\"[DEBUG-GETBOOK] \", res);\n\n      dispatch({ type: GET_BOOK_STRUCT_ALL, payload: res.data });\n      return res.data;\n    } catch (error) {\n      dispatch({\n        type: BOOK_STRUCT_ERROR,\n        payload: error.response.data.addbookStruct,\n      });\n      return error;\n    }\n  };\n\n  // Add Book Structure\n\n  const addBookStruct = async (bookStruct) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.post(\"/api/structbook/new\", bookStruct, config);\n\n      getBookStruct();\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: BOOK_STRUCT_ERROR,\n        payload: error.response.data.addbookStruct,\n      });\n      return error;\n    }\n  };\n\n  // Delete Book Structure\n\n  const deleteBookStruct = (id) => {\n    // Call the url with book structures Object\n    dispatch({\n      type: DELETE_BOOK_STRUCT,\n      payload: id,\n    });\n  };\n\n  const deleteItem = (bookId) => {};\n\n  // Re Index Book\n\n  const reIndexBook = (bookId) => {};\n\n  //  get Current book Item in currentBookStructure\n\n  const getCurrentBook = async (id) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/structbook/${id}`, config);\n\n      dispatch({\n        type: GET_CURRENT_BOOK_STRUCTURE,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_CURRENT_BOOK_STRUCTURE_ERROR,\n        payload: error.response.data.structbook,\n      });\n    }\n  };\n\n  // Annexure Actions //\n  const clearcurrentAnnexure = () => {\n    dispatch({\n      type: CLEAR_CURRENT_ANNEXURE,\n    });\n  };\n\n  const getAnnexureItems = async (bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/annexure/new/${bookId}`, config);\n\n      dispatch({\n        type: GET_ANNEXURE_FOR_BOOK,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n    }\n  };\n  // Adding/Editing  Annexure\n  const addAnnexure = async (annexure, bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.post(\n        `/api/annexure/new/${bookId}`,\n        annexure,\n        config\n      );\n\n      getAnnexureItems(bookId);\n      //Clear the current Annexure\n      clearcurrentAnnexure();\n      return res.data.msg;\n    } catch (error) {\n      clearcurrentAnnexure();\n\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n      return error;\n    }\n  };\n\n  const editAnnexure = async (annexureId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/annexure/${annexureId}`, config);\n\n      //getBookStruct();\n      dispatch({\n        type: GET_CURRENT_ANNEXURE,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n      return error;\n    }\n  };\n\n  const deleteAnnexure = async (annexureid, bookid) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.delete(\n        `/api/annexure/${bookid}/${annexureid}`,\n        config\n      );\n      dispatch({\n        type: DELETE_ANNEXURE_ID,\n        payload: annexureid,\n      });\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: ANNEXURE_ERROR,\n        payload: error.response.data.annexure,\n      });\n\n      return error.response;\n    }\n  };\n\n  //////////////////////////// Sectional Metadata Actions  //////////////////////\n\n  // const clearcurrentMetadata = () => {\n  //   dispatch({\n  //     type: CLEAR_CURRENT_METADATA,\n  //   });\n  // };\n\n  const getMetadataItems = async (bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // console.info(\"[DEBUG] from getMetadataItems value of bookid\", bookId);\n\n    try {\n      const res = await axios.get(`/api/sectionbook/get/${bookId}`, config);\n      // console.log(\"[DEBUG] get MetDataItem \", res.data);\n      dispatch({\n        type: GET_METADATA_FOR_BOOK,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.info(\"[DEBUG ERROR] get MetDataItem  error\", error);\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n    }\n  };\n  // Adding/Editing  Sectional Metadata\n  const addSection = async (section, bookId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //console.info(\"[DEBUG] Current Added Section\", section);\n\n    try {\n      const res = await axios.post(`/api/sectionbook/new`, section, config);\n\n      getMetadataItems(section.book_id);\n      //Clear the current Annexure\n      clearcurrentMetadataSection();\n      return res.data.msg;\n    } catch (error) {\n      clearcurrentMetadataSection();\n\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n      return error;\n    }\n  };\n  const clearcurrentMetadataSection = () => {\n    dispatch({\n      type: CLEAR_CURRENT_METADATA_SECTION,\n    });\n  };\n  const editSection = async (sectionId) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(`/api/sectionbook/${sectionId}`, config);\n\n      //getBookStruct();\n      dispatch({\n        type: GET_CURRENT_METADATA,\n        payload: res.data,\n      });\n    } catch (error) {\n      //console.info(\"[DEBUG Edit Section Book State] \", error);\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n      return error;\n    }\n  };\n\n  const deleteSection = async (bookid, sectionid) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.delete(\n        `/api/sectionbook/${bookid}/${sectionid}`,\n        config\n      );\n      dispatch({\n        type: DELETE_METADATA_ID,\n        payload: sectionid,\n      });\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: METADATA_ERROR,\n        payload: error.response.data.sectionalbook,\n      });\n\n      return error.response;\n    }\n  };\n\n  return (\n    <BookContext.Provider\n      value={{\n        bookSummaryTable: state.bookSummaryTable,\n\n        uploadfilePath: state.uploadfilePath,\n\n        loading: state.loading,\n\n        errors: state.errors,\n        currentBookStructure: state.currentBookStructure,\n        currentAnnexure: state.currentAnnexure,\n        annexureItems: state.annexureItems,\n        sectionalMetadataItems: state.sectionalMetadataItems,\n        currentMetadata: state.currentMetadata,\n\n        addBookStruct,\n        deleteItem,\n        reIndexBook,\n        getBookStruct,\n        getCurrentBook,\n        getAnnexureItems,\n        addAnnexure,\n        editAnnexure,\n        deleteAnnexure,\n        clearcurrentAnnexure,\n        getMetadataItems,\n        editSection,\n        deleteSection,\n        addSection,\n        clearcurrentMetadataSection,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      setAuthToken(localStorage.getItem(\"token\"));\n      // console.info(\n      //   \"[DEBUG Auth Reducer Check Token]\",\n      //   localStorage.getItem(\"token\")\n      // );\n      // console.info(\n      //   \"[DEBUG Auth Reducer jwt Check Token]\",\n      //   localStorage.getItem(\"jwtToken\")\n      // );\n\n      return {\n        ...state,\n        ...action.payload, //Why action.payload has been passed token key is in payload\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      //console.info(\"[DEBUG] Auth Reducer \", typeof action.payload);\n      setAuthToken(\"\");\n      let errorValue = action.payload ? action.payload : {};\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        errors: errorValue,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\n\nimport axios from \"axios\";\n\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\n\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  CLEAR_ERRORS,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    errors: {},\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Auth Actions\n\n  //Load User\n\n  const loadUser = async () => {\n    //@todo - load token into global headers\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    } else {\n      console.info(\"[DEBUG] from load user action the token dont exist\");\n    }\n\n    try {\n      const res = await axios.get(\"/api/users/current\");\n\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //Register User\n\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users/register\", formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  //Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users/login\", formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      //loadUser();\n    } catch (err) {\n      // console.info(\"[DEBUG Login] \", err.response);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data,\n        //payload: err.response.data.msg,\n      });\n    }\n  };\n\n  //Logout\n\n  const logout = () => dispatch({ type: LOGOUT });\n\n  //Clear Errors\n  //Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        errors: state.errors,\n        register,\n        clearErrors,\n        login,\n        loadUser,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\n\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = (props) => {\n  const intialState = [];\n\n  //Creating Hooks\n  const [state, dispatch] = useReducer(alertReducer, intialState);\n\n  //Set Alert\n  const setAlert = (msg, type, timeout) => {\n    const id = uuid;\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout((id) => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider value={{ alerts: state, setAlert }}>\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import {\n  ADD_SPEAKER,\n  SPEAKER_ERROR,\n  GET_SPEAKER_ALL,\n  CLEAR_ERRORS,\n  GET_CURRENT_ITEM,\n  GET_CURRENT_ITEM_ERROR,\n  SET_CURRENT_ITEM_NULL,\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n  ADD_MEMBER,\n  DELETE_MEMBER,\n  DELETE_SPEAKER,\n  GET_DEBATE_TITLE_ALL,\n  DELETE_DEBATE_TITLE,\n  DEBATE_TITLE_ERROR,\n  GET_PORTFOLIO_ALL,\n  DELETE_PORTFOLIO,\n  PORTFOLIO_ERROR,\n  ISSUES_ERROR,\n  TAGS_ERROR,\n  ADD_ISSUES,\n  GET_ISSUES_ALL,\n  DELETE_ISSUES,\n  ADD_TAGS,\n  GET_TAGS_ALL,\n  DELETE_TAGS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    //Spekars Actions\n    case GET_SPEAKER_ALL:\n      return {\n        ...state,\n        speakersItems: [...action.payload],\n      };\n    case ADD_SPEAKER:\n      return {\n        ...state,\n      };\n\n    case DELETE_SPEAKER:\n      console.log(\n        `[DELETE SPEAKER] reducer called for action payload ${action.payload}`\n      );\n      return {\n        ...state,\n        speakersItems: state.speakersItems.filter(\n          (speaker) => speaker._id !== action.payload\n        ),\n      };\n\n    case GET_CURRENT_ITEM:\n      return {\n        ...state,\n        currentMetadataItem: action.payload,\n      };\n\n    case SET_CURRENT_ITEM_NULL:\n      return {\n        ...state,\n        currentMetadataItem: null,\n      };\n\n    case SPEAKER_ERROR:\n    case GET_CURRENT_ITEM_ERROR:\n    case MEMBER_ERROR:\n    case DEBATE_TITLE_ERROR:\n    case PORTFOLIO_ERROR:\n    case ISSUES_ERROR:\n    case TAGS_ERROR:\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        errors: {},\n      };\n\n    //Member Actions\n    case GET_MEMBER_ALL:\n      return {\n        ...state,\n        debateParticipants: [...action.payload],\n      };\n    case DELETE_MEMBER:\n      return {\n        ...state,\n        debateParticipants: state.debateParticipants.filter(\n          (member) => member._id !== action.payload\n        ),\n      };\n\n    //Debate Title Actions\n    case GET_DEBATE_TITLE_ALL:\n      return {\n        ...state,\n        debateTitles: [...action.payload],\n      };\n    case DELETE_DEBATE_TITLE:\n      return {\n        ...state,\n        debateTitles: state.debateTitles.filter(\n          (debatetitle) => debatetitle._id !== action.payload\n        ),\n      };\n\n    // Portfolio Actions\n\n    case GET_PORTFOLIO_ALL:\n      return {\n        ...state,\n        portfolioItems: [...action.payload],\n      };\n    case DELETE_PORTFOLIO:\n      return {\n        ...state,\n        portfolioItems: state.portfolioItems.filter(\n          (portfolio) => portfolio._id !== action.payload\n        ),\n      };\n\n    // Issues  Actions\n\n    case GET_ISSUES_ALL:\n      return {\n        ...state,\n        issuesItems: [...action.payload],\n      };\n    case DELETE_ISSUES:\n      return {\n        ...state,\n        issuesItems: state.issuesItems.filter(\n          (issues) => issues._id !== action.payload\n        ),\n      };\n\n    // Tags  Actions\n\n    case GET_TAGS_ALL:\n      return {\n        ...state,\n        tagsItems: [...action.payload],\n      };\n    case DELETE_TAGS:\n      return {\n        ...state,\n        tagsItems: state.tagsItems.filter(\n          (tags) => tags._id !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\n\nimport MetadataContext from \"./metadataContext\";\nimport metadataReducer from \"./metadataReducer\";\n\nimport {\n  ADD_SPEAKER,\n  SPEAKER_ERROR,\n  GET_SPEAKER_ALL,\n  CLEAR_ERRORS,\n  GET_CURRENT_ITEM,\n  GET_CURRENT_ITEM_ERROR,\n  SET_CURRENT_ITEM_NULL,\n  GET_MEMBER_ALL,\n  MEMBER_ERROR,\n} from \"../types\";\n\nconst MetadataState = (props) => {\n  const initialState = {\n    // speakersItems: [\n    //   {\n    //     nameEnglish: \"Kagodu Thimmappa\",\n    //     nameKannada: \"ಕಾಗೋಡು ತಿಮ್ಮಪ್ಪ\",\n    //     status: true,\n    //     id: 1,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Vishveshwar Hegde Kageri\",\n    //     nameKannada: \"ವಿಶ್ವೇಶ್ವರ ಹೆಗಡೆ ಕಾಗೇರಿ\",\n    //     status: true,\n    //     id: 2,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Vaibhav Sanil\",\n    //     nameKannada: \"ವೈಭವ್ ಸನಿಲ್\",\n    //     status: false,\n    //     id: 3,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    //   {\n    //     nameEnglish: \"Madhavraj A\",\n    //     nameKannada: \"ಮಾಧವರಾಜ್\",\n    //     status: false,\n\n    //     id: 4,\n    //     lastModifiedAt: \"2016-08-02 11:28:56\",\n    //     lastModifiedBy: \"Vaibhav Sanil\",\n    //   },\n    // ],\n    speakersItems: [],\n    currentSpeaker: null,\n    debateParticipants: [],\n    debateTitles: [],\n    portfolioItems: [],\n    issuesItems: [],\n    tagsItems: [],\n    currentDebateParticipants: null,\n    loading: false,\n    currentMetadataItem: null,\n\n    errors: {},\n    alerts: [],\n  };\n\n  const [state, dispatch] = useReducer(metadataReducer, initialState);\n\n  //////////////////////////////   Actions //////////////////////////////////////\n\n  /******************************** SPEAKER ACTIONS *****************************/\n\n  const clearErrors = async () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  // Get Speaker Item\n\n  //Get Speaker Items\n  const getSpeakerItems = async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\"/api/metadata/speaker/all\", config);\n\n      dispatch({ type: GET_SPEAKER_ALL, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: SPEAKER_ERROR,\n        payload: error.response.speakerName,\n      });\n    }\n  };\n\n  // Add Speaker\n  const addSpeaker = async (speaker) => {\n    //setCurrentItemToNull();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\n        \"/api/metadata/speaker/new\",\n        speaker,\n        config\n      );\n      getSpeakerItems();\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: SPEAKER_ERROR,\n        payload: error.response.data.speakerName,\n      });\n      return error;\n    }\n  };\n\n  // //    EDIT  ITEM General Prurpose Function\n  // const editItem = async (id, metadataType) => {\n  //   console.log(`/api/metadata/${metadataType}/${id}/get`);\n  //   //Set the current speaker item to the current speaker item\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.get(\n  //       `/api/metadata/${metadataType}/${id}/get`,\n  //       config\n  //     );\n  //     console.log(res.data);\n  //     dispatch({\n  //       type: GET_CURRENT_ITEM,\n  //       payload: res.data,\n  //     });\n  //     return res.data;\n  //   } catch (error) {\n  //     // console.log(\"Error Object editItem Action\", error.response);\n  //     dispatch({\n  //       type: GET_CURRENT_ITEM_ERROR,\n  //       payload: error.response.data.speakerName,\n  //     });\n  //     return error;\n  //   }\n  // };\n  // https://medium.com/javascript-in-plain-english/you-definitely-should-be-using-suspense-in-react-code-splitting-and-preloading-b9cbe393a95\n  //https://stackoverflow.com/questions/57221878/react-classname-naming-convention\n\n  /******************************** DEBATE PARTICIPANT ACTIONS *****************************/\n\n  //Get Speaker Items\n  const getItems = async (\n    metadataType,\n    dispatchType,\n    dispatchError,\n    errorName\n  ) => {\n    // /////// MEMBER //////\n    // cases GET_MEMBER_ALL\n    // case ERROR MEMEBER_ERROR\n    // errorName = memberName\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    // const getDispatchType = (metadatatype) => {\n    //   if (metadatatype === \"member\") return GET_MEMBER_ALL;\n    // };\n\n    try {\n      const res = await axios.get(`/api/metadata/${metadataType}/all`, config);\n\n      console.error(\"[GET ITEMS Metadata State] Success \", res);\n      dispatch({ type: dispatchType, payload: res.data });\n    } catch (error) {\n      console.error(\"[GET ITEMS Metadata State] Error \", error);\n      dispatch({\n        type: dispatchError,\n        // payload: error.response.data[`${errorName}`],\n        payload: error.response,\n      });\n    }\n  };\n\n  // General Add Item Actions\n  const addItem = async (\n    addItemFromObject,\n    metadataType,\n    getTypeReducer, //Call for type in get Action\n    //errorTypeReducer, // Call for Error type in get aC\n\n    dispatchError,\n    errorName\n  ) => {\n    //setCurrentItemToNull();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\n        `/api/metadata/${metadataType}/new`,\n        addItemFromObject,\n        config\n      );\n\n      if (metadataType === \"member\") {\n        getItems(metadataType, getTypeReducer, dispatchError, \"memberName\");\n      } else if (metadataType === \"debatetitle\") {\n        getItems(metadataType, getTypeReducer, dispatchError, \"debateTitle\");\n      } else if (metadataType === \"portfolio\") {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      } else if (metadataType === \"issues\") {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      } else if (metadataType === \"tags\") {\n        getItems(metadataType, getTypeReducer, dispatchError, errorName);\n      }\n\n      return res.data.msg;\n    } catch (error) {\n      dispatch({\n        type: dispatchError,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  //    EDIT  ITEM General Prurpose Function\n  const editItem = async (\n    id,\n    metadataType,\n\n    errorName\n  ) => {\n    // console.log(`/api/metadata/${metadataType}/${id}/get`);\n    //Set the current speaker item to the current speaker item\n    setCurrentItemToNull();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.get(\n        `/api/metadata/${metadataType}/${id}/get`,\n        config\n      );\n      dispatch({\n        type: GET_CURRENT_ITEM,\n        payload: res.data,\n      });\n      return res.data;\n    } catch (error) {\n      // console.log(\"Error Object editItem Action\", error.response);\n      dispatch({\n        type: GET_CURRENT_ITEM_ERROR,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  //    Delete  ITEM General Prurpose Function\n  const deleteItem = async (\n    id,\n    metadataType,\n    dispatchType,\n    dispatchError,\n    errorName\n  ) => {\n    console.log(\n      `[DEBUG -DeleteDebateTitle] the value of metadata type is ${metadataType}`\n    );\n    console.log(`[DEBUG DELETE ITEM] /api/metadata/${metadataType}/${id}`);\n    //Set the current speaker item to the current speaker item\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.delete(\n        `/api/metadata/${metadataType}/${id}`,\n        config\n      );\n\n      console.log(`[DELETE ITEM] the value of res ${res.data}`);\n      console.log(`[DELETE ITEM] the dispatch type is ${dispatchType}`);\n\n      dispatch({\n        type: dispatchType,\n        payload: id,\n      });\n      return res.data;\n    } catch (error) {\n      // console.log(\"Error Object editItem Action\", error.response);\n      dispatch({\n        type: dispatchError,\n        payload: error.response.data[`${errorName}`],\n      });\n      return error;\n    }\n  };\n\n  // Set Current Item to Null\n  const setCurrentItemToNull = () => {\n    dispatch({ type: SET_CURRENT_ITEM_NULL });\n  };\n\n  return (\n    <MetadataContext.Provider\n      value={{\n        speakersItems: state.speakersItems,\n        currentSpeaker: state.currentSpeaker,\n        debateParticipants: state.debateParticipants,\n        currentDebateParticipants: state.currentDebateParticipants,\n        loading: state.loading,\n        errors: state.errors,\n        alerts: state.alerts,\n        currentMetadataItem: state.currentMetadataItem,\n        debateTitles: state.debateTitles,\n        portfolioItems: state.portfolioItems,\n        issuesItems: state.issuesItems,\n        tagsItems: state.tagsItems,\n\n        addSpeaker,\n        getSpeakerItems,\n        clearErrors,\n        editItem,\n        setCurrentItemToNull,\n        deleteItem,\n        addItem,\n        getItems,\n      }}\n    >\n      {props.children}\n    </MetadataContext.Provider>\n  );\n};\n\nexport default MetadataState;\n","import React, { Fragment, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Menu from \"./components/layout/Menu\";\nimport Content from \"./components/layout/Content\";\nimport Footer from \"./components/layout/Footer\";\n\nimport Login from \"./components/auth/Login-component\";\nimport Register from \"./components/auth/Register-Component\";\nimport BookIndex from \"./components/book/BookIndex\";\nimport MetadataIndex from \"./components/metadata/MetadataIndex.componenet\";\nimport { SearchTableNew } from \"./utils/SearchTableNew.component\";\n\n//Importing Private Route\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CheckLogin from \"./components/routing/CheckLogin\";\n\n// Import Set Auth Token\nimport setAuthToken from \"./utils/setAuthToken\";\n\n// Import Context API State\n\nimport BookState from \"./context/book/BookState\";\nimport AuthState from \"./context/auth/AuthState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport MetadataState from \"./context/metadata/MetadataState\";\n\n// Set Auth Context\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  return (\n    <AlertState>\n      <AuthState>\n        <MetadataState>\n          <BookState>\n            <Router>\n              <Fragment>\n                <Switch>\n                  {/* Check if this rendein can be conditional */}\n                  <CheckLogin path=\"/login\" component={Login} />\n                  {/* <Route exact path=\"/login\" component={Login} /> */}\n                </Switch>\n                {/*  <Switch>\n                  <Route exact path=\"/register\" component={Register} />\n                </Switch> */}\n                <div className=\"wrapper\">\n                  <PrivateRoute\n                    path={[\n                      \"/dashboard\",\n                      \"/bookindex/:id\",\n\n                      \"/metadata\",\n                      \"/tabledemo\",\n                    ]}\n                    component={Header}\n                  />\n                  <PrivateRoute\n                    path={[\n                      \"/dashboard\",\n                      \"/bookindex/:id\",\n\n                      \"/metadata\",\n                      \"/tabledemo\",\n                    ]}\n                    component={Menu}\n                  />\n\n                  {/* <Header />\n                  <Menu /> */}\n                  <Switch>\n                    <PrivateRoute exact path=\"/dashboard\" component={Content} />\n\n                    <PrivateRoute\n                      exact\n                      path=\"/bookindex/:id\"\n                      component={BookIndex}\n                    />\n\n                    <PrivateRoute\n                      exact\n                      path=\"/bookindex\"\n                      component={BookIndex}\n                    />\n\n                    <PrivateRoute\n                      exact\n                      path=\"/metadata\"\n                      component={MetadataIndex}\n                    />\n\n                    <Route exact path=\"/tabledemo\" component={SearchTableNew} />\n                  </Switch>\n                  <PrivateRoute\n                    path={[\n                      \"/dashboard\",\n                      \"/bookindex/:id\",\n\n                      \"/metadata\",\n                      \"/tabledemo\",\n                    ]}\n                    component={Footer}\n                  />\n                  {/* <Footer /> */}\n                </div>\n              </Fragment>\n            </Router>\n          </BookState>\n        </MetadataState>\n      </AuthState>\n    </AlertState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}